{
  "address": "0xAE4706F2822a55b209f1fEdf217b7bdbd970EdE4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentDaoAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialCitizens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_daoFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_requiredStakeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "councilMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAssignMainDaoRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAssignRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "citizens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "isCouncil",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createCreateSubDAOProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createDelegateMainDaoRoleTypeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "funToCall",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRegisterRoleHandlerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRevokeMainDaoRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFactory",
      "outputs": [
        {
          "internalType": "contract DaoFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "delegateVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedAssignMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedRevokeMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal[]",
          "name": "proposalsOut",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getSubDAOs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "subDAOsOut",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "internalAssignMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "internalDelegateMainDaoRoleType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "internalRegisterRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "internalRevokeMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentDao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fun",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executionSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "executionResult",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleDelegations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleHandlers",
      "outputs": [
        {
          "internalType": "contract IRoleHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subDAOCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subDAOs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "supportVote",
          "type": "bool"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2a1779343b7d7e8c74f33adcce1972d1fb5183713ec6361b78d170f9afd29bb1",
  "receipt": {
    "to": null,
    "from": "0x4293f83331A21C13621D77e1344bE08Ab046472F",
    "contractAddress": "0xAE4706F2822a55b209f1fEdf217b7bdbd970EdE4",
    "transactionIndex": 0,
    "gasUsed": "3397727",
    "logsBloom": "0x
    "blockHash": "0xf81c406ab5d497f39b20e0f48054957169f97e319cb8e661e42e836ddde11ea4",
    "transactionHash": "0x2a1779343b7d7e8c74f33adcce1972d1fb5183713ec6361b78d170f9afd29bb1",
    "logs": [],
    "blockNumber": 59,
    "cumulativeGasUsed": "3397727",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe1d39A4c586EAd5BB7de8EcFeC2DFa9E27E2b6b8",
    [
      "0xE970fd7835B6Aa2CBae1Ec30f6b3fa7FeE786E85"
    ],
    "0x7F838011E85c946Edf4af35a33F7A5549b8eF47F",
    "100000000000000000000"
  ],
  "numDeployments": 4,
  "solcInputHash": "05268faf59c3c2a193f2bfc71c68b50f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentDaoAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialCitizens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_daoFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"councilMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAssignMainDaoRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAssignRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"citizens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isCouncil\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createCreateSubDAOProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createDelegateMainDaoRoleTypeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"funToCall\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRegisterRoleHandlerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRevokeMainDaoRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFactory\",\"outputs\":[{\"internalType\":\"contract DaoFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedAssignMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedRevokeMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal[]\",\"name\":\"proposalsOut\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getSubDAOs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"subDAOsOut\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"internalAssignMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"internalDelegateMainDaoRoleType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"internalRegisterRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"internalRevokeMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentDao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleDelegations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleHandlers\",\"outputs\":[{\"internalType\":\"contract IRoleHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subDAOCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subDAOs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"supportVote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IdentityHandler.sol\":\"IdentityHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"contracts/DaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./IDaoContract.sol\\\";\\nimport \\\"./IRoleHandler.sol\\\";\\n\\n\\ncontract DaoFactory {\\n    function createDao(address _parent, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) public returns (address) {\\n        DaoContract newDao = new DaoContract(_parent, _initialCitizens, _councilMode, _daoFactory);\\n        return address(newDao);\\n    }\\n}\\n\\ncontract DaoContract is IDaoContract {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n\\n    mapping(uint256 => uint256) public roleCount;\\n\\n    mapping(uint256 => IRoleHandler) public roleHandlers;\\n    \\n    address public parentDao;\\n\\n    modifier onlyGovernance() {\\n        _;\\n    }\\n\\n    enum ProposalType{NONE, TEXT, CALL, CREATE_SUBDAO}\\n\\n    struct Proposal {\\n        ProposalType pType;\\n        string description;\\n        address target;\\n        uint256 amount;\\n        bytes fun;\\n        bytes data;\\n        uint256 support;\\n        uint256 totalVotes;\\n        bool executed;\\n        uint256 deadline;\\n        bool executionSuccess;\\n        bytes executionResult;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public proposalVotes;\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount;\\n    \\n    DaoFactory public daoFactory;\\n    address[] public subDAOs;\\n\\n    bool public councilMode;\\n\\n    constructor(address _parentDao, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) {\\n        require(_initialCitizens.length > 0, \\\"At least one initial citizen required\\\");\\n        parentDao = _parentDao;\\n        councilMode = _councilMode;\\n\\n        // Assign initial citizens to a role, e.g., role 1\\n        for (uint i = 0; i < _initialCitizens.length; i++) {\\n            roles[_initialCitizens[i]][1] = true; // Assuming role 1 is for citizens\\n            roleCount[1]++;\\n        }\\n        daoFactory = DaoFactory(_daoFactory);\\n    }\\n\\n    function getProposal(uint256 proposalId) public view returns (Proposal memory proposal) {\\n        return proposals[proposalId];\\n    }\\n    \\n    function subDAOCount() public view returns (uint256 count) {\\n        return subDAOs.length;\\n    }\\n\\n    function getProposals(uint256 from, uint256 count) public view returns (Proposal[] memory proposalsOut) {\\n        count = (from + count <= proposalCount) ? count :  proposalCount - from;\\n        proposalsOut = new Proposal[](count);\\n        for (uint i = 0 ; from + i < proposalCount && i < count; i++) {\\n            proposalsOut[i] = proposals[from + i];\\n        }\\n    }\\n    \\n    function getSubDAOs(uint256 from, uint256 count) public view returns (address[] memory subDAOsOut) {\\n        count = (from + count <= subDAOs.length) ? count :  subDAOs.length - from;\\n        subDAOsOut = new address[](count);\\n        for (uint i = 0 ; from + i < subDAOs.length && i < count; i++) {\\n            subDAOsOut[i] = subDAOs[from + i];\\n        }\\n    }\\n\\n    function createProposal(\\n        ProposalType pType,\\n        string memory description,\\n        address target,\\n        uint256 amount,\\n        bytes memory funToCall,\\n        bytes memory data,\\n        uint256 duration\\n    ) public {\\n        require(pType == ProposalType.TEXT || pType == ProposalType.CALL || pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n        require(pType != ProposalType.CREATE_SUBDAO || target == address(0), \\\"SubDAO proposals must not have a target\\\");\\n        Proposal storage proposal = proposals[proposalCount++];\\n        proposal.pType = pType;\\n        proposal.description = description;\\n        proposal.target = target;\\n        proposal.amount = amount;\\n        proposal.fun = funToCall;\\n        proposal.data = data;\\n        proposal.deadline = block.timestamp + duration;\\n    }\\n\\n    function voteOnProposal(uint256 proposalId, bool supportVote) public {\\n        require(roles[msg.sender][1], \\\"Not authorized to vote\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Voting period has ended\\\");\\n        require(!proposalVotes[proposalId][msg.sender], \\\"Already voted\\\");\\n\\n\\n        proposalVotes[proposalId][msg.sender] = true;\\n        proposal.totalVotes += 1;\\n        if (supportVote) {\\n            proposal.support += 1;\\n        }\\n    }\\n\\n    function checkProposalPassed(uint256 proposalId) internal view returns (bool) {\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 requiredSupport = (roleCount[1] * 66) / 100;\\n        return proposal.support >= requiredSupport && proposal.totalVotes - proposal.support <= (roleCount[1] * (100 - 66)) / 100;\\n    }\\n\\n    function executeProposal(uint256 proposalId) public {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Proposal has expired\\\");\\n\\n        if (checkProposalPassed(proposalId)) {\\n            proposal.executed = true;\\n            if (proposal.pType == ProposalType.CALL) {\\n                (bool success, bytes memory result) = executeCallProposal(proposal);\\n                proposal.executionSuccess = success;\\n                proposal.executionResult = result;\\n            } else if (proposal.pType == ProposalType.CREATE_SUBDAO) {\\n                createSubDAO(proposal);\\n            }\\n            // Add logic for other types of proposals if needed\\n        } else {\\n            revert(\\\"Proposal did not pass\\\");\\n        }\\n    }\\n\\n    function executeCallProposal(Proposal storage proposal) internal returns (bool, bytes memory) {\\n        require(proposal.target != address(0), \\\"Invalid target address\\\");\\n\\n        // Hash the function signature string to get the function selector\\n        bytes4 funcSelector = bytes4(keccak256(bytes(proposal.fun)));\\n        \\n        // Concatenate the function selector with the parameters\\n        bytes memory payload = abi.encodePacked(funcSelector, proposal.data);\\n        (bool success, bytes memory result) = proposal.target.call{value: proposal.amount}(payload);\\n        return (success, result);\\n    }\\n \\n    // Function to create a proposal for registering a role handler\\n    function createCreateSubDAOProposal(address[] memory citizens, bool isCouncil, uint256 duration) public {\\n        bytes memory parameters = abi.encode(citizens, isCouncil);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CREATE_SUBDAO, \\\"Register Role Handler\\\", address(this), 0, \\\"\\\", parameters, duration);\\n    }\\n\\n    function createSubDAO(Proposal storage proposal) internal {\\n        require(proposal.pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n\\n        (address[] memory initialCitizens, bool isCouncil) = abi.decode(proposal.data, (address[],bool));\\n \\n        DaoContract newSubDAO = DaoContract(daoFactory.createDao(address(this), initialCitizens, isCouncil, address(daoFactory)));\\n        subDAOs.push(address(newSubDAO));\\n\\n        // Additional    initialization for newSubDAO if required\\n    }\\n\\n    function delegateVoting(address delegate) public {\\n        // Delegate voting rights\\n    }\\n\\n    // Function to create a proposal for registering a role handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"internalRegisterRoleHandler(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(role, handlerAddress);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Register Role Handler\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n\\n    // Internal function to register a role handler\\n    function internalRegisterRoleHandler(uint256 role, address handlerAddress) external {\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n    // Function to create a proposal for assignig a role\\n    function createAssignRoleProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"assignRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Assign role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    // Functions\\n    function assignRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (!roles[entityAddress][role]) {\\n            roleCount[role]++;\\n            roles[entityAddress][role] = true;\\n        }\\n    }\\n    \\n    // Function to create a proposal for assignig a role\\n    function createRoleProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"revokeRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Revoke role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    function revokeRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (roles[entityAddress][role]) {\\n            require(roleCount[role] > 1 || role != 1, \\\"Dont kill the last citizen\\\");\\n            roleCount[role]--;\\n            roles[entityAddress][role] = false;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x65c1a8bb0fcc0e881d85290ce5b2b2e6df97e29ea2849700447eafa77f3210f6\"},\"contracts/IDaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IDaoContract {\\n    // register entityType handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) external;\\n    function assignRole(address entityAddress, uint256 role) external;\\n    function revokeRole(address entityAddress, uint256 role) external;\\n}\\n\",\"keccak256\":\"0xab43aa4e810559ea61dbcf1a97e41bea33ae1cec28b933ef0f5e9e32ff67ef99\"},\"contracts/IRoleHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IRoleHandler {\\n    \\n}\\n\",\"keccak256\":\"0x5e55cd3fdd91d9d601c77f71f5548ef08a58b66f5fc3cd19cf3682aa4c5640dc\"},\"contracts/IdentityHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./DaoContract.sol\\\";\\r\\n\\r\\ncontract IdentityHandler is DaoContract {\\r\\n    mapping(address => uint256) public stakes;\\r\\n\\r\\n    // Mapping to store delegations: roleType => delegate address\\r\\n    mapping(uint256 => address) public roleDelegations;\\r\\n\\r\\n    // Assuming a required stake amount is defined\\r\\n    uint256 public requiredStakeAmount;\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address _parentDaoAddress, address[] memory _initialCitizens, address _daoFactory, uint256 _requiredStakeAmount)\\r\\n        DaoContract(_parentDaoAddress, _initialCitizens, false, _daoFactory) {\\r\\n            requiredStakeAmount = _requiredStakeAmount;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Function to stake tokens (details to be implemented based on your token logic)\\r\\n    function stake(address user, uint256 amount) external {\\r\\n        // Assuming the staking logic is implemented here\\r\\n        stakes[user] = amount;\\r\\n    }\\r\\n\\r\\n  // Function to create a proposal for assigning a role\\r\\n    function createAssignMainDaoRoleProposal(address user, uint256 role, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalAssignMainDaoRole(address,uint256)\\\";\\r\\n\\r\\n        // Convert function definition from string to bytes\\r\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(user, role);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Assign Role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalAssignMainDaoRole(address user, uint256 role) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        DaoContract(parentDao).assignRole(user, role); // Call assignRole on the main DAO\\r\\n    }\\r\\n\\r\\n    function createRevokeMainDaoRoleProposal(address user, uint256 role, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalRevokeMainDaoRole(address,uint256)\\\";\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(user, role);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Revoke Role\\\", address(this), 0, bytes(functionDefinition), parameters, duration);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalRevokeMainDaoRole(address user, uint256 role) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        DaoContract(parentDao).revokeRole(user, role); // Call revokeRole on the main DAO\\r\\n    }\\r\\n\\r\\n    // Function to create a proposal for delegating a role type\\r\\n    function createDelegateMainDaoRoleTypeProposal(uint256 roleType, address delegate, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalDelegateMainDaoRoleType(uint256,address)\\\";\\r\\n\\r\\n        // Convert function definition from string to bytes\\r\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(roleType, delegate);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Delegate Role Type\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\r\\n    }\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalDelegateMainDaoRoleType(uint256 roleType, address delegate) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        roleDelegations[roleType] = delegate; // Delegate the role type\\r\\n    }\\r\\n\\r\\n    // Function to assign a role if it's delegated\\r\\n    function delegatedAssignMainDaoRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).assignRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n\\r\\n    // Function to revoke a role if it's delegated\\r\\n    function delegatedRevokeMainDaoRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).revokeRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0a87b4a197a59075afab0d4a008b8c3352ff6fb184a34525a6df84341c5dc30\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003dd538038062003dd58339810160408190526200003491620001e0565b838360008460008351116200009d5760405162461bcd60e51b815260206004820152602560248201527f4174206c65617374206f6e6520696e697469616c20636974697a656e207265716044820152641d5a5c995960da1b606482015260840160405180910390fd5b600380546001600160a01b0319166001600160a01b0386161790556009805460ff191683151517905560005b83518110156200017c576001600080868481518110620000ed57620000ed620002e3565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081206001808352908452918120805460ff19169415159490941790935590527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8054916200016183620002f9565b919050555080806200017390620002f9565b915050620000c9565b50600780546001600160a01b0319166001600160a01b0392909216919091179055505050600c555062000323915050565b80516001600160a01b0381168114620001c557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620001f757600080fd5b6200020285620001ad565b602086810151919550906001600160401b03808211156200022257600080fd5b818801915088601f8301126200023757600080fd5b8151818111156200024c576200024c620001ca565b8060051b604051601f19603f83011681018181108582111715620002745762000274620001ca565b60405291825284820192508381018501918b8311156200029357600080fd5b938501935b82851015620002bc57620002ac85620001ad565b8452938501939285019262000298565b809850505050505050620002d360408601620001ad565b6060959095015193969295505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200031c57634e487b7160e01b600052601160045260246000fd5b5060010190565b613aa280620003336000396000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c80637c78a6eb11610160578063bbc1ba10116100d8578063dd3d47461161008c578063f0723d9711610071578063f0723d9714610621578063fa0967d51461064c578063fcff4f1c1461065f57600080fd5b8063dd3d474614610606578063ea6e56b41461061957600080fd5b8063ccdbe25d116100bd578063ccdbe25d146105d7578063da35c664146105ea578063da59d3a2146105f357600080fd5b8063bbc1ba10146105a4578063c7f758a8146105b757600080fd5b806393fcff201161012f578063a257091a11610114578063a257091a14610551578063aa28574214610564578063adc9772e1461056d57600080fd5b806393fcff20146105085780639c14c3521461053e57600080fd5b80637c78a6eb1461049457806382993ee5146104a757806386f2424a146104c75780638e1f6a2c146104da57600080fd5b80632f27fa24116101f357806348f7f2a3116101c25780636de0aad8116101a75780636de0aad81461045057806373d6bc9b14610463578063765cb83a1461048357600080fd5b806348f7f2a3146104105780635e3b43651461043057600080fd5b80632f27fa24146103ad5780633372e937146103cd5780633e9ab77a146103ea57806348425e2a146103fd57600080fd5b80630f1f47881161024a57806316934fc41161022f57806316934fc41461035957806329865b50146103875780632e3036c71461039a57600080fd5b80630f1f4788146102eb5780631614665c1461034657600080fd5b8063013cf08b1461027c5780630912ed77146102b05780630a397d71146102c55780630d61b519146102d8575b600080fd5b61028f61028a366004612db3565b610672565b6040516102a79c9b9a99989796959493929190612eac565b60405180910390f35b6102c36102be366004612f9b565b610915565b005b6102c36102d3366004613082565b610bc2565b6102c36102e6366004612db3565b610c43565b6103216102f9366004612db3565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102a7565b6102c361035436600461313c565b610e6a565b61037961036736600461316c565b600a6020526000908152604090205481565b6040519081526020016102a7565b6102c3610395366004612f9b565b6110e0565b6102c36103a8366004612f9b565b6111da565b6103796103bb366004612db3565b60016020526000908152604090205481565b6009546103da9060ff1681565b60405190151581526020016102a7565b6102c36103f8366004613190565b6113fe565b61032161040b366004612db3565b6114d3565b6007546103219073ffffffffffffffffffffffffffffffffffffffff1681565b61044361043e3660046131c8565b61150a565b6040516102a791906132de565b6102c361045e366004612f9b565b611968565b6104766104713660046131c8565b611a48565b6040516102a791906133af565b6102c361049136600461316c565b50565b6102c36104a2366004613190565b611b6b565b6003546103219073ffffffffffffffffffffffffffffffffffffffff1681565b6102c36104d5366004613190565b611c40565b6103da6104e83660046133c2565b600460209081526000928352604080842090915290825290205460ff1681565b610321610516366004612db3565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102c361054c3660046133c2565b611d05565b6102c361055f3660046133c2565b611dc1565b610379600c5481565b6102c361057b366004612f9b565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600a6020526040902055565b6102c36105b2366004613190565b611ee7565b6105ca6105c5366004612db3565b611fac565b6040516102a791906133e7565b6102c36105e53660046133fa565b61232f565b61037960065481565b6102c36106013660046133fa565b6123e8565b6102c36106143660046134c5565b61249f565b600854610379565b6103da61062f366004612f9b565b600060208181529281526040808220909352908152205460ff1681565b6102c361065a366004612f9b565b612725565b6102c361066d366004612f9b565b6127d2565b6005602052600090815260409020805460018201805460ff909216929161069890613588565b80601f01602080910402602001604051908101604052809291908181526020018280546106c490613588565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061074d90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461077990613588565b80156107c65780601f1061079b576101008083540402835291602001916107c6565b820191906000526020600020905b8154815290600101906020018083116107a957829003601f168201915b5050505050908060050180546107db90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461080790613588565b80156108545780601f1061082957610100808354040283529160200191610854565b820191906000526020600020905b81548152906001019060200180831161083757829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff9384169650919492169261089290613588565b80601f01602080910402602001604051908101604052809291908181526020018280546108be90613588565b801561090b5780601f106108e05761010080835404028352916020019161090b565b820191906000526020600020905b8154815290600101906020018083116108ee57829003601f168201915b505050505090508c565b60095460ff16156109d15760035473ffffffffffffffffffffffffffffffffffffffff1633146109cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610a8e565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610a0257503330145b610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016109c3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610bbe576000818152600160208190526040909120541180610ae4575080600114155b610b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016109c3565b6000818152600160205260408120805491610b648361360b565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b60008383604051602001610bd7929190613640565b6040516020818303038152906040529050610c3d60036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c6572000000000000000000000081525030600060405180602001604052806000815250868861249f565b50505050565b6000818152600560205260409020600881015460ff1615610cc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016109c3565b80600901544210610d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016109c3565b610d368261289a565b15610e08576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610d8057610d80612dcc565b1415610de157600080610d9283612962565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610dda90600b8501906020840190612d1a565b5050505050565b6003815460ff166003811115610df957610df9612dcc565b1415610bbe57610bbe81612ad5565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016109c3565b336000908152602081815260408083206001845290915290205460ff16610eed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016109c3565b6000828152600560205260409020600881015460ff1615610f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016109c3565b80600901544210610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016109c3565b600083815260046020908152604080832033845290915290205460ff161561105b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016109c3565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600783018054919290916110b5908490613664565b909155505081156110db5760018160060160008282546110d59190613664565b90915550505b505050565b333014611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690630912ed77906044015b600060405180830381600087803b1580156111be57600080fd5b505af11580156111d2573d6000803e3d6000fd5b505050505050565b60095460ff16156112915760035473ffffffffffffffffffffffffffffffffffffffff16331461128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084016109c3565b61134e565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314806112c257503330145b61134e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016109c3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610bbe57600081815260016020526040812080549161139e8361367c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a61249f565b600881815481106114e357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60065460609061151a8385613664565b1115611533578260065461152e91906136b5565b611535565b815b91508167ffffffffffffffff81111561155057611550612fc7565b60405190808252806020026020018201604052801561160057816020015b6115ed604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b81526020019060019003908161156e5790505b50905060005b6006546116138286613664565b10801561161f57508281105b1561196157600560006116328387613664565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561166657611666612dcc565b600381111561167757611677612dcc565b815260200160018201805461168b90613588565b80601f01602080910402602001604051908101604052809291908181526020018280546116b790613588565b80156117045780601f106116d957610100808354040283529160200191611704565b820191906000526020600020905b8154815290600101906020018083116116e757829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161174b90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461177790613588565b80156117c45780601f10611799576101008083540402835291602001916117c4565b820191906000526020600020905b8154815290600101906020018083116117a757829003601f168201915b505050505081526020016005820180546117dd90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461180990613588565b80156118565780601f1061182b57610100808354040283529160200191611856565b820191906000526020600020905b81548152906001019060200180831161183957829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916118af90613588565b80601f01602080910402602001604051908101604052809291908181526020018280546118db90613588565b80156119285780601f106118fd57610100808354040283529160200191611928565b820191906000526020600020905b81548152906001019060200180831161190b57829003601f168201915b505050505081525050828281518110611943576119436136cc565b602002602001018190525080806119599061367c565b915050611606565b5092915050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff1680158015906119b157503373ffffffffffffffffffffffffffffffffffffffff8216145b156110db576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50505050505050565b600854606090611a588385613664565b1115611a7157600854611a6c9084906136b5565b611a73565b815b91508167ffffffffffffffff811115611a8e57611a8e612fc7565b604051908082528060200260200182016040528015611ab7578160200160208202803683370190505b50905060005b600854611aca8286613664565b108015611ad657508281105b15611961576008611ae78286613664565b81548110611af757611af76136cc565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611b3457611b346136cc565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611b638161367c565b915050611abd565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a61249f565b60006040518060600160405280602c8152602001613a17602c91399050600081905060008585604051602001611c9692919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111d29060029030600086868a61249f565b333014611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6000918252600b602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611e2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b60008211611e94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016109c3565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60006040518060600160405280603081526020016139e7603091399050600081905060008585604051602001611f3d92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c6520547970650000000000000000000000000000602083015291506111d29060029030600086868a61249f565b61202b604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff16600381111561205d5761205d612dcc565b600381111561206e5761206e612dcc565b815260200160018201805461208290613588565b80601f01602080910402602001604051908101604052809291908181526020018280546120ae90613588565b80156120fb5780601f106120d0576101008083540402835291602001916120fb565b820191906000526020600020905b8154815290600101906020018083116120de57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161214290613588565b80601f016020809104026020016040519081016040528092919081815260200182805461216e90613588565b80156121bb5780601f10612190576101008083540402835291602001916121bb565b820191906000526020600020905b81548152906001019060200180831161219e57829003601f168201915b505050505081526020016005820180546121d490613588565b80601f016020809104026020016040519081016040528092919081815260200182805461220090613588565b801561224d5780601f106122225761010080835404028352916020019161224d565b820191906000526020600020905b81548152906001019060200180831161223057829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916122a690613588565b80601f01602080910402602001604051908101604052809291908181526020018280546122d290613588565b801561231f5780601f106122f45761010080835404028352916020019161231f565b820191906000526020600020905b81548152906001019060200180831161230257829003601f168201915b5050505050815250509050919050565b60006040518060600160405280602a81526020016139bd602a91396040805173ffffffffffffffffffffffffffffffffffffffff87166020820152908101859052909150600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520526f6c6500000000000000000000000000000000000000000060208301529150610dda9060029030600086868961249f565b60006040518060600160405280602a8152602001613a43602a91396040805173ffffffffffffffffffffffffffffffffffffffff871660208201529081018590529091508190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20526f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a5b60018760038111156124b3576124b3612dcc565b14806124d0575060028760038111156124ce576124ce612dcc565b145b806124ec575060038760038111156124ea576124ea612dcc565b145b612552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016109c3565b600387600381111561256657612566612dcc565b141580612587575073ffffffffffffffffffffffffffffffffffffffff8516155b612613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016109c3565b600680546000916005918391826126298361367c565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561267c5761267c612dcc565b0217905550865161269690600183019060208a0190612d1a565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516126f59060048301906020870190612d1a565b50825161270b9060058301906020860190612d1a565b506127168242613664565b60099091015550505050505050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061276e57503373ffffffffffffffffffffffffffffffffffffffff8216145b156110db576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed7790604401611a11565b33301461283b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690632e3036c7906044016111a4565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5482906064906128e49060426136fb565b6128ee9190613738565b90508082600601541015801561295a5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546064906129399060226136fb565b6129439190613738565b8260060154836007015461295791906136b5565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff166129e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016109c3565b6000836004016040516129fc9190613843565b6040518091039020905060008185600501604051602001612a1e92919061384f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff9092169190612a84908690613883565b60006040518083038185875af1925050503d8060008114612ac1576040519150601f19603f3d011682016040523d82523d6000602084013e612ac6565b606091505b50909890975095505050505050565b6003815460ff166003811115612aed57612aed612dcc565b14612b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016109c3565b600080826005018054612b6690613588565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9290613588565b8015612bdf5780601f10612bb457610100808354040283529160200191612bdf565b820191906000526020600020905b815481529060010190602001808311612bc257829003601f168201915b5050505050806020019051810190612bf791906138aa565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd190612c5c903090879087908690600401613956565b6020604051808303816000875af1158015612c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9f919061399f565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b828054612d2690613588565b90600052602060002090601f016020900481019282612d485760008555612d8e565b82601f10612d6157805160ff1916838001178555612d8e565b82800160010185558215612d8e579182015b82811115612d8e578251825591602001919060010190612d73565b50612d9a929150612d9e565b5090565b5b80821115612d9a5760008155600101612d9f565b600060208284031215612dc557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612e32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015612e51578181015183820152602001612e39565b83811115610c3d5750506000910152565b60008151808452612e7a816020860160208601612e36565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612eb6818e612dfb565b61018060208201526000612ece61018083018e612e62565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612f02818c612e62565b905082810360a0840152612f16818b612e62565b90508860c08401528760e084015286151561010084015285610120840152612f4361014084018615159052565b828103610160840152612f568185612e62565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461049157600080fd5b8035612f9681612f69565b919050565b60008060408385031215612fae57600080fd5b8235612fb981612f69565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561303d5761303d612fc7565b604052919050565b600067ffffffffffffffff82111561305f5761305f612fc7565b5060051b60200190565b801515811461049157600080fd5b8035612f9681613069565b60008060006060848603121561309757600080fd5b833567ffffffffffffffff8111156130ae57600080fd5b8401601f810186136130bf57600080fd5b803560206130d46130cf83613045565b612ff6565b82815260059290921b830181019181810190898411156130f357600080fd5b938201935b8385101561311a57843561310b81612f69565b825293820193908201906130f8565b96506131299050878201613077565b9450505050604084013590509250925092565b6000806040838503121561314f57600080fd5b82359150602083013561316181613069565b809150509250929050565b60006020828403121561317e57600080fd5b813561318981612f69565b9392505050565b6000806000606084860312156131a557600080fd5b8335925060208401356131b781612f69565b929592945050506040919091013590565b600080604083850312156131db57600080fd5b50508035926020909101359150565b60006101806131fa848451612dfb565b602083015181602086015261321182860182612e62565b915050604083015161323b604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608501526080830151848203608086015261325d8282612e62565b91505060a083015184820360a08601526132778282612e62565b91505060c083015160c085015260e083015160e0850152610100808401516132a28287018215159052565b505061012083810151908501526101408084015115159085015261016080840151858303828701526132d48382612e62565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613351577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261333f8583516131ea565b94509285019290850190600101613305565b5092979650505050505050565b600081518084526020808501945080840160005b838110156133a457815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101613372565b509495945050505050565b602081526000613189602083018461335e565b600080604083850312156133d557600080fd5b82359150602083013561316181612f69565b60208152600061318960208301846131ea565b60008060006060848603121561340f57600080fd5b833561341a81612f69565b95602085013595506040909401359392505050565b600067ffffffffffffffff83111561344957613449612fc7565b61347a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612ff6565b905082815283838301111561348e57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126134b657600080fd5b6131898383356020850161342f565b600080600080600080600060e0888a0312156134e057600080fd5b8735600481106134ef57600080fd5b9650602088013567ffffffffffffffff8082111561350c57600080fd5b6135188b838c016134a5565b975061352660408b01612f8b565b965060608a0135955060808a013591508082111561354357600080fd5b61354f8b838c016134a5565b945060a08a013591508082111561356557600080fd5b506135728a828b016134a5565b92505060c0880135905092959891949750929550565b600181811c9082168061359c57607f821691505b602082108114156135d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161361a5761361a6135dc565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b604081526000613653604083018561335e565b905082151560208301529392505050565b60008219821115613677576136776135dc565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136ae576136ae6135dc565b5060010190565b6000828210156136c7576136c76135dc565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613733576137336135dc565b500290565b60008261376e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061378d57607f831692505b60208084108214156137c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156137dc576001811461380b57613837565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650613837565b876000528160002060005b8681101561382f5781548b820152908501908301613816565b505084890196505b50505050505092915050565b60006131898284613773565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061295a6004830184613773565b60008251613895818460208701612e36565b9190910192915050565b8051612f9681613069565b600080604083850312156138bd57600080fd5b825167ffffffffffffffff8111156138d457600080fd5b8301601f810185136138e557600080fd5b805160206138f56130cf83613045565b82815260059290921b8301810191818101908884111561391457600080fd5b938201935b8385101561393b57845161392c81612f69565b82529382019390820190613919565b955061394a905086820161389f565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff808716835260806020840152613986608084018761335e565b9415156040840152929092166060909101525092915050565b6000602082840312156139b157600080fd5b815161318981612f6956fe696e7465726e616c5265766f6b654d61696e44616f526f6c6528616464726573732c75696e7432353629696e7465726e616c44656c65676174654d61696e44616f526f6c65547970652875696e743235362c6164647265737329696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329696e7465726e616c41737369676e4d61696e44616f526f6c6528616464726573732c75696e7432353629a2646970667358221220f450c45b8ba36ee8cd623b392a94042cb35475d72133d1dd3cbecb98606fb94264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102775760003560e01c80637c78a6eb11610160578063bbc1ba10116100d8578063dd3d47461161008c578063f0723d9711610071578063f0723d9714610621578063fa0967d51461064c578063fcff4f1c1461065f57600080fd5b8063dd3d474614610606578063ea6e56b41461061957600080fd5b8063ccdbe25d116100bd578063ccdbe25d146105d7578063da35c664146105ea578063da59d3a2146105f357600080fd5b8063bbc1ba10146105a4578063c7f758a8146105b757600080fd5b806393fcff201161012f578063a257091a11610114578063a257091a14610551578063aa28574214610564578063adc9772e1461056d57600080fd5b806393fcff20146105085780639c14c3521461053e57600080fd5b80637c78a6eb1461049457806382993ee5146104a757806386f2424a146104c75780638e1f6a2c146104da57600080fd5b80632f27fa24116101f357806348f7f2a3116101c25780636de0aad8116101a75780636de0aad81461045057806373d6bc9b14610463578063765cb83a1461048357600080fd5b806348f7f2a3146104105780635e3b43651461043057600080fd5b80632f27fa24146103ad5780633372e937146103cd5780633e9ab77a146103ea57806348425e2a146103fd57600080fd5b80630f1f47881161024a57806316934fc41161022f57806316934fc41461035957806329865b50146103875780632e3036c71461039a57600080fd5b80630f1f4788146102eb5780631614665c1461034657600080fd5b8063013cf08b1461027c5780630912ed77146102b05780630a397d71146102c55780630d61b519146102d8575b600080fd5b61028f61028a366004612db3565b610672565b6040516102a79c9b9a99989796959493929190612eac565b60405180910390f35b6102c36102be366004612f9b565b610915565b005b6102c36102d3366004613082565b610bc2565b6102c36102e6366004612db3565b610c43565b6103216102f9366004612db3565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102a7565b6102c361035436600461313c565b610e6a565b61037961036736600461316c565b600a6020526000908152604090205481565b6040519081526020016102a7565b6102c3610395366004612f9b565b6110e0565b6102c36103a8366004612f9b565b6111da565b6103796103bb366004612db3565b60016020526000908152604090205481565b6009546103da9060ff1681565b60405190151581526020016102a7565b6102c36103f8366004613190565b6113fe565b61032161040b366004612db3565b6114d3565b6007546103219073ffffffffffffffffffffffffffffffffffffffff1681565b61044361043e3660046131c8565b61150a565b6040516102a791906132de565b6102c361045e366004612f9b565b611968565b6104766104713660046131c8565b611a48565b6040516102a791906133af565b6102c361049136600461316c565b50565b6102c36104a2366004613190565b611b6b565b6003546103219073ffffffffffffffffffffffffffffffffffffffff1681565b6102c36104d5366004613190565b611c40565b6103da6104e83660046133c2565b600460209081526000928352604080842090915290825290205460ff1681565b610321610516366004612db3565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102c361054c3660046133c2565b611d05565b6102c361055f3660046133c2565b611dc1565b610379600c5481565b6102c361057b366004612f9b565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600a6020526040902055565b6102c36105b2366004613190565b611ee7565b6105ca6105c5366004612db3565b611fac565b6040516102a791906133e7565b6102c36105e53660046133fa565b61232f565b61037960065481565b6102c36106013660046133fa565b6123e8565b6102c36106143660046134c5565b61249f565b600854610379565b6103da61062f366004612f9b565b600060208181529281526040808220909352908152205460ff1681565b6102c361065a366004612f9b565b612725565b6102c361066d366004612f9b565b6127d2565b6005602052600090815260409020805460018201805460ff909216929161069890613588565b80601f01602080910402602001604051908101604052809291908181526020018280546106c490613588565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061074d90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461077990613588565b80156107c65780601f1061079b576101008083540402835291602001916107c6565b820191906000526020600020905b8154815290600101906020018083116107a957829003601f168201915b5050505050908060050180546107db90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461080790613588565b80156108545780601f1061082957610100808354040283529160200191610854565b820191906000526020600020905b81548152906001019060200180831161083757829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff9384169650919492169261089290613588565b80601f01602080910402602001604051908101604052809291908181526020018280546108be90613588565b801561090b5780601f106108e05761010080835404028352916020019161090b565b820191906000526020600020905b8154815290600101906020018083116108ee57829003601f168201915b505050505090508c565b60095460ff16156109d15760035473ffffffffffffffffffffffffffffffffffffffff1633146109cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610a8e565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610a0257503330145b610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016109c3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610bbe576000818152600160208190526040909120541180610ae4575080600114155b610b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016109c3565b6000818152600160205260408120805491610b648361360b565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b60008383604051602001610bd7929190613640565b6040516020818303038152906040529050610c3d60036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c6572000000000000000000000081525030600060405180602001604052806000815250868861249f565b50505050565b6000818152600560205260409020600881015460ff1615610cc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016109c3565b80600901544210610d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016109c3565b610d368261289a565b15610e08576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610d8057610d80612dcc565b1415610de157600080610d9283612962565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610dda90600b8501906020840190612d1a565b5050505050565b6003815460ff166003811115610df957610df9612dcc565b1415610bbe57610bbe81612ad5565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016109c3565b336000908152602081815260408083206001845290915290205460ff16610eed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016109c3565b6000828152600560205260409020600881015460ff1615610f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016109c3565b80600901544210610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016109c3565b600083815260046020908152604080832033845290915290205460ff161561105b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016109c3565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600783018054919290916110b5908490613664565b909155505081156110db5760018160060160008282546110d59190613664565b90915550505b505050565b333014611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690630912ed77906044015b600060405180830381600087803b1580156111be57600080fd5b505af11580156111d2573d6000803e3d6000fd5b505050505050565b60095460ff16156112915760035473ffffffffffffffffffffffffffffffffffffffff16331461128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084016109c3565b61134e565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314806112c257503330145b61134e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016109c3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610bbe57600081815260016020526040812080549161139e8361367c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a61249f565b600881815481106114e357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60065460609061151a8385613664565b1115611533578260065461152e91906136b5565b611535565b815b91508167ffffffffffffffff81111561155057611550612fc7565b60405190808252806020026020018201604052801561160057816020015b6115ed604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b81526020019060019003908161156e5790505b50905060005b6006546116138286613664565b10801561161f57508281105b1561196157600560006116328387613664565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561166657611666612dcc565b600381111561167757611677612dcc565b815260200160018201805461168b90613588565b80601f01602080910402602001604051908101604052809291908181526020018280546116b790613588565b80156117045780601f106116d957610100808354040283529160200191611704565b820191906000526020600020905b8154815290600101906020018083116116e757829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161174b90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461177790613588565b80156117c45780601f10611799576101008083540402835291602001916117c4565b820191906000526020600020905b8154815290600101906020018083116117a757829003601f168201915b505050505081526020016005820180546117dd90613588565b80601f016020809104026020016040519081016040528092919081815260200182805461180990613588565b80156118565780601f1061182b57610100808354040283529160200191611856565b820191906000526020600020905b81548152906001019060200180831161183957829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916118af90613588565b80601f01602080910402602001604051908101604052809291908181526020018280546118db90613588565b80156119285780601f106118fd57610100808354040283529160200191611928565b820191906000526020600020905b81548152906001019060200180831161190b57829003601f168201915b505050505081525050828281518110611943576119436136cc565b602002602001018190525080806119599061367c565b915050611606565b5092915050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff1680158015906119b157503373ffffffffffffffffffffffffffffffffffffffff8216145b156110db576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b50505050505050565b600854606090611a588385613664565b1115611a7157600854611a6c9084906136b5565b611a73565b815b91508167ffffffffffffffff811115611a8e57611a8e612fc7565b604051908082528060200260200182016040528015611ab7578160200160208202803683370190505b50905060005b600854611aca8286613664565b108015611ad657508281105b15611961576008611ae78286613664565b81548110611af757611af76136cc565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611b3457611b346136cc565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611b638161367c565b915050611abd565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a61249f565b60006040518060600160405280602c8152602001613a17602c91399050600081905060008585604051602001611c9692919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111d29060029030600086868a61249f565b333014611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6000918252600b602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611e2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b60008211611e94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016109c3565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60006040518060600160405280603081526020016139e7603091399050600081905060008585604051602001611f3d92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c6520547970650000000000000000000000000000602083015291506111d29060029030600086868a61249f565b61202b604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff16600381111561205d5761205d612dcc565b600381111561206e5761206e612dcc565b815260200160018201805461208290613588565b80601f01602080910402602001604051908101604052809291908181526020018280546120ae90613588565b80156120fb5780601f106120d0576101008083540402835291602001916120fb565b820191906000526020600020905b8154815290600101906020018083116120de57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161214290613588565b80601f016020809104026020016040519081016040528092919081815260200182805461216e90613588565b80156121bb5780601f10612190576101008083540402835291602001916121bb565b820191906000526020600020905b81548152906001019060200180831161219e57829003601f168201915b505050505081526020016005820180546121d490613588565b80601f016020809104026020016040519081016040528092919081815260200182805461220090613588565b801561224d5780601f106122225761010080835404028352916020019161224d565b820191906000526020600020905b81548152906001019060200180831161223057829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916122a690613588565b80601f01602080910402602001604051908101604052809291908181526020018280546122d290613588565b801561231f5780601f106122f45761010080835404028352916020019161231f565b820191906000526020600020905b81548152906001019060200180831161230257829003601f168201915b5050505050815250509050919050565b60006040518060600160405280602a81526020016139bd602a91396040805173ffffffffffffffffffffffffffffffffffffffff87166020820152908101859052909150600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520526f6c6500000000000000000000000000000000000000000060208301529150610dda9060029030600086868961249f565b60006040518060600160405280602a8152602001613a43602a91396040805173ffffffffffffffffffffffffffffffffffffffff871660208201529081018590529091508190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20526f6c65000000000000000000000000000000000000000000602083015291506111d29060029030600086868a5b60018760038111156124b3576124b3612dcc565b14806124d0575060028760038111156124ce576124ce612dcc565b145b806124ec575060038760038111156124ea576124ea612dcc565b145b612552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016109c3565b600387600381111561256657612566612dcc565b141580612587575073ffffffffffffffffffffffffffffffffffffffff8516155b612613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016109c3565b600680546000916005918391826126298361367c565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561267c5761267c612dcc565b0217905550865161269690600183019060208a0190612d1a565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516126f59060048301906020870190612d1a565b50825161270b9060058301906020860190612d1a565b506127168242613664565b60099091015550505050505050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061276e57503373ffffffffffffffffffffffffffffffffffffffff8216145b156110db576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed7790604401611a11565b33301461283b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016109c3565b6003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690632e3036c7906044016111a4565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5482906064906128e49060426136fb565b6128ee9190613738565b90508082600601541015801561295a5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546064906129399060226136fb565b6129439190613738565b8260060154836007015461295791906136b5565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff166129e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016109c3565b6000836004016040516129fc9190613843565b6040518091039020905060008185600501604051602001612a1e92919061384f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff9092169190612a84908690613883565b60006040518083038185875af1925050503d8060008114612ac1576040519150601f19603f3d011682016040523d82523d6000602084013e612ac6565b606091505b50909890975095505050505050565b6003815460ff166003811115612aed57612aed612dcc565b14612b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016109c3565b600080826005018054612b6690613588565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9290613588565b8015612bdf5780601f10612bb457610100808354040283529160200191612bdf565b820191906000526020600020905b815481529060010190602001808311612bc257829003601f168201915b5050505050806020019051810190612bf791906138aa565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd190612c5c903090879087908690600401613956565b6020604051808303816000875af1158015612c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9f919061399f565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b828054612d2690613588565b90600052602060002090601f016020900481019282612d485760008555612d8e565b82601f10612d6157805160ff1916838001178555612d8e565b82800160010185558215612d8e579182015b82811115612d8e578251825591602001919060010190612d73565b50612d9a929150612d9e565b5090565b5b80821115612d9a5760008155600101612d9f565b600060208284031215612dc557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612e32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015612e51578181015183820152602001612e39565b83811115610c3d5750506000910152565b60008151808452612e7a816020860160208601612e36565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612eb6818e612dfb565b61018060208201526000612ece61018083018e612e62565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612f02818c612e62565b905082810360a0840152612f16818b612e62565b90508860c08401528760e084015286151561010084015285610120840152612f4361014084018615159052565b828103610160840152612f568185612e62565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461049157600080fd5b8035612f9681612f69565b919050565b60008060408385031215612fae57600080fd5b8235612fb981612f69565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561303d5761303d612fc7565b604052919050565b600067ffffffffffffffff82111561305f5761305f612fc7565b5060051b60200190565b801515811461049157600080fd5b8035612f9681613069565b60008060006060848603121561309757600080fd5b833567ffffffffffffffff8111156130ae57600080fd5b8401601f810186136130bf57600080fd5b803560206130d46130cf83613045565b612ff6565b82815260059290921b830181019181810190898411156130f357600080fd5b938201935b8385101561311a57843561310b81612f69565b825293820193908201906130f8565b96506131299050878201613077565b9450505050604084013590509250925092565b6000806040838503121561314f57600080fd5b82359150602083013561316181613069565b809150509250929050565b60006020828403121561317e57600080fd5b813561318981612f69565b9392505050565b6000806000606084860312156131a557600080fd5b8335925060208401356131b781612f69565b929592945050506040919091013590565b600080604083850312156131db57600080fd5b50508035926020909101359150565b60006101806131fa848451612dfb565b602083015181602086015261321182860182612e62565b915050604083015161323b604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608501526080830151848203608086015261325d8282612e62565b91505060a083015184820360a08601526132778282612e62565b91505060c083015160c085015260e083015160e0850152610100808401516132a28287018215159052565b505061012083810151908501526101408084015115159085015261016080840151858303828701526132d48382612e62565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613351577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261333f8583516131ea565b94509285019290850190600101613305565b5092979650505050505050565b600081518084526020808501945080840160005b838110156133a457815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101613372565b509495945050505050565b602081526000613189602083018461335e565b600080604083850312156133d557600080fd5b82359150602083013561316181612f69565b60208152600061318960208301846131ea565b60008060006060848603121561340f57600080fd5b833561341a81612f69565b95602085013595506040909401359392505050565b600067ffffffffffffffff83111561344957613449612fc7565b61347a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612ff6565b905082815283838301111561348e57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126134b657600080fd5b6131898383356020850161342f565b600080600080600080600060e0888a0312156134e057600080fd5b8735600481106134ef57600080fd5b9650602088013567ffffffffffffffff8082111561350c57600080fd5b6135188b838c016134a5565b975061352660408b01612f8b565b965060608a0135955060808a013591508082111561354357600080fd5b61354f8b838c016134a5565b945060a08a013591508082111561356557600080fd5b506135728a828b016134a5565b92505060c0880135905092959891949750929550565b600181811c9082168061359c57607f821691505b602082108114156135d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161361a5761361a6135dc565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b604081526000613653604083018561335e565b905082151560208301529392505050565b60008219821115613677576136776135dc565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136ae576136ae6135dc565b5060010190565b6000828210156136c7576136c76135dc565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613733576137336135dc565b500290565b60008261376e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061378d57607f831692505b60208084108214156137c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156137dc576001811461380b57613837565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650613837565b876000528160002060005b8681101561382f5781548b820152908501908301613816565b505084890196505b50505050505092915050565b60006131898284613773565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061295a6004830184613773565b60008251613895818460208701612e36565b9190910192915050565b8051612f9681613069565b600080604083850312156138bd57600080fd5b825167ffffffffffffffff8111156138d457600080fd5b8301601f810185136138e557600080fd5b805160206138f56130cf83613045565b82815260059290921b8301810191818101908884111561391457600080fd5b938201935b8385101561393b57845161392c81612f69565b82529382019390820190613919565b955061394a905086820161389f565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff808716835260806020840152613986608084018761335e565b9415156040840152929092166060909101525092915050565b6000602082840312156139b157600080fd5b815161318981612f6956fe696e7465726e616c5265766f6b654d61696e44616f526f6c6528616464726573732c75696e7432353629696e7465726e616c44656c65676174654d61696e44616f526f6c65547970652875696e743235362c6164647265737329696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329696e7465726e616c41737369676e4d61696e44616f526f6c6528616464726573732c75696e7432353629a2646970667358221220f450c45b8ba36ee8cd623b392a94042cb35475d72133d1dd3cbecb98606fb94264736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 44,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 48,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 53,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleHandlers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IRoleHandler)1128)"
      },
      {
        "astId": 55,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "parentDao",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 96,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 101,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)90_storage)"
      },
      {
        "astId": 103,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "daoFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(DaoFactory)36"
      },
      {
        "astId": 109,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "subDAOs",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 111,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "councilMode",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 1137,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "stakes",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1141,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleDelegations",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1143,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "requiredStakeAmount",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DaoFactory)36": {
        "encoding": "inplace",
        "label": "contract DaoFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleHandler)1128": {
        "encoding": "inplace",
        "label": "contract IRoleHandler",
        "numberOfBytes": "20"
      },
      "t_enum(ProposalType)64": {
        "encoding": "inplace",
        "label": "enum DaoContract.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_contract(IRoleHandler)1128)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IRoleHandler)",
        "numberOfBytes": "32",
        "value": "t_contract(IRoleHandler)1128"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)90_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)90_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)90_storage": {
        "encoding": "inplace",
        "label": "struct DaoContract.Proposal",
        "members": [
          {
            "astId": 67,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "pType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposalType)64"
          },
          {
            "astId": 69,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 73,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "fun",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes_storage"
          },
          {
            "astId": 79,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "support",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "totalVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 83,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "deadline",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionSuccess",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionResult",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}