{
  "address": "0x0Ce6B793a91873ae5152fCdf68C16C7F53A095c3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentDaoAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialCitizens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_daoFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_requiredStakeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "councilMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAssignManagedRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "citizens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "isCouncil",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createCreateSubDAOProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createDelegateMainDaoRoleTypeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "funToCall",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRegisterRoleHandlerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRevokeManagedRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFactory",
      "outputs": [
        {
          "internalType": "contract DaoFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "delegateVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedAssignMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedRevokeMainDaoRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal[]",
          "name": "proposalsOut",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getSubDAOs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "subDAOsOut",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "internalDelegateMainDaoRoleType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "internalRegisterRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentDao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fun",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executionSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "executionResult",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleDelegations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleHandlers",
      "outputs": [
        {
          "internalType": "contract IRoleHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subDAOCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subDAOs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "supportVote",
          "type": "bool"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x31e1247d48e241a31c6e10ac7d0c7c4d5e9e8853b601bf5e4ededaa458951065",
  "receipt": {
    "to": null,
    "from": "0x4293f83331A21C13621D77e1344bE08Ab046472F",
    "contractAddress": "0x0Ce6B793a91873ae5152fCdf68C16C7F53A095c3",
    "transactionIndex": 0,
    "gasUsed": "3171251",
    "logsBloom": "0x
    "blockHash": "0xbc6b22e26c549a50b529e0da0addc7b01919ea3673ef9ae1fa8ceb93a0f3ae17",
    "transactionHash": "0x31e1247d48e241a31c6e10ac7d0c7c4d5e9e8853b601bf5e4ededaa458951065",
    "logs": [],
    "blockNumber": 111,
    "cumulativeGasUsed": "3171251",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD76481c1695860fB1043d25Ea84c298F8a360afE",
    [
      "0xE970fd7835B6Aa2CBae1Ec30f6b3fa7FeE786E85"
    ],
    "0x0f9DA506728dD640B49Db9bA6b4BA7De0b0CE243",
    "100000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "aee9300c7c4f28504b0eada0a8dc950e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentDaoAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialCitizens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_daoFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"councilMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAssignManagedRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"citizens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isCouncil\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createCreateSubDAOProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createDelegateMainDaoRoleTypeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"funToCall\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRegisterRoleHandlerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRevokeManagedRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFactory\",\"outputs\":[{\"internalType\":\"contract DaoFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedAssignMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedRevokeMainDaoRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal[]\",\"name\":\"proposalsOut\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getSubDAOs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"subDAOsOut\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"internalDelegateMainDaoRoleType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"internalRegisterRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentDao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleDelegations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleHandlers\",\"outputs\":[{\"internalType\":\"contract IRoleHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subDAOCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subDAOs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"supportVote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IdentityHandler.sol\":\"IdentityHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"contracts/DaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./IDaoContract.sol\\\";\\nimport \\\"./IRoleHandler.sol\\\";\\n\\n\\ncontract DaoFactory {\\n    function createDao(address _parent, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) public returns (address) {\\n        DaoContract newDao = new DaoContract(_parent, _initialCitizens, _councilMode, _daoFactory);\\n        return address(newDao);\\n    }\\n}\\n\\ncontract DaoContract is IDaoContract {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n\\n    mapping(uint256 => uint256) public roleCount;\\n\\n    mapping(uint256 => IRoleHandler) public roleHandlers;\\n    \\n    address public parentDao;\\n\\n    modifier onlyGovernance() {\\n        _;\\n    }\\n\\n    enum ProposalType{NONE, TEXT, CALL, CREATE_SUBDAO}\\n\\n    struct Proposal {\\n        ProposalType pType;\\n        string description;\\n        address target;\\n        uint256 amount;\\n        bytes fun;\\n        bytes data;\\n        uint256 support;\\n        uint256 totalVotes;\\n        bool executed;\\n        uint256 deadline;\\n        bool executionSuccess;\\n        bytes executionResult;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public proposalVotes;\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount;\\n    \\n    DaoFactory public daoFactory;\\n    address[] public subDAOs;\\n\\n    bool public councilMode;\\n\\n    constructor(address _parentDao, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) {\\n        require(_initialCitizens.length > 0, \\\"At least one initial citizen required\\\");\\n        parentDao = _parentDao;\\n        councilMode = _councilMode;\\n\\n        // Assign initial citizens to a role, e.g., role 1\\n        for (uint i = 0; i < _initialCitizens.length; i++) {\\n            roles[_initialCitizens[i]][1] = true; // Assuming role 1 is for citizens\\n            roleCount[1]++;\\n        }\\n        daoFactory = DaoFactory(_daoFactory);\\n    }\\n\\n    function getProposal(uint256 proposalId) public view returns (Proposal memory proposal) {\\n        return proposals[proposalId];\\n    }\\n    \\n    function subDAOCount() public view returns (uint256 count) {\\n        return subDAOs.length;\\n    }\\n\\n    function getProposals(uint256 from, uint256 count) public view returns (Proposal[] memory proposalsOut) {\\n        count = (from + count <= proposalCount) ? count :  proposalCount - from;\\n        proposalsOut = new Proposal[](count);\\n        for (uint i = 0 ; from + i < proposalCount && i < count; i++) {\\n            proposalsOut[i] = proposals[from + i];\\n        }\\n    }\\n    \\n    function getSubDAOs(uint256 from, uint256 count) public view returns (address[] memory subDAOsOut) {\\n        count = (from + count <= subDAOs.length) ? count :  subDAOs.length - from;\\n        subDAOsOut = new address[](count);\\n        for (uint i = 0 ; from + i < subDAOs.length && i < count; i++) {\\n            subDAOsOut[i] = subDAOs[from + i];\\n        }\\n    }\\n\\n    function createProposal(\\n        ProposalType pType,\\n        string memory description,\\n        address target,\\n        uint256 amount,\\n        bytes memory funToCall,\\n        bytes memory data,\\n        uint256 duration\\n    ) public {\\n        require(pType == ProposalType.TEXT || pType == ProposalType.CALL || pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n        require(pType != ProposalType.CREATE_SUBDAO || target == address(0), \\\"SubDAO proposals must not have a target\\\");\\n        Proposal storage proposal = proposals[proposalCount++];\\n        proposal.pType = pType;\\n        proposal.description = description;\\n        proposal.target = target;\\n        proposal.amount = amount;\\n        proposal.fun = funToCall;\\n        proposal.data = data;\\n        proposal.deadline = block.timestamp + duration;\\n    }\\n\\n    function voteOnProposal(uint256 proposalId, bool supportVote) public {\\n        require(roles[msg.sender][1], \\\"Not authorized to vote\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Voting period has ended\\\");\\n        require(!proposalVotes[proposalId][msg.sender], \\\"Already voted\\\");\\n\\n\\n        proposalVotes[proposalId][msg.sender] = true;\\n        proposal.totalVotes += 1;\\n        if (supportVote) {\\n            proposal.support += 1;\\n        }\\n    }\\n\\n    function checkProposalPassed(uint256 proposalId) internal view returns (bool) {\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 requiredSupport = (roleCount[1] * 66) / 100;\\n        return proposal.support >= requiredSupport && proposal.totalVotes - proposal.support <= (roleCount[1] * (100 - 66)) / 100;\\n    }\\n\\n    function executeProposal(uint256 proposalId) public {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Proposal has expired\\\");\\n\\n        if (checkProposalPassed(proposalId)) {\\n            proposal.executed = true;\\n            if (proposal.pType == ProposalType.CALL) {\\n                (bool success, bytes memory result) = executeCallProposal(proposal);\\n                proposal.executionSuccess = success;\\n                proposal.executionResult = result;\\n            } else if (proposal.pType == ProposalType.CREATE_SUBDAO) {\\n                createSubDAO(proposal);\\n            }\\n            // Add logic for other types of proposals if needed\\n        } else {\\n            revert(\\\"Proposal did not pass\\\");\\n        }\\n    }\\n\\n    function executeCallProposal(Proposal storage proposal) internal returns (bool, bytes memory) {\\n        require(proposal.target != address(0), \\\"Invalid target address\\\");\\n\\n        // Hash the function signature string to get the function selector\\n        bytes4 funcSelector = bytes4(keccak256(bytes(proposal.fun)));\\n        \\n        // Concatenate the function selector with the parameters\\n        bytes memory payload = abi.encodePacked(funcSelector, proposal.data);\\n        (bool success, bytes memory result) = proposal.target.call{value: proposal.amount}(payload);\\n        return (success, result);\\n    }\\n \\n    // Function to create a proposal for registering a role handler\\n    function createCreateSubDAOProposal(address[] memory citizens, bool isCouncil, uint256 duration) public {\\n        bytes memory parameters = abi.encode(citizens, isCouncil);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CREATE_SUBDAO, \\\"Register Role Handler\\\", address(this), 0, \\\"\\\", parameters, duration);\\n    }\\n\\n    function createSubDAO(Proposal storage proposal) internal {\\n        require(proposal.pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n\\n        (address[] memory initialCitizens, bool isCouncil) = abi.decode(proposal.data, (address[],bool));\\n \\n        DaoContract newSubDAO = DaoContract(daoFactory.createDao(address(this), initialCitizens, isCouncil, address(daoFactory)));\\n        subDAOs.push(address(newSubDAO));\\n\\n        // Additional    initialization for newSubDAO if required\\n    }\\n\\n    function delegateVoting(address delegate) public {\\n        // Delegate voting rights\\n    }\\n\\n    // Function to create a proposal for registering a role handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"internalRegisterRoleHandler(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(role, handlerAddress);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Register Role Handler\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n\\n    // Internal function to register a role handler\\n    function internalRegisterRoleHandler(uint256 role, address handlerAddress) external {\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n    // Function to create a proposal for assignig a role\\n    function createAssignManagedRoleProposal(address target, uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"assignRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Assign role\\\", target, 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    // Functions\\n    function assignRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (!roles[entityAddress][role]) {\\n            roleCount[role]++;\\n            roles[entityAddress][role] = true;\\n        }\\n    }\\n    \\n    // Function to create a proposal for assignig a role\\n    function createRevokeManagedRoleProposal(address target, uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"revokeRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Revoke role\\\", target, 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    function revokeRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (roles[entityAddress][role]) {\\n            require(roleCount[role] > 1 || role != 1, \\\"Dont kill the last citizen\\\");\\n            roleCount[role]--;\\n            roles[entityAddress][role] = false;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x9f084d660af9028450c58f7cda661f8434d3a46d75bebafb52d69cb99f5e69bc\"},\"contracts/IDaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IDaoContract {\\n    // register entityType handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) external;\\n    function assignRole(address entityAddress, uint256 role) external;\\n    function revokeRole(address entityAddress, uint256 role) external;\\n}\\n\",\"keccak256\":\"0xab43aa4e810559ea61dbcf1a97e41bea33ae1cec28b933ef0f5e9e32ff67ef99\"},\"contracts/IRoleHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IRoleHandler {\\n    \\n}\\n\",\"keccak256\":\"0x5e55cd3fdd91d9d601c77f71f5548ef08a58b66f5fc3cd19cf3682aa4c5640dc\"},\"contracts/IdentityHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./DaoContract.sol\\\";\\r\\n\\r\\ncontract IdentityHandler is DaoContract {\\r\\n    mapping(address => uint256) public stakes;\\r\\n\\r\\n    // Mapping to store delegations: roleType => delegate address\\r\\n    mapping(uint256 => address) public roleDelegations;\\r\\n\\r\\n    // Assuming a required stake amount is defined\\r\\n    uint256 public requiredStakeAmount;\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address _parentDaoAddress, address[] memory _initialCitizens, address _daoFactory, uint256 _requiredStakeAmount)\\r\\n        DaoContract(_parentDaoAddress, _initialCitizens, false, _daoFactory) {\\r\\n            requiredStakeAmount = _requiredStakeAmount;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Function to stake tokens (details to be implemented based on your token logic)\\r\\n    function stake(address user, uint256 amount) external {\\r\\n        // Assuming the staking logic is implemented here\\r\\n        stakes[user] = amount;\\r\\n    }\\r\\n\\r\\n    // Function to create a proposal for delegating a role type\\r\\n    function createDelegateMainDaoRoleTypeProposal(uint256 roleType, address delegate, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalDelegateMainDaoRoleType(uint256,address)\\\";\\r\\n\\r\\n        // Convert function definition from string to bytes\\r\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(roleType, delegate);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Delegate Role Type\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\r\\n    }\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalDelegateMainDaoRoleType(uint256 roleType, address delegate) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        roleDelegations[roleType] = delegate; // Delegate the role type\\r\\n    }\\r\\n\\r\\n    // Function to assign a role if it's delegated\\r\\n    function delegatedAssignMainDaoRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).assignRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n\\r\\n    // Function to revoke a role if it's delegated\\r\\n    function delegatedRevokeMainDaoRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).revokeRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x02362eb6ac1755c24e467cde42615bc34e48f64cf99960b19c541ffb47b0bec1\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620039b2380380620039b28339810160408190526200003491620001e0565b838360008460008351116200009d5760405162461bcd60e51b815260206004820152602560248201527f4174206c65617374206f6e6520696e697469616c20636974697a656e207265716044820152641d5a5c995960da1b606482015260840160405180910390fd5b600380546001600160a01b0319166001600160a01b0386161790556009805460ff191683151517905560005b83518110156200017c576001600080868481518110620000ed57620000ed620002e3565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081206001808352908452918120805460ff19169415159490941790935590527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8054916200016183620002f9565b919050555080806200017390620002f9565b915050620000c9565b50600780546001600160a01b0319166001600160a01b0392909216919091179055505050600c555062000323915050565b80516001600160a01b0381168114620001c557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620001f757600080fd5b6200020285620001ad565b602086810151919550906001600160401b03808211156200022257600080fd5b818801915088601f8301126200023757600080fd5b8151818111156200024c576200024c620001ca565b8060051b604051601f19603f83011681018181108582111715620002745762000274620001ca565b60405291825284820192508381018501918b8311156200029357600080fd5b938501935b82851015620002bc57620002ac85620001ad565b8452938501939285019262000298565b809850505050505050620002d360408601620001ad565b6060959095015193969295505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200031c57634e487b7160e01b600052601160045260246000fd5b5060010190565b61367f80620003336000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806373d6bc9b1161012a578063aa285742116100bd578063da35c6641161008c578063ea6e56b411610071578063ea6e56b414610574578063f0723d971461057c578063fa0967d5146105a757600080fd5b8063da35c66414610558578063dd3d47461461056157600080fd5b8063aa285742146104e5578063adc9772e146104ee578063bbc1ba1014610525578063c7f758a81461053857600080fd5b80638e1f6a2c116100f95780638e1f6a2c1461045b57806393fcff20146104895780639c14c352146104bf578063a257091a146104d257600080fd5b806373d6bc9b146103f7578063765cb83a1461041757806382993ee51461042857806386f2424a1461044857600080fd5b80632f27fa24116101a25780635764dfcf116101715780635764dfcf1461039e5780635e3b4365146103b15780636a72da6a146103d15780636de0aad8146103e457600080fd5b80632f27fa241461032e5780633372e9371461034e57806348425e2a1461036b57806348f7f2a31461037e57600080fd5b80630f1f4788116101de5780630f1f47881461027f5780631614665c146102da57806316934fc4146102ed5780632e3036c71461031b57600080fd5b8063013cf08b146102105780630912ed77146102445780630a397d71146102595780630d61b5191461026c575b600080fd5b61022361021e3660046129d1565b6105ba565b60405161023b9c9b9a99989796959493929190612aca565b60405180910390f35b610257610252366004612bb9565b61085d565b005b610257610267366004612ca0565b610b0a565b61025761027a3660046129d1565b610b8b565b6102b561028d3660046129d1565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161023b565b6102576102e8366004612d5a565b610db2565b61030d6102fb366004612d8a565b600a6020526000908152604090205481565b60405190815260200161023b565b610257610329366004612bb9565b611028565b61030d61033c3660046129d1565b60016020526000908152604090205481565b60095461035b9060ff1681565b604051901515815260200161023b565b6102b56103793660046129d1565b61124c565b6007546102b59073ffffffffffffffffffffffffffffffffffffffff1681565b6102576103ac366004612dae565b611283565b6103c46103bf366004612df6565b611361565b60405161023b9190612f0c565b6102576103df366004612dae565b6117bf565b6102576103f2366004612bb9565b611894565b61040a610405366004612df6565b61196b565b60405161023b9190612fdd565b610257610425366004612d8a565b50565b6003546102b59073ffffffffffffffffffffffffffffffffffffffff1681565b610257610456366004612ff0565b611a8e565b61035b610469366004613028565b600460209081526000928352604080842090915290825290205460ff1681565b6102b56104973660046129d1565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102576104cd366004613028565b611b5b565b6102576104e0366004613028565b611c17565b61030d600c5481565b6102576104fc366004612bb9565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600a6020526040902055565b610257610533366004612ff0565b611d3d565b61054b6105463660046129d1565b611e02565b60405161023b919061304d565b61030d60065481565b61025761056f3660046130f6565b612185565b60085461030d565b61035b61058a366004612bb9565b600060208181529281526040808220909352908152205460ff1681565b6102576105b5366004612bb9565b61240b565b6005602052600090815260409020805460018201805460ff90921692916105e0906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461060c906131b9565b80156106595780601f1061062e57610100808354040283529160200191610659565b820191906000526020600020905b81548152906001019060200180831161063c57829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff9093169491935090610695906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546106c1906131b9565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b505050505090806005018054610723906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461074f906131b9565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926107da906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610806906131b9565b80156108535780601f1061082857610100808354040283529160200191610853565b820191906000526020600020905b81548152906001019060200180831161083657829003601f168201915b505050505090508c565b60095460ff16156109195760035473ffffffffffffffffffffffffffffffffffffffff163314610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109d6565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061094a57503330145b6109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f000000000000606482015260840161090b565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610b06576000818152600160208190526040909120541180610a2c575080600114155b610a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e000000000000604482015260640161090b565b6000818152600160205260408120805491610aac8361323c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b60008383604051602001610b1f929190613271565b6040516020818303038152906040529050610b8560036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c65720000000000000000000000815250306000604051806020016040528060008152508688612185565b50505050565b6000818152600560205260409020600881015460ff1615610c08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161090b565b80600901544210610c75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c206861732065787069726564000000000000000000000000604482015260640161090b565b610c7e826124b8565b15610d50576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610cc857610cc86129ea565b1415610d2957600080610cda83612580565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610d2290600b8501906020840190612938565b5050505050565b6003815460ff166003811115610d4157610d416129ea565b1415610b0657610b06816126f3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f7420706173730000000000000000000000604482015260640161090b565b336000908152602081815260408083206001845290915290205460ff16610e35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f746500000000000000000000604482015260640161090b565b6000828152600560205260409020600881015460ff1615610eb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161090b565b80600901544210610f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e646564000000000000000000604482015260640161090b565b600083815260046020908152604080832033845290915290205460ff1615610fa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f74656400000000000000000000000000000000000000604482015260640161090b565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610ffd908490613295565b9091555050811561102357600181600601600082825461101d9190613295565b90915550505b505050565b60095460ff16156110df5760035473ffffffffffffffffffffffffffffffffffffffff1633146110da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c000000000000000000000000000000000000000000606482015260840161090b565b61119c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061111057503330145b61119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f000000000000606482015260840161090b565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610b065760008181526001602052604081208054916111ec836132ad565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b6008818154811061125c57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506113589060029089600086868a612185565b50505050505050565b6006546060906113718385613295565b111561138a578260065461138591906132e6565b61138c565b815b91508167ffffffffffffffff8111156113a7576113a7612be5565b60405190808252806020026020018201604052801561145757816020015b611444604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b8152602001906001900390816113c55790505b50905060005b60065461146a8286613295565b10801561147657508281105b156117b857600560006114898387613295565b815260208101919091526040908101600020815161018081019092528054829060ff1660038111156114bd576114bd6129ea565b60038111156114ce576114ce6129ea565b81526020016001820180546114e2906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461150e906131b9565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff166020820152600382015460408201526004820180546060909201916115a2906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546115ce906131b9565b801561161b5780601f106115f05761010080835404028352916020019161161b565b820191906000526020600020905b8154815290600101906020018083116115fe57829003601f168201915b50505050508152602001600582018054611634906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611660906131b9565b80156116ad5780601f10611682576101008083540402835291602001916116ad565b820191906000526020600020905b81548152906001019060200180831161169057829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611706906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611732906131b9565b801561177f5780601f106117545761010080835404028352916020019161177f565b820191906000526020600020905b81548152906001019060200180831161176257829003601f168201915b50505050508152505082828151811061179a5761179a6132fd565b602002602001018190525080806117b0906132ad565b91505061145d565b5092915050565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506113589060029089600086868a612185565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff1680158015906118dd57503373ffffffffffffffffffffffffffffffffffffffff8216145b15611023576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b15801561195757600080fd5b505af1158015611358573d6000803e3d6000fd5b60085460609061197b8385613295565b11156119945760085461198f9084906132e6565b611996565b815b91508167ffffffffffffffff8111156119b1576119b1612be5565b6040519080825280602002602001820160405280156119da578160200160208202803683370190505b50905060005b6008546119ed8286613295565b1080156119f957508281105b156117b8576008611a0a8286613295565b81548110611a1a57611a1a6132fd565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611a5757611a576132fd565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611a86816132ad565b9150506119e0565b60006040518060600160405280602c815260200161361e602c91399050600081905060008585604051602001611ae492919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c6572000000000000000000000060208301529150611b539060029030600086868a612185565b505050505050565b333014611bc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161090b565b6000918252600b602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161090b565b60008211611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e2030000000000000000000000000000000000000000000604482015260640161090b565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60006040518060600160405280603081526020016135ee603091399050600081905060008585604051602001611d9392919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c652054797065000000000000000000000000000060208301529150611b539060029030600086868a612185565b611e81604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611eb357611eb36129ea565b6003811115611ec457611ec46129ea565b8152602001600182018054611ed8906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611f04906131b9565b8015611f515780601f10611f2657610100808354040283529160200191611f51565b820191906000526020600020905b815481529060010190602001808311611f3457829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611f98906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc4906131b9565b80156120115780601f10611fe657610100808354040283529160200191612011565b820191906000526020600020905b815481529060010190602001808311611ff457829003601f168201915b5050505050815260200160058201805461202a906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054612056906131b9565b80156120a35780601f10612078576101008083540402835291602001916120a3565b820191906000526020600020905b81548152906001019060200180831161208657829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916120fc906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054612128906131b9565b80156121755780601f1061214a57610100808354040283529160200191612175565b820191906000526020600020905b81548152906001019060200180831161215857829003601f168201915b5050505050815250509050919050565b6001876003811115612199576121996129ea565b14806121b6575060028760038111156121b4576121b46129ea565b145b806121d2575060038760038111156121d0576121d06129ea565b145b612238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161090b565b600387600381111561224c5761224c6129ea565b14158061226d575073ffffffffffffffffffffffffffffffffffffffff8516155b6122f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f2074617267657400000000000000000000000000000000000000000000000000606482015260840161090b565b6006805460009160059183918261230f836132ad565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115612362576123626129ea565b0217905550865161237c90600183019060208a0190612938565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516123db9060048301906020870190612938565b5082516123f19060058301906020860190612938565b506123fc8242613295565b60099091015550505050505050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061245457503373ffffffffffffffffffffffffffffffffffffffff8216145b15611023576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed779060440161193d565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54829060649061250290604261332c565b61250c9190613369565b9050808260060154101580156125785750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5460649061255790602261332c565b6125619190613369565b8260060154836007015461257591906132e6565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff16612607576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420746172676574206164647265737300000000000000000000604482015260640161090b565b60008360040160405161261a9190613474565b604051809103902090506000818560050160405160200161263c929190613480565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff90921691906126a29086906134b4565b60006040518083038185875af1925050503d80600081146126df576040519150601f19603f3d011682016040523d82523d6000602084013e6126e4565b606091505b50909890975095505050505050565b6003815460ff16600381111561270b5761270b6129ea565b14612772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161090b565b600080826005018054612784906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546127b0906131b9565b80156127fd5780601f106127d2576101008083540402835291602001916127fd565b820191906000526020600020905b8154815290600101906020018083116127e057829003601f168201915b505050505080602001905181019061281591906134db565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd19061287a903090879087908690600401613587565b6020604051808303816000875af1158015612899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bd91906135d0565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b828054612944906131b9565b90600052602060002090601f01602090048101928261296657600085556129ac565b82601f1061297f57805160ff19168380011785556129ac565b828001600101855582156129ac579182015b828111156129ac578251825591602001919060010190612991565b506129b89291506129bc565b5090565b5b808211156129b857600081556001016129bd565b6000602082840312156129e357600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612a50577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015612a6f578181015183820152602001612a57565b83811115610b855750506000910152565b60008151808452612a98816020860160208601612a54565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612ad4818e612a19565b61018060208201526000612aec61018083018e612a80565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612b20818c612a80565b905082810360a0840152612b34818b612a80565b90508860c08401528760e084015286151561010084015285610120840152612b6161014084018615159052565b828103610160840152612b748185612a80565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461042557600080fd5b8035612bb481612b87565b919050565b60008060408385031215612bcc57600080fd5b8235612bd781612b87565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612c5b57612c5b612be5565b604052919050565b600067ffffffffffffffff821115612c7d57612c7d612be5565b5060051b60200190565b801515811461042557600080fd5b8035612bb481612c87565b600080600060608486031215612cb557600080fd5b833567ffffffffffffffff811115612ccc57600080fd5b8401601f81018613612cdd57600080fd5b80356020612cf2612ced83612c63565b612c14565b82815260059290921b83018101918181019089841115612d1157600080fd5b938201935b83851015612d38578435612d2981612b87565b82529382019390820190612d16565b9650612d479050878201612c95565b9450505050604084013590509250925092565b60008060408385031215612d6d57600080fd5b823591506020830135612d7f81612c87565b809150509250929050565b600060208284031215612d9c57600080fd5b8135612da781612b87565b9392505050565b60008060008060808587031215612dc457600080fd5b8435612dcf81612b87565b9350602085013592506040850135612de681612b87565b9396929550929360600135925050565b60008060408385031215612e0957600080fd5b50508035926020909101359150565b6000610180612e28848451612a19565b6020830151816020860152612e3f82860182612a80565b9150506040830151612e69604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151606085015260808301518482036080860152612e8b8282612a80565b91505060a083015184820360a0860152612ea58282612a80565b91505060c083015160c085015260e083015160e085015261010080840151612ed08287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612f028382612a80565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612f7f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612f6d858351612e18565b94509285019290850190600101612f33565b5092979650505050505050565b600081518084526020808501945080840160005b83811015612fd257815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612fa0565b509495945050505050565b602081526000612da76020830184612f8c565b60008060006060848603121561300557600080fd5b83359250602084013561301781612b87565b929592945050506040919091013590565b6000806040838503121561303b57600080fd5b823591506020830135612d7f81612b87565b602081526000612da76020830184612e18565b600067ffffffffffffffff83111561307a5761307a612be5565b6130ab60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612c14565b90508281528383830111156130bf57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126130e757600080fd5b612da783833560208501613060565b600080600080600080600060e0888a03121561311157600080fd5b87356004811061312057600080fd5b9650602088013567ffffffffffffffff8082111561313d57600080fd5b6131498b838c016130d6565b975061315760408b01612ba9565b965060608a0135955060808a013591508082111561317457600080fd5b6131808b838c016130d6565b945060a08a013591508082111561319657600080fd5b506131a38a828b016130d6565b92505060c0880135905092959891949750929550565b600181811c908216806131cd57607f821691505b60208210811415613207577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161324b5761324b61320d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040815260006132846040830185612f8c565b905082151560208301529392505050565b600082198211156132a8576132a861320d565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156132df576132df61320d565b5060010190565b6000828210156132f8576132f861320d565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133645761336461320d565b500290565b60008261339f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c90808316806133be57607f831692505b60208084108214156133f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b81801561340d576001811461343c57613468565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650613468565b876000528160002060005b868110156134605781548b820152908501908301613447565b505084890196505b50505050505092915050565b6000612da782846133a4565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061257860048301846133a4565b600082516134c6818460208701612a54565b9190910192915050565b8051612bb481612c87565b600080604083850312156134ee57600080fd5b825167ffffffffffffffff81111561350557600080fd5b8301601f8101851361351657600080fd5b80516020613526612ced83612c63565b82815260059290921b8301810191818101908884111561354557600080fd5b938201935b8385101561356c57845161355d81612b87565b8252938201939082019061354a565b955061357b90508682016134d0565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352608060208401526135b76080840187612f8c565b9415156040840152929092166060909101525092915050565b6000602082840312156135e257600080fd5b8151612da781612b8756fe696e7465726e616c44656c65676174654d61696e44616f526f6c65547970652875696e743235362c6164647265737329696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a26469706673582212205df77b8812884a5948047d8dc5333fe866325a8d86531b89d2cc1999a7baaa1564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061020b5760003560e01c806373d6bc9b1161012a578063aa285742116100bd578063da35c6641161008c578063ea6e56b411610071578063ea6e56b414610574578063f0723d971461057c578063fa0967d5146105a757600080fd5b8063da35c66414610558578063dd3d47461461056157600080fd5b8063aa285742146104e5578063adc9772e146104ee578063bbc1ba1014610525578063c7f758a81461053857600080fd5b80638e1f6a2c116100f95780638e1f6a2c1461045b57806393fcff20146104895780639c14c352146104bf578063a257091a146104d257600080fd5b806373d6bc9b146103f7578063765cb83a1461041757806382993ee51461042857806386f2424a1461044857600080fd5b80632f27fa24116101a25780635764dfcf116101715780635764dfcf1461039e5780635e3b4365146103b15780636a72da6a146103d15780636de0aad8146103e457600080fd5b80632f27fa241461032e5780633372e9371461034e57806348425e2a1461036b57806348f7f2a31461037e57600080fd5b80630f1f4788116101de5780630f1f47881461027f5780631614665c146102da57806316934fc4146102ed5780632e3036c71461031b57600080fd5b8063013cf08b146102105780630912ed77146102445780630a397d71146102595780630d61b5191461026c575b600080fd5b61022361021e3660046129d1565b6105ba565b60405161023b9c9b9a99989796959493929190612aca565b60405180910390f35b610257610252366004612bb9565b61085d565b005b610257610267366004612ca0565b610b0a565b61025761027a3660046129d1565b610b8b565b6102b561028d3660046129d1565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161023b565b6102576102e8366004612d5a565b610db2565b61030d6102fb366004612d8a565b600a6020526000908152604090205481565b60405190815260200161023b565b610257610329366004612bb9565b611028565b61030d61033c3660046129d1565b60016020526000908152604090205481565b60095461035b9060ff1681565b604051901515815260200161023b565b6102b56103793660046129d1565b61124c565b6007546102b59073ffffffffffffffffffffffffffffffffffffffff1681565b6102576103ac366004612dae565b611283565b6103c46103bf366004612df6565b611361565b60405161023b9190612f0c565b6102576103df366004612dae565b6117bf565b6102576103f2366004612bb9565b611894565b61040a610405366004612df6565b61196b565b60405161023b9190612fdd565b610257610425366004612d8a565b50565b6003546102b59073ffffffffffffffffffffffffffffffffffffffff1681565b610257610456366004612ff0565b611a8e565b61035b610469366004613028565b600460209081526000928352604080842090915290825290205460ff1681565b6102b56104973660046129d1565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102576104cd366004613028565b611b5b565b6102576104e0366004613028565b611c17565b61030d600c5481565b6102576104fc366004612bb9565b73ffffffffffffffffffffffffffffffffffffffff9091166000908152600a6020526040902055565b610257610533366004612ff0565b611d3d565b61054b6105463660046129d1565b611e02565b60405161023b919061304d565b61030d60065481565b61025761056f3660046130f6565b612185565b60085461030d565b61035b61058a366004612bb9565b600060208181529281526040808220909352908152205460ff1681565b6102576105b5366004612bb9565b61240b565b6005602052600090815260409020805460018201805460ff90921692916105e0906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461060c906131b9565b80156106595780601f1061062e57610100808354040283529160200191610659565b820191906000526020600020905b81548152906001019060200180831161063c57829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff9093169491935090610695906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546106c1906131b9565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b505050505090806005018054610723906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461074f906131b9565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926107da906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610806906131b9565b80156108535780601f1061082857610100808354040283529160200191610853565b820191906000526020600020905b81548152906001019060200180831161083657829003601f168201915b505050505090508c565b60095460ff16156109195760035473ffffffffffffffffffffffffffffffffffffffff163314610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109d6565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061094a57503330145b6109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f000000000000606482015260840161090b565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610b06576000818152600160208190526040909120541180610a2c575080600114155b610a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e000000000000604482015260640161090b565b6000818152600160205260408120805491610aac8361323c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b60008383604051602001610b1f929190613271565b6040516020818303038152906040529050610b8560036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c65720000000000000000000000815250306000604051806020016040528060008152508688612185565b50505050565b6000818152600560205260409020600881015460ff1615610c08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161090b565b80600901544210610c75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c206861732065787069726564000000000000000000000000604482015260640161090b565b610c7e826124b8565b15610d50576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610cc857610cc86129ea565b1415610d2957600080610cda83612580565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610d2290600b8501906020840190612938565b5050505050565b6003815460ff166003811115610d4157610d416129ea565b1415610b0657610b06816126f3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f7420706173730000000000000000000000604482015260640161090b565b336000908152602081815260408083206001845290915290205460ff16610e35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f746500000000000000000000604482015260640161090b565b6000828152600560205260409020600881015460ff1615610eb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161090b565b80600901544210610f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e646564000000000000000000604482015260640161090b565b600083815260046020908152604080832033845290915290205460ff1615610fa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f74656400000000000000000000000000000000000000604482015260640161090b565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610ffd908490613295565b9091555050811561102357600181600601600082825461101d9190613295565b90915550505b505050565b60095460ff16156110df5760035473ffffffffffffffffffffffffffffffffffffffff1633146110da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c000000000000000000000000000000000000000000606482015260840161090b565b61119c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061111057503330145b61119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f000000000000606482015260840161090b565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610b065760008181526001602052604081208054916111ec836132ad565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b6008818154811061125c57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506113589060029089600086868a612185565b50505050505050565b6006546060906113718385613295565b111561138a578260065461138591906132e6565b61138c565b815b91508167ffffffffffffffff8111156113a7576113a7612be5565b60405190808252806020026020018201604052801561145757816020015b611444604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b8152602001906001900390816113c55790505b50905060005b60065461146a8286613295565b10801561147657508281105b156117b857600560006114898387613295565b815260208101919091526040908101600020815161018081019092528054829060ff1660038111156114bd576114bd6129ea565b60038111156114ce576114ce6129ea565b81526020016001820180546114e2906131b9565b80601f016020809104026020016040519081016040528092919081815260200182805461150e906131b9565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff166020820152600382015460408201526004820180546060909201916115a2906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546115ce906131b9565b801561161b5780601f106115f05761010080835404028352916020019161161b565b820191906000526020600020905b8154815290600101906020018083116115fe57829003601f168201915b50505050508152602001600582018054611634906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611660906131b9565b80156116ad5780601f10611682576101008083540402835291602001916116ad565b820191906000526020600020905b81548152906001019060200180831161169057829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611706906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611732906131b9565b801561177f5780601f106117545761010080835404028352916020019161177f565b820191906000526020600020905b81548152906001019060200180831161176257829003601f168201915b50505050508152505082828151811061179a5761179a6132fd565b602002602001018190525080806117b0906132ad565b91505061145d565b5092915050565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506113589060029089600086868a612185565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff1680158015906118dd57503373ffffffffffffffffffffffffffffffffffffffff8216145b15611023576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b15801561195757600080fd5b505af1158015611358573d6000803e3d6000fd5b60085460609061197b8385613295565b11156119945760085461198f9084906132e6565b611996565b815b91508167ffffffffffffffff8111156119b1576119b1612be5565b6040519080825280602002602001820160405280156119da578160200160208202803683370190505b50905060005b6008546119ed8286613295565b1080156119f957508281105b156117b8576008611a0a8286613295565b81548110611a1a57611a1a6132fd565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611a5757611a576132fd565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611a86816132ad565b9150506119e0565b60006040518060600160405280602c815260200161361e602c91399050600081905060008585604051602001611ae492919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c6572000000000000000000000060208301529150611b539060029030600086868a612185565b505050505050565b333014611bc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161090b565b6000918252600b602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161090b565b60008211611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e2030000000000000000000000000000000000000000000604482015260640161090b565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60006040518060600160405280603081526020016135ee603091399050600081905060008585604051602001611d9392919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c652054797065000000000000000000000000000060208301529150611b539060029030600086868a612185565b611e81604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611eb357611eb36129ea565b6003811115611ec457611ec46129ea565b8152602001600182018054611ed8906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611f04906131b9565b8015611f515780601f10611f2657610100808354040283529160200191611f51565b820191906000526020600020905b815481529060010190602001808311611f3457829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611f98906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc4906131b9565b80156120115780601f10611fe657610100808354040283529160200191612011565b820191906000526020600020905b815481529060010190602001808311611ff457829003601f168201915b5050505050815260200160058201805461202a906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054612056906131b9565b80156120a35780601f10612078576101008083540402835291602001916120a3565b820191906000526020600020905b81548152906001019060200180831161208657829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916120fc906131b9565b80601f0160208091040260200160405190810160405280929190818152602001828054612128906131b9565b80156121755780601f1061214a57610100808354040283529160200191612175565b820191906000526020600020905b81548152906001019060200180831161215857829003601f168201915b5050505050815250509050919050565b6001876003811115612199576121996129ea565b14806121b6575060028760038111156121b4576121b46129ea565b145b806121d2575060038760038111156121d0576121d06129ea565b145b612238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161090b565b600387600381111561224c5761224c6129ea565b14158061226d575073ffffffffffffffffffffffffffffffffffffffff8516155b6122f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f2074617267657400000000000000000000000000000000000000000000000000606482015260840161090b565b6006805460009160059183918261230f836132ad565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115612362576123626129ea565b0217905550865161237c90600183019060208a0190612938565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516123db9060048301906020870190612938565b5082516123f19060058301906020860190612938565b506123fc8242613295565b60099091015550505050505050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061245457503373ffffffffffffffffffffffffffffffffffffffff8216145b15611023576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed779060440161193d565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54829060649061250290604261332c565b61250c9190613369565b9050808260060154101580156125785750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5460649061255790602261332c565b6125619190613369565b8260060154836007015461257591906132e6565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff16612607576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420746172676574206164647265737300000000000000000000604482015260640161090b565b60008360040160405161261a9190613474565b604051809103902090506000818560050160405160200161263c929190613480565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff90921691906126a29086906134b4565b60006040518083038185875af1925050503d80600081146126df576040519150601f19603f3d011682016040523d82523d6000602084013e6126e4565b606091505b50909890975095505050505050565b6003815460ff16600381111561270b5761270b6129ea565b14612772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161090b565b600080826005018054612784906131b9565b80601f01602080910402602001604051908101604052809291908181526020018280546127b0906131b9565b80156127fd5780601f106127d2576101008083540402835291602001916127fd565b820191906000526020600020905b8154815290600101906020018083116127e057829003601f168201915b505050505080602001905181019061281591906134db565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd19061287a903090879087908690600401613587565b6020604051808303816000875af1158015612899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bd91906135d0565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b828054612944906131b9565b90600052602060002090601f01602090048101928261296657600085556129ac565b82601f1061297f57805160ff19168380011785556129ac565b828001600101855582156129ac579182015b828111156129ac578251825591602001919060010190612991565b506129b89291506129bc565b5090565b5b808211156129b857600081556001016129bd565b6000602082840312156129e357600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612a50577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015612a6f578181015183820152602001612a57565b83811115610b855750506000910152565b60008151808452612a98816020860160208601612a54565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612ad4818e612a19565b61018060208201526000612aec61018083018e612a80565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612b20818c612a80565b905082810360a0840152612b34818b612a80565b90508860c08401528760e084015286151561010084015285610120840152612b6161014084018615159052565b828103610160840152612b748185612a80565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461042557600080fd5b8035612bb481612b87565b919050565b60008060408385031215612bcc57600080fd5b8235612bd781612b87565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612c5b57612c5b612be5565b604052919050565b600067ffffffffffffffff821115612c7d57612c7d612be5565b5060051b60200190565b801515811461042557600080fd5b8035612bb481612c87565b600080600060608486031215612cb557600080fd5b833567ffffffffffffffff811115612ccc57600080fd5b8401601f81018613612cdd57600080fd5b80356020612cf2612ced83612c63565b612c14565b82815260059290921b83018101918181019089841115612d1157600080fd5b938201935b83851015612d38578435612d2981612b87565b82529382019390820190612d16565b9650612d479050878201612c95565b9450505050604084013590509250925092565b60008060408385031215612d6d57600080fd5b823591506020830135612d7f81612c87565b809150509250929050565b600060208284031215612d9c57600080fd5b8135612da781612b87565b9392505050565b60008060008060808587031215612dc457600080fd5b8435612dcf81612b87565b9350602085013592506040850135612de681612b87565b9396929550929360600135925050565b60008060408385031215612e0957600080fd5b50508035926020909101359150565b6000610180612e28848451612a19565b6020830151816020860152612e3f82860182612a80565b9150506040830151612e69604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151606085015260808301518482036080860152612e8b8282612a80565b91505060a083015184820360a0860152612ea58282612a80565b91505060c083015160c085015260e083015160e085015261010080840151612ed08287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612f028382612a80565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612f7f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612f6d858351612e18565b94509285019290850190600101612f33565b5092979650505050505050565b600081518084526020808501945080840160005b83811015612fd257815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612fa0565b509495945050505050565b602081526000612da76020830184612f8c565b60008060006060848603121561300557600080fd5b83359250602084013561301781612b87565b929592945050506040919091013590565b6000806040838503121561303b57600080fd5b823591506020830135612d7f81612b87565b602081526000612da76020830184612e18565b600067ffffffffffffffff83111561307a5761307a612be5565b6130ab60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612c14565b90508281528383830111156130bf57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126130e757600080fd5b612da783833560208501613060565b600080600080600080600060e0888a03121561311157600080fd5b87356004811061312057600080fd5b9650602088013567ffffffffffffffff8082111561313d57600080fd5b6131498b838c016130d6565b975061315760408b01612ba9565b965060608a0135955060808a013591508082111561317457600080fd5b6131808b838c016130d6565b945060a08a013591508082111561319657600080fd5b506131a38a828b016130d6565b92505060c0880135905092959891949750929550565b600181811c908216806131cd57607f821691505b60208210811415613207577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161324b5761324b61320d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040815260006132846040830185612f8c565b905082151560208301529392505050565b600082198211156132a8576132a861320d565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156132df576132df61320d565b5060010190565b6000828210156132f8576132f861320d565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133645761336461320d565b500290565b60008261339f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c90808316806133be57607f831692505b60208084108214156133f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b81801561340d576001811461343c57613468565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650613468565b876000528160002060005b868110156134605781548b820152908501908301613447565b505084890196505b50505050505092915050565b6000612da782846133a4565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061257860048301846133a4565b600082516134c6818460208701612a54565b9190910192915050565b8051612bb481612c87565b600080604083850312156134ee57600080fd5b825167ffffffffffffffff81111561350557600080fd5b8301601f8101851361351657600080fd5b80516020613526612ced83612c63565b82815260059290921b8301810191818101908884111561354557600080fd5b938201935b8385101561356c57845161355d81612b87565b8252938201939082019061354a565b955061357b90508682016134d0565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352608060208401526135b76080840187612f8c565b9415156040840152929092166060909101525092915050565b6000602082840312156135e257600080fd5b8151612da781612b8756fe696e7465726e616c44656c65676174654d61696e44616f526f6c65547970652875696e743235362c6164647265737329696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a26469706673582212205df77b8812884a5948047d8dc5333fe866325a8d86531b89d2cc1999a7baaa1564736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 44,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 48,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 53,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleHandlers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IRoleHandler)1126)"
      },
      {
        "astId": 55,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "parentDao",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 96,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 101,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)90_storage)"
      },
      {
        "astId": 103,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "daoFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(DaoFactory)36"
      },
      {
        "astId": 109,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "subDAOs",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 111,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "councilMode",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 1135,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "stakes",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1139,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleDelegations",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1141,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "requiredStakeAmount",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DaoFactory)36": {
        "encoding": "inplace",
        "label": "contract DaoFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleHandler)1126": {
        "encoding": "inplace",
        "label": "contract IRoleHandler",
        "numberOfBytes": "20"
      },
      "t_enum(ProposalType)64": {
        "encoding": "inplace",
        "label": "enum DaoContract.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_contract(IRoleHandler)1126)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IRoleHandler)",
        "numberOfBytes": "32",
        "value": "t_contract(IRoleHandler)1126"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)90_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)90_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)90_storage": {
        "encoding": "inplace",
        "label": "struct DaoContract.Proposal",
        "members": [
          {
            "astId": 67,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "pType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposalType)64"
          },
          {
            "astId": 69,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 73,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "fun",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes_storage"
          },
          {
            "astId": 79,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "support",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "totalVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 83,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "deadline",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionSuccess",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionResult",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}