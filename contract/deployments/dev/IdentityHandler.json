{
  "address": "0x5B7712E038083022E5043d477d132da6E3ee5Da3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentDaoAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialCitizens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_daoFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_requiredStakeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAssignRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createDelegateRoleTypeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "funToCall",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRegisterRoleHandlerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRevokeRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFactory",
      "outputs": [
        {
          "internalType": "contract DaoFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "delegateVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedAssignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "delegatedRevokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal[]",
          "name": "proposalsOut",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "internalAssignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "internalDelegateRoleType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "internalRegisterRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "internalRevokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentDao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fun",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executionSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "executionResult",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "registerRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleDelegations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleHandlers",
      "outputs": [
        {
          "internalType": "contract IRoleHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subDAOs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "supportVote",
          "type": "bool"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9e58da157bc8d73197f6fe445c6a8d6d9ffe9f607a2c3943ac5a411b9f9024c8",
  "receipt": {
    "to": null,
    "from": "0x4293f83331A21C13621D77e1344bE08Ab046472F",
    "contractAddress": "0x5B7712E038083022E5043d477d132da6E3ee5Da3",
    "transactionIndex": 0,
    "gasUsed": "3007204",
    "logsBloom": "0x
    "blockHash": "0x4abb7f07c174812c766daa1a1d620b628644c797c4e8dbf34dd85695d12507b0",
    "transactionHash": "0x9e58da157bc8d73197f6fe445c6a8d6d9ffe9f607a2c3943ac5a411b9f9024c8",
    "logs": [],
    "blockNumber": 27,
    "cumulativeGasUsed": "3007204",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4d0B560C569Ae2a11F70ed396938DF605F2654B",
    [
      "0xE970fd7835B6Aa2CBae1Ec30f6b3fa7FeE786E85"
    ],
    "0xc1eD494aEC51f3C2227450d857eFe9D05E3B76BC",
    "100000000000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "0a6370eba9cc4a0f9e0e61264a97003a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentDaoAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialCitizens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_daoFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAssignRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createDelegateRoleTypeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"funToCall\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRegisterRoleHandlerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRevokeRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFactory\",\"outputs\":[{\"internalType\":\"contract DaoFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedAssignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"delegatedRevokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal[]\",\"name\":\"proposalsOut\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"internalAssignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"internalDelegateRoleType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"internalRegisterRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"internalRevokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentDao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"registerRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleDelegations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleHandlers\",\"outputs\":[{\"internalType\":\"contract IRoleHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subDAOs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"supportVote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IdentityHandler.sol\":\"IdentityHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"contracts/DaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./IDaoContract.sol\\\";\\nimport \\\"./IRoleHandler.sol\\\";\\n\\n\\ncontract DaoFactory {\\n    function createDao(address _parent, address[] memory _initialCitizens, address _daoFactory) public returns (address) {\\n        DaoContract newDao = new DaoContract(_parent, _initialCitizens, _daoFactory);\\n        return address(newDao);\\n    }\\n}\\n\\ncontract DaoContract is IDaoContract {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n\\n    mapping(uint256 => uint256) public roleCount;\\n\\n    mapping(uint256 => IRoleHandler) public roleHandlers;\\n    \\n    address public parentDao;\\n\\n    modifier onlyGovernance() {\\n        _;\\n    }\\n\\n    enum ProposalType{NONE, TEXT, CALL, CREATE_SUBDAO}\\n\\n    struct Proposal {\\n        ProposalType pType;\\n        string description;\\n        address target;\\n        uint256 amount;\\n        bytes fun;\\n        bytes data;\\n        uint256 support;\\n        uint256 totalVotes;\\n        bool executed;\\n        uint256 deadline;\\n        bool executionSuccess;\\n        bytes executionResult;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public proposalVotes;\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount;\\n    \\n    DaoFactory public daoFactory;\\n    address[] public subDAOs;\\n    \\n    constructor(address _parentDao, address[] memory _initialCitizens, address _daoFactory) {\\n        require(_initialCitizens.length > 0, \\\"At least one initial citizen required\\\");\\n        parentDao = _parentDao;\\n  \\n        // Assign initial citizens to a role, e.g., role 1\\n        for (uint i = 0; i < _initialCitizens.length; i++) {\\n            roles[_initialCitizens[i]][1] = true; // Assuming role 1 is for citizens\\n            roleCount[1]++;\\n        }\\n        daoFactory = DaoFactory(_daoFactory);\\n    }\\n\\n    function getProposal(uint256 proposalId) public view returns (Proposal memory proposal) {\\n        return proposals[proposalId];\\n    }\\n    \\n    function getProposals(uint256 from, uint256 count) public view returns (Proposal[] memory proposalsOut) {\\n        count = (from + count <= proposalCount) ? count :  proposalCount - from;\\n        proposalsOut = new Proposal[](count);\\n        for (uint i = 0 ; from + i < proposalCount && i < count; i++) {\\n            proposalsOut[i] = proposals[from + i];\\n        }\\n    }\\n\\n    function createProposal(\\n        ProposalType pType,\\n        string memory description,\\n        address target,\\n        uint256 amount,\\n        bytes memory funToCall,\\n        bytes memory data,\\n        uint256 duration\\n    ) public {\\n        require(pType == ProposalType.TEXT || pType == ProposalType.CALL || pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n        require(pType != ProposalType.CREATE_SUBDAO || target == address(0), \\\"SubDAO proposals must not have a target\\\");\\n        Proposal storage proposal = proposals[proposalCount++];\\n        proposal.pType = pType;\\n        proposal.description = description;\\n        proposal.target = target;\\n        proposal.amount = amount;\\n        proposal.fun = funToCall;\\n        proposal.data = data;\\n        proposal.deadline = block.timestamp + duration;\\n    }\\n\\n    function voteOnProposal(uint256 proposalId, bool supportVote) public {\\n        require(roles[msg.sender][1], \\\"Not authorized to vote\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Voting period has ended\\\");\\n        require(!proposalVotes[proposalId][msg.sender], \\\"Already voted\\\");\\n\\n\\n        proposalVotes[proposalId][msg.sender] = true;\\n        proposal.totalVotes += 1;\\n        if (supportVote) {\\n            proposal.support += 1;\\n        }\\n    }\\n\\n    function checkProposalPassed(uint256 proposalId) internal view returns (bool) {\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 requiredSupport = (roleCount[1] * 66) / 100;\\n        return proposal.support >= requiredSupport && proposal.totalVotes - proposal.support <= (roleCount[1] * (100 - 66)) / 100;\\n    }\\n\\n    function executeProposal(uint256 proposalId) public {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Proposal has expired\\\");\\n\\n        if (checkProposalPassed(proposalId)) {\\n            proposal.executed = true;\\n            if (proposal.pType == ProposalType.CALL) {\\n                (bool success, bytes memory result) = executeCallProposal(proposal);\\n                proposal.executionSuccess = success;\\n                proposal.executionResult = result;\\n            } else if (proposal.pType == ProposalType.CREATE_SUBDAO) {\\n                createSubDAO(proposal);\\n            }\\n            // Add logic for other types of proposals if needed\\n        } else {\\n            revert(\\\"Proposal did not pass\\\");\\n        }\\n    }\\n\\n    function executeCallProposal(Proposal storage proposal) internal returns (bool, bytes memory) {\\n        require(proposal.target != address(0), \\\"Invalid target address\\\");\\n\\n        // Hash the function signature string to get the function selector\\n        bytes4 funcSelector = bytes4(keccak256(bytes(proposal.fun)));\\n        \\n        // Concatenate the function selector with the parameters\\n        bytes memory payload = abi.encodePacked(funcSelector, proposal.data);\\n        (bool success, bytes memory result) = proposal.target.call{value: proposal.amount}(payload);\\n        return (success, result);\\n    }\\n \\n    function createSubDAO(Proposal storage proposal) internal {\\n        require(proposal.pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n\\n        address[] memory initialCitizens = abi.decode(proposal.data, (address[]));\\n \\n        DaoContract newSubDAO = DaoContract(daoFactory.createDao(address(this), initialCitizens, address(daoFactory)));\\n        subDAOs.push(address(newSubDAO));\\n\\n        // Additional    initialization for newSubDAO if required\\n    }\\n\\n    function delegateVoting(address delegate) public {\\n        // Delegate voting rights\\n    }\\n\\n    // Function to create a proposal for registering a role handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"internalRegisterRoleHandler(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(role, handlerAddress);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Register Role Handler\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    // Internal function to register a role handler\\n    function internalRegisterRoleHandler(uint256 role, address handlerAddress) external {\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n    // register entityType handler\\n    function registerRoleHandler(uint256 role, address handlerAddress) external onlyGovernance {\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n\\n    // Functions\\n    function assignRole(address entityAddress, uint256 role) public {\\n        // Record property ownership / add new property to the register\\n        require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only matching role handler handler\\\");\\n        if (!roles[entityAddress][role]) {\\n            roleCount[role]++;\\n            roles[entityAddress][role] = true;\\n        }\\n    }\\n    \\n    function revokeRole(address entityAddress, uint256 role) public {\\n        // Record property ownership / add new property to the register\\n        require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only matching role handler handler\\\");\\n        if (roles[entityAddress][role]) {\\n            require(roleCount[role] > 1 || role != 1, \\\"Dont kill the last citizen\\\");\\n            roleCount[role]--;\\n            roles[entityAddress][role] = false;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x223d7704de1f0447842c7652c0e903fc8316a2457acb7215b91941136816104e\"},\"contracts/IDaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IDaoContract {\\n    // register entityType handler\\n    function registerRoleHandler(uint256 role, address handlerAddress) external;\\n    function assignRole(address entityAddress, uint256 role) external;\\n    function revokeRole(address entityAddress, uint256 role) external;\\n}\\n\",\"keccak256\":\"0xdbe96051fd552b491f5064074b953e7c057c5869dd2827a52c7a9ec55e0ae5eb\"},\"contracts/IRoleHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IRoleHandler {\\n    \\n}\\n\",\"keccak256\":\"0x5e55cd3fdd91d9d601c77f71f5548ef08a58b66f5fc3cd19cf3682aa4c5640dc\"},\"contracts/IdentityHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./DaoContract.sol\\\";\\r\\n\\r\\ncontract IdentityHandler is DaoContract {\\r\\n    mapping(address => uint256) public stakes;\\r\\n\\r\\n    // Mapping to store delegations: roleType => delegate address\\r\\n    mapping(uint256 => address) public roleDelegations;\\r\\n\\r\\n    // Assuming a required stake amount is defined\\r\\n    uint256 public requiredStakeAmount;\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address _parentDaoAddress, address[] memory _initialCitizens, address _daoFactory, uint256 _requiredStakeAmount)\\r\\n        DaoContract(_parentDaoAddress, _initialCitizens, _daoFactory) {\\r\\n            requiredStakeAmount = _requiredStakeAmount;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Function to stake tokens (details to be implemented based on your token logic)\\r\\n    function stake(address user, uint256 amount) external {\\r\\n        // Assuming the staking logic is implemented here\\r\\n        stakes[user] = amount;\\r\\n    }\\r\\n\\r\\n  // Function to create a proposal for assigning a role\\r\\n    function createAssignRoleProposal(address user, uint256 role, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalAssignRole(address,uint256)\\\";\\r\\n\\r\\n        // Convert function definition from string to bytes\\r\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(user, role);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Assign Role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalAssignRole(address user, uint256 role) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        DaoContract(parentDao).assignRole(user, role); // Call assignRole on the main DAO\\r\\n    }\\r\\n\\r\\n    function createRevokeRoleProposal(address user, uint256 role, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalRevokeRole(address,uint256)\\\";\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(user, role);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Revoke Role\\\", address(this), 0, bytes(functionDefinition), parameters, duration);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalRevokeRole(address user, uint256 role) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        DaoContract(parentDao).revokeRole(user, role); // Call revokeRole on the main DAO\\r\\n    }\\r\\n\\r\\n    // Function to create a proposal for delegating a role type\\r\\n    function createDelegateRoleTypeProposal(uint256 roleType, address delegate, uint256 duration) public {\\r\\n        // Function definition as a string\\r\\n        string memory functionDefinition = \\\"internalDelegateRoleType(uint256,address)\\\";\\r\\n\\r\\n        // Convert function definition from string to bytes\\r\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\r\\n\\r\\n        // Encode only the parameters\\r\\n        bytes memory parameters = abi.encode(roleType, delegate);\\r\\n\\r\\n        // Create a CALL type proposal in the IdentityHandler DAO\\r\\n        createProposal(ProposalType.CALL, \\\"Delegate Role Type\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\r\\n    }\\r\\n\\r\\n    // Internal function to be called by the proposal execution\\r\\n    function internalDelegateRoleType(uint256 roleType, address delegate) external {\\r\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\r\\n        roleDelegations[roleType] = delegate; // Delegate the role type\\r\\n    }\\r\\n\\r\\n    // Function to assign a role if it's delegated\\r\\n    function delegatedAssignRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).assignRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n\\r\\n    // Function to revoke a role if it's delegated\\r\\n    function delegatedRevokeRole(address entityAddress, uint256 role) external {\\r\\n        address delegate = roleDelegations[role];\\r\\n        if (delegate != address(0) && msg.sender == delegate) {\\r\\n            // Role type is delegated and the caller is the delegate,\\r\\n            // proxy the call to the main DAO\\r\\n            DaoContract(parentDao).revokeRole(entityAddress, role);\\r\\n        }\\r\\n        // No action if the role is not delegated or the caller is not the delegate\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x202591a1508f438fdeb0317cdc2408c85670441b2768d0a24def8bf6f7482511\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620036b7380380620036b78339810160408190526200003491620001cf565b83838360008251116200009b5760405162461bcd60e51b815260206004820152602560248201527f4174206c65617374206f6e6520696e697469616c20636974697a656e207265716044820152641d5a5c995960da1b606482015260840160405180910390fd5b600380546001600160a01b0319166001600160a01b03851617905560005b82518110156200016c576001600080858481518110620000dd57620000dd620002d2565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081206001808352908452918120805460ff19169415159490941790935590527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8054916200015183620002e8565b919050555080806200016390620002e8565b915050620000b9565b50600780546001600160a01b0319166001600160a01b03929092169190911790555050600b555062000312915050565b80516001600160a01b0381168114620001b457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620001e657600080fd5b620001f1856200019c565b602086810151919550906001600160401b03808211156200021157600080fd5b818801915088601f8301126200022657600080fd5b8151818111156200023b576200023b620001b9565b8060051b604051601f19603f83011681018181108582111715620002635762000263620001b9565b60405291825284820192508381018501918b8311156200028257600080fd5b938501935b82851015620002ab576200029b856200019c565b8452938501939285019262000287565b809850505050505050620002c2604086016200019c565b6060959095015193969295505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200030b57634e487b7160e01b600052601160045260246000fd5b5060010190565b61339580620003226000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637f6e9ab91161010f578063b5195491116100a2578063da35c66411610071578063da35c66414610536578063dd3d47461461053f578063f0723d9714610552578063fa172f141461057d57600080fd5b8063b5195491146104dd578063bf7a1561146104f0578063c7f758a814610503578063ca9c84031461052357600080fd5b806393fcff20116100de57806393fcff2014610454578063a257091a1461048a578063aa2857421461049d578063adc9772e146104a657600080fd5b80637f6e9ab9146103d057806382993ee5146103e357806386f2424a146104035780638e1f6a2c1461041657600080fd5b80632e7551a7116101875780635585f994116101565780635585f994146103795780635e3b43651461038c5780636d94516b146103ac578063765cb83a146103bf57600080fd5b80632e7551a7146103135780632f27fa241461032657806348425e2a1461034657806348f7f2a31461035957600080fd5b80631614665c116101c35780631614665c146102ac57806316934fc4146102bf578063281fc946146102ed5780632e3036c71461030057600080fd5b8063013cf08b146101f55780630912ed77146102295780630d61b5191461023e5780630f1f478814610251575b600080fd5b61020861020336600461280c565b610590565b6040516102209c9b9a99989796959493929190612909565b60405180910390f35b61023c6102373660046129f8565b610833565b005b61023c61024c36600461280c565b610a29565b61028761025f36600461280c565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610220565b61023c6102ba366004612a24565b610c50565b6102df6102cd366004612a59565b60096020526000908152604090205481565b604051908152602001610220565b61023c6102fb3660046129f8565b610ec6565b61023c61030e3660046129f8565b610fa6565b61023c610321366004612a7d565b611113565b6102df61033436600461280c565b60016020526000908152604090205481565b61028761035436600461280c565b6111d6565b6007546102879073ffffffffffffffffffffffffffffffffffffffff1681565b61023c6103873660046129f8565b61120d565b61039f61039a366004612ab2565b6112ff565b6040516102209190612bc8565b61023c6103ba366004612a7d565b61175d565b61023c6103cd366004612a59565b50565b61023c6103de3660046129f8565b611816565b6003546102879073ffffffffffffffffffffffffffffffffffffffff1681565b61023c610411366004612c48565b6118c3565b610444610424366004612c80565b600460209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610220565b61028761046236600461280c565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023c610498366004612c80565b611988565b6102df600b5481565b61023c6104b43660046129f8565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260096020526040902055565b61023c6104eb3660046129f8565b611aae565b61023c6104fe366004612c80565b6119f1565b61051661051136600461280c565b611b76565b6040516102209190612ca5565b61023c610531366004612c48565b611ef9565b6102df60065481565b61023c61054d366004612dcc565b611fba565b6104446105603660046129f8565b600060208181529281526040808220909352908152205460ff1681565b61023c61058b366004612c80565b612240565b6005602052600090815260409020805460018201805460ff90921692916105b690612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e290612e8f565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061066b90612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461069790612e8f565b80156106e45780601f106106b9576101008083540402835291602001916106e4565b820191906000526020600020905b8154815290600101906020018083116106c757829003601f168201915b5050505050908060050180546106f990612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461072590612e8f565b80156107725780601f1061074757610100808354040283529160200191610772565b820191906000526020600020905b81548152906001019060200180831161075557829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926107b090612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc90612e8f565b80156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b505050505090508c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061086457503330145b6108f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610a2557600081815260016020819052604090912054118061094b575080600114155b6109b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016108ec565b60008181526001602052604081208054916109cb83612f12565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b6000818152600560205260409020600881015460ff1615610aa6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016108ec565b80600901544210610b13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016108ec565b610b1c826122fc565b15610bee576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610b6657610b66612825565b1415610bc757600080610b78836123c4565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610bc090600b8501906020840190612773565b5050505050565b6003815460ff166003811115610bdf57610bdf612825565b1415610a2557610a2581612537565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016108ec565b336000908152602081815260408083206001845290915290205460ff16610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016108ec565b6000828152600560205260409020600881015460ff1615610d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016108ec565b80600901544210610dbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016108ec565b600083815260046020908152604080832033845290915290205460ff1615610e41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016108ec565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610e9b908490612f47565b90915550508115610ec1576001816006016000828254610ebb9190612f47565b90915550505b505050565b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff168015801590610f0f57503373ffffffffffffffffffffffffffffffffffffffff8216145b15610ec1576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b50505050505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610fd757503330145b611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084016108ec565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610a255760008181526001602052604081208054916110b383612f5f565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b6000604051806060016040528060238152602001613314602391396040805173ffffffffffffffffffffffffffffffffffffffff871660208201529081018590529091508190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20526f6c65000000000000000000000000000000000000000000602083015291506111ce9060029030600086868a611fba565b505050505050565b600881815481106111e657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b333014611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690630912ed77906044015b600060405180830381600087803b1580156112eb57600080fd5b505af11580156111ce573d6000803e3d6000fd5b60065460609061130f8385612f47565b111561132857826006546113239190612f98565b61132a565b815b91508167ffffffffffffffff81111561134557611345612cb8565b6040519080825280602002602001820160405280156113f557816020015b6113e2604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b8152602001906001900390816113635790505b50905060005b6006546114088286612f47565b10801561141457508281105b1561175657600560006114278387612f47565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561145b5761145b612825565b600381111561146c5761146c612825565b815260200160018201805461148090612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546114ac90612e8f565b80156114f95780601f106114ce576101008083540402835291602001916114f9565b820191906000526020600020905b8154815290600101906020018083116114dc57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161154090612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461156c90612e8f565b80156115b95780601f1061158e576101008083540402835291602001916115b9565b820191906000526020600020905b81548152906001019060200180831161159c57829003601f168201915b505050505081526020016005820180546115d290612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe90612e8f565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916116a490612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546116d090612e8f565b801561171d5780601f106116f25761010080835404028352916020019161171d565b820191906000526020600020905b81548152906001019060200180831161170057829003601f168201915b50505050508152505082828151811061173857611738612faf565b6020026020010181905250808061174e90612f5f565b9150506113fb565b5092915050565b60006040518060600160405280602381526020016132c5602391396040805173ffffffffffffffffffffffffffffffffffffffff87166020820152908101859052909150600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520526f6c6500000000000000000000000000000000000000000060208301529150610bc090600290306000868689611fba565b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061185f57503373ffffffffffffffffffffffffffffffffffffffff8216145b15610ec1576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed7790604401610f6f565b60006040518060600160405280602c81526020016132e8602c9139905060008190506000858560405160200161191992919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111ce9060029030600086868a611fba565b3330146119f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b60008211611a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016108ec565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690632e3036c7906044016112d1565b611bf5604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611c2757611c27612825565b6003811115611c3857611c38612825565b8152602001600182018054611c4c90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7890612e8f565b8015611cc55780601f10611c9a57610100808354040283529160200191611cc5565b820191906000526020600020905b815481529060010190602001808311611ca857829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611d0c90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3890612e8f565b8015611d855780601f10611d5a57610100808354040283529160200191611d85565b820191906000526020600020905b815481529060010190602001808311611d6857829003601f168201915b50505050508152602001600582018054611d9e90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611dca90612e8f565b8015611e175780601f10611dec57610100808354040283529160200191611e17565b820191906000526020600020905b815481529060010190602001808311611dfa57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611e7090612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9c90612e8f565b8015611ee95780601f10611ebe57610100808354040283529160200191611ee9565b820191906000526020600020905b815481529060010190602001808311611ecc57829003601f168201915b5050505050815250509050919050565b6000604051806060016040528060298152602001613337602991399050600081905060008585604051602001611f4f92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c6520547970650000000000000000000000000000602083015291506111ce9060029030600086868a5b6001876003811115611fce57611fce612825565b1480611feb57506002876003811115611fe957611fe9612825565b145b806120075750600387600381111561200557612005612825565b145b61206d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016108ec565b600387600381111561208157612081612825565b1415806120a2575073ffffffffffffffffffffffffffffffffffffffff8516155b61212e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016108ec565b6006805460009160059183918261214483612f5f565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561219757612197612825565b021790555086516121b190600183019060208a0190612773565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516122109060048301906020870190612773565b5082516122269060058301906020860190612773565b506122318242612f47565b60099091015550505050505050565b3330146122a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6000918252600a602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548290606490612346906042612fde565b612350919061301b565b9050808260060154101580156123bc5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5460649061239b906022612fde565b6123a5919061301b565b826006015483600701546123b99190612f98565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff1661244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016108ec565b60008360040160405161245e9190613126565b6040518091039020905060008185600501604051602001612480929190613132565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff90921691906124e6908690613166565b60006040518083038185875af1925050503d8060008114612523576040519150601f19603f3d011682016040523d82523d6000602084013e612528565b606091505b50909890975095505050505050565b6003815460ff16600381111561254f5761254f612825565b146125b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016108ec565b60008160050180546125c790612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546125f390612e8f565b80156126405780601f1061261557610100808354040283529160200191612640565b820191906000526020600020905b81548152906001019060200180831161262357829003601f168201915b50505050508060200190518101906126589190613182565b6007546040517ea093b700000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff9091169062a093b7906126b690309086908590600401613234565b6020604051808303816000875af11580156126d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f991906132a7565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055505050565b82805461277f90612e8f565b90600052602060002090601f0160209004810192826127a157600085556127e7565b82601f106127ba57805160ff19168380011785556127e7565b828001600101855582156127e7579182015b828111156127e75782518255916020019190600101906127cc565b506127f39291506127f7565b5090565b5b808211156127f357600081556001016127f8565b60006020828403121561281e57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061288b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156128aa578181015183820152602001612892565b838111156128b9576000848401525b50505050565b600081518084526128d781602086016020860161288f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612913818e612854565b6101806020820152600061292b61018083018e6128bf565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b6060840152828103608084015261295f818c6128bf565b905082810360a0840152612973818b6128bf565b90508860c08401528760e0840152861515610100840152856101208401526129a061014084018615159052565b8281036101608401526129b381856128bf565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103cd57600080fd5b80356129f3816129c6565b919050565b60008060408385031215612a0b57600080fd5b8235612a16816129c6565b946020939093013593505050565b60008060408385031215612a3757600080fd5b8235915060208301358015158114612a4e57600080fd5b809150509250929050565b600060208284031215612a6b57600080fd5b8135612a76816129c6565b9392505050565b600080600060608486031215612a9257600080fd5b8335612a9d816129c6565b95602085013595506040909401359392505050565b60008060408385031215612ac557600080fd5b50508035926020909101359150565b6000610180612ae4848451612854565b6020830151816020860152612afb828601826128bf565b9150506040830151612b25604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151606085015260808301518482036080860152612b4782826128bf565b91505060a083015184820360a0860152612b6182826128bf565b91505060c083015160c085015260e083015160e085015261010080840151612b8c8287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612bbe83826128bf565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c3b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612c29858351612ad4565b94509285019290850190600101612bef565b5092979650505050505050565b600080600060608486031215612c5d57600080fd5b833592506020840135612c6f816129c6565b929592945050506040919091013590565b60008060408385031215612c9357600080fd5b823591506020830135612a4e816129c6565b602081526000612a766020830184612ad4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612d2e57612d2e612cb8565b604052919050565b600067ffffffffffffffff831115612d5057612d50612cb8565b612d8160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612ce7565b9050828152838383011115612d9557600080fd5b828260208301376000602084830101529392505050565b600082601f830112612dbd57600080fd5b612a7683833560208501612d36565b600080600080600080600060e0888a031215612de757600080fd5b873560048110612df657600080fd5b9650602088013567ffffffffffffffff80821115612e1357600080fd5b612e1f8b838c01612dac565b9750612e2d60408b016129e8565b965060608a0135955060808a0135915080821115612e4a57600080fd5b612e568b838c01612dac565b945060a08a0135915080821115612e6c57600080fd5b50612e798a828b01612dac565b92505060c0880135905092959891949750929550565b600181811c90821680612ea357607f821691505b60208210811415612edd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612f2157612f21612ee3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60008219821115612f5a57612f5a612ee3565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f9157612f91612ee3565b5060010190565b600082821015612faa57612faa612ee3565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561301657613016612ee3565b500290565b600082613051577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061307057607f831692505b60208084108214156130ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156130bf57600181146130ee5761311a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061311a565b876000528160002060005b868110156131125781548b8201529085019083016130f9565b505084890196505b50505050505092915050565b6000612a768284613056565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006123bc6004830184613056565b6000825161317881846020870161288f565b9190910192915050565b6000602080838503121561319557600080fd5b825167ffffffffffffffff808211156131ad57600080fd5b818501915085601f8301126131c157600080fd5b8151818111156131d3576131d3612cb8565b8060051b91506131e4848301612ce7565b81815291830184019184810190888411156131fe57600080fd5b938501935b838510156132285784519250613218836129c6565b8282529385019390850190613203565b98975050505050505050565b60006060820173ffffffffffffffffffffffffffffffffffffffff80871684526020606081860152828751808552608087019150828901945060005b8181101561328e578551851683529483019491830191600101613270565b5050809450505080851660408501525050949350505050565b6000602082840312156132b957600080fd5b8151612a76816129c656fe696e7465726e616c5265766f6b65526f6c6528616464726573732c75696e7432353629696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329696e7465726e616c41737369676e526f6c6528616464726573732c75696e7432353629696e7465726e616c44656c6567617465526f6c65547970652875696e743235362c6164647265737329a26469706673582212204b2b4ff0d61a80e568cb52e1375e248ff76e83fcbd9f9f03af2b0c823cecbdb564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80637f6e9ab91161010f578063b5195491116100a2578063da35c66411610071578063da35c66414610536578063dd3d47461461053f578063f0723d9714610552578063fa172f141461057d57600080fd5b8063b5195491146104dd578063bf7a1561146104f0578063c7f758a814610503578063ca9c84031461052357600080fd5b806393fcff20116100de57806393fcff2014610454578063a257091a1461048a578063aa2857421461049d578063adc9772e146104a657600080fd5b80637f6e9ab9146103d057806382993ee5146103e357806386f2424a146104035780638e1f6a2c1461041657600080fd5b80632e7551a7116101875780635585f994116101565780635585f994146103795780635e3b43651461038c5780636d94516b146103ac578063765cb83a146103bf57600080fd5b80632e7551a7146103135780632f27fa241461032657806348425e2a1461034657806348f7f2a31461035957600080fd5b80631614665c116101c35780631614665c146102ac57806316934fc4146102bf578063281fc946146102ed5780632e3036c71461030057600080fd5b8063013cf08b146101f55780630912ed77146102295780630d61b5191461023e5780630f1f478814610251575b600080fd5b61020861020336600461280c565b610590565b6040516102209c9b9a99989796959493929190612909565b60405180910390f35b61023c6102373660046129f8565b610833565b005b61023c61024c36600461280c565b610a29565b61028761025f36600461280c565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610220565b61023c6102ba366004612a24565b610c50565b6102df6102cd366004612a59565b60096020526000908152604090205481565b604051908152602001610220565b61023c6102fb3660046129f8565b610ec6565b61023c61030e3660046129f8565b610fa6565b61023c610321366004612a7d565b611113565b6102df61033436600461280c565b60016020526000908152604090205481565b61028761035436600461280c565b6111d6565b6007546102879073ffffffffffffffffffffffffffffffffffffffff1681565b61023c6103873660046129f8565b61120d565b61039f61039a366004612ab2565b6112ff565b6040516102209190612bc8565b61023c6103ba366004612a7d565b61175d565b61023c6103cd366004612a59565b50565b61023c6103de3660046129f8565b611816565b6003546102879073ffffffffffffffffffffffffffffffffffffffff1681565b61023c610411366004612c48565b6118c3565b610444610424366004612c80565b600460209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610220565b61028761046236600461280c565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61023c610498366004612c80565b611988565b6102df600b5481565b61023c6104b43660046129f8565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260096020526040902055565b61023c6104eb3660046129f8565b611aae565b61023c6104fe366004612c80565b6119f1565b61051661051136600461280c565b611b76565b6040516102209190612ca5565b61023c610531366004612c48565b611ef9565b6102df60065481565b61023c61054d366004612dcc565b611fba565b6104446105603660046129f8565b600060208181529281526040808220909352908152205460ff1681565b61023c61058b366004612c80565b612240565b6005602052600090815260409020805460018201805460ff90921692916105b690612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e290612e8f565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061066b90612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461069790612e8f565b80156106e45780601f106106b9576101008083540402835291602001916106e4565b820191906000526020600020905b8154815290600101906020018083116106c757829003601f168201915b5050505050908060050180546106f990612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461072590612e8f565b80156107725780601f1061074757610100808354040283529160200191610772565b820191906000526020600020905b81548152906001019060200180831161075557829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926107b090612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc90612e8f565b80156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b505050505090508c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061086457503330145b6108f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610a2557600081815260016020819052604090912054118061094b575080600114155b6109b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016108ec565b60008181526001602052604081208054916109cb83612f12565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b6000818152600560205260409020600881015460ff1615610aa6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016108ec565b80600901544210610b13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016108ec565b610b1c826122fc565b15610bee576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610b6657610b66612825565b1415610bc757600080610b78836123c4565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610bc090600b8501906020840190612773565b5050505050565b6003815460ff166003811115610bdf57610bdf612825565b1415610a2557610a2581612537565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016108ec565b336000908152602081815260408083206001845290915290205460ff16610cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016108ec565b6000828152600560205260409020600881015460ff1615610d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016108ec565b80600901544210610dbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016108ec565b600083815260046020908152604080832033845290915290205460ff1615610e41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016108ec565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610e9b908490612f47565b90915550508115610ec1576001816006016000828254610ebb9190612f47565b90915550505b505050565b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff168015801590610f0f57503373ffffffffffffffffffffffffffffffffffffffff8216145b15610ec1576003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690632e3036c7906044015b600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b50505050505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610fd757503330145b611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084016108ec565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610a255760008181526001602052604081208054916110b383612f5f565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b6000604051806060016040528060238152602001613314602391396040805173ffffffffffffffffffffffffffffffffffffffff871660208201529081018590529091508190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20526f6c65000000000000000000000000000000000000000000602083015291506111ce9060029030600086868a611fba565b505050505050565b600881815481106111e657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b333014611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690630912ed77906044015b600060405180830381600087803b1580156112eb57600080fd5b505af11580156111ce573d6000803e3d6000fd5b60065460609061130f8385612f47565b111561132857826006546113239190612f98565b61132a565b815b91508167ffffffffffffffff81111561134557611345612cb8565b6040519080825280602002602001820160405280156113f557816020015b6113e2604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b8152602001906001900390816113635790505b50905060005b6006546114088286612f47565b10801561141457508281105b1561175657600560006114278387612f47565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561145b5761145b612825565b600381111561146c5761146c612825565b815260200160018201805461148090612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546114ac90612e8f565b80156114f95780601f106114ce576101008083540402835291602001916114f9565b820191906000526020600020905b8154815290600101906020018083116114dc57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161154090612e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461156c90612e8f565b80156115b95780601f1061158e576101008083540402835291602001916115b9565b820191906000526020600020905b81548152906001019060200180831161159c57829003601f168201915b505050505081526020016005820180546115d290612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe90612e8f565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916116a490612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546116d090612e8f565b801561171d5780601f106116f25761010080835404028352916020019161171d565b820191906000526020600020905b81548152906001019060200180831161170057829003601f168201915b50505050508152505082828151811061173857611738612faf565b6020026020010181905250808061174e90612f5f565b9150506113fb565b5092915050565b60006040518060600160405280602381526020016132c5602391396040805173ffffffffffffffffffffffffffffffffffffffff87166020820152908101859052909150600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520526f6c6500000000000000000000000000000000000000000060208301529150610bc090600290306000868689611fba565b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff16801580159061185f57503373ffffffffffffffffffffffffffffffffffffffff8216145b15610ec1576003546040517f0912ed7700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820185905290911690630912ed7790604401610f6f565b60006040518060600160405280602c81526020016132e8602c9139905060008190506000858560405160200161191992919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111ce9060029030600086868a611fba565b3330146119f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b60008211611a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016108ec565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b333014611b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6003546040517f2e3036c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690632e3036c7906044016112d1565b611bf5604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611c2757611c27612825565b6003811115611c3857611c38612825565b8152602001600182018054611c4c90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7890612e8f565b8015611cc55780601f10611c9a57610100808354040283529160200191611cc5565b820191906000526020600020905b815481529060010190602001808311611ca857829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611d0c90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3890612e8f565b8015611d855780601f10611d5a57610100808354040283529160200191611d85565b820191906000526020600020905b815481529060010190602001808311611d6857829003601f168201915b50505050508152602001600582018054611d9e90612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611dca90612e8f565b8015611e175780601f10611dec57610100808354040283529160200191611e17565b820191906000526020600020905b815481529060010190602001808311611dfa57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611e7090612e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9c90612e8f565b8015611ee95780601f10611ebe57610100808354040283529160200191611ee9565b820191906000526020600020905b815481529060010190602001808311611ecc57829003601f168201915b5050505050815250509050919050565b6000604051806060016040528060298152602001613337602991399050600081905060008585604051602001611f4f92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601282527f44656c656761746520526f6c6520547970650000000000000000000000000000602083015291506111ce9060029030600086868a5b6001876003811115611fce57611fce612825565b1480611feb57506002876003811115611fe957611fe9612825565b145b806120075750600387600381111561200557612005612825565b145b61206d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016108ec565b600387600381111561208157612081612825565b1415806120a2575073ffffffffffffffffffffffffffffffffffffffff8516155b61212e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016108ec565b6006805460009160059183918261214483612f5f565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561219757612197612825565b021790555086516121b190600183019060208a0190612773565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790556003810185905583516122109060048301906020870190612773565b5082516122269060058301906020860190612773565b506122318242612f47565b60099091015550505050505050565b3330146122a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016108ec565b6000918252600a602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548290606490612346906042612fde565b612350919061301b565b9050808260060154101580156123bc5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5460649061239b906022612fde565b6123a5919061301b565b826006015483600701546123b99190612f98565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff1661244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016108ec565b60008360040160405161245e9190613126565b6040518091039020905060008185600501604051602001612480929190613132565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff90921691906124e6908690613166565b60006040518083038185875af1925050503d8060008114612523576040519150601f19603f3d011682016040523d82523d6000602084013e612528565b606091505b50909890975095505050505050565b6003815460ff16600381111561254f5761254f612825565b146125b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016108ec565b60008160050180546125c790612e8f565b80601f01602080910402602001604051908101604052809291908181526020018280546125f390612e8f565b80156126405780601f1061261557610100808354040283529160200191612640565b820191906000526020600020905b81548152906001019060200180831161262357829003601f168201915b50505050508060200190518101906126589190613182565b6007546040517ea093b700000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff9091169062a093b7906126b690309086908590600401613234565b6020604051808303816000875af11580156126d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f991906132a7565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055505050565b82805461277f90612e8f565b90600052602060002090601f0160209004810192826127a157600085556127e7565b82601f106127ba57805160ff19168380011785556127e7565b828001600101855582156127e7579182015b828111156127e75782518255916020019190600101906127cc565b506127f39291506127f7565b5090565b5b808211156127f357600081556001016127f8565b60006020828403121561281e57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061288b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156128aa578181015183820152602001612892565b838111156128b9576000848401525b50505050565b600081518084526128d781602086016020860161288f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612913818e612854565b6101806020820152600061292b61018083018e6128bf565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b6060840152828103608084015261295f818c6128bf565b905082810360a0840152612973818b6128bf565b90508860c08401528760e0840152861515610100840152856101208401526129a061014084018615159052565b8281036101608401526129b381856128bf565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103cd57600080fd5b80356129f3816129c6565b919050565b60008060408385031215612a0b57600080fd5b8235612a16816129c6565b946020939093013593505050565b60008060408385031215612a3757600080fd5b8235915060208301358015158114612a4e57600080fd5b809150509250929050565b600060208284031215612a6b57600080fd5b8135612a76816129c6565b9392505050565b600080600060608486031215612a9257600080fd5b8335612a9d816129c6565b95602085013595506040909401359392505050565b60008060408385031215612ac557600080fd5b50508035926020909101359150565b6000610180612ae4848451612854565b6020830151816020860152612afb828601826128bf565b9150506040830151612b25604086018273ffffffffffffffffffffffffffffffffffffffff169052565b506060830151606085015260808301518482036080860152612b4782826128bf565b91505060a083015184820360a0860152612b6182826128bf565b91505060c083015160c085015260e083015160e085015261010080840151612b8c8287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612bbe83826128bf565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c3b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612c29858351612ad4565b94509285019290850190600101612bef565b5092979650505050505050565b600080600060608486031215612c5d57600080fd5b833592506020840135612c6f816129c6565b929592945050506040919091013590565b60008060408385031215612c9357600080fd5b823591506020830135612a4e816129c6565b602081526000612a766020830184612ad4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612d2e57612d2e612cb8565b604052919050565b600067ffffffffffffffff831115612d5057612d50612cb8565b612d8160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612ce7565b9050828152838383011115612d9557600080fd5b828260208301376000602084830101529392505050565b600082601f830112612dbd57600080fd5b612a7683833560208501612d36565b600080600080600080600060e0888a031215612de757600080fd5b873560048110612df657600080fd5b9650602088013567ffffffffffffffff80821115612e1357600080fd5b612e1f8b838c01612dac565b9750612e2d60408b016129e8565b965060608a0135955060808a0135915080821115612e4a57600080fd5b612e568b838c01612dac565b945060a08a0135915080821115612e6c57600080fd5b50612e798a828b01612dac565b92505060c0880135905092959891949750929550565b600181811c90821680612ea357607f821691505b60208210811415612edd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612f2157612f21612ee3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60008219821115612f5a57612f5a612ee3565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f9157612f91612ee3565b5060010190565b600082821015612faa57612faa612ee3565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561301657613016612ee3565b500290565b600082613051577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061307057607f831692505b60208084108214156130ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156130bf57600181146130ee5761311a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061311a565b876000528160002060005b868110156131125781548b8201529085019083016130f9565b505084890196505b50505050505092915050565b6000612a768284613056565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006123bc6004830184613056565b6000825161317881846020870161288f565b9190910192915050565b6000602080838503121561319557600080fd5b825167ffffffffffffffff808211156131ad57600080fd5b818501915085601f8301126131c157600080fd5b8151818111156131d3576131d3612cb8565b8060051b91506131e4848301612ce7565b81815291830184019184810190888411156131fe57600080fd5b938501935b838510156132285784519250613218836129c6565b8282529385019390850190613203565b98975050505050505050565b60006060820173ffffffffffffffffffffffffffffffffffffffff80871684526020606081860152828751808552608087019150828901945060005b8181101561328e578551851683529483019491830191600101613270565b5050809450505080851660408501525050949350505050565b6000602082840312156132b957600080fd5b8151612a76816129c656fe696e7465726e616c5265766f6b65526f6c6528616464726573732c75696e7432353629696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329696e7465726e616c41737369676e526f6c6528616464726573732c75696e7432353629696e7465726e616c44656c6567617465526f6c65547970652875696e743235362c6164647265737329a26469706673582212204b2b4ff0d61a80e568cb52e1375e248ff76e83fcbd9f9f03af2b0c823cecbdb564736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 41,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 45,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 50,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleHandlers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IRoleHandler)919)"
      },
      {
        "astId": 52,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "parentDao",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 93,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 98,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)87_storage)"
      },
      {
        "astId": 100,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 103,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "daoFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(DaoFactory)33"
      },
      {
        "astId": 106,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "subDAOs",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 928,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "stakes",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 932,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "roleDelegations",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 934,
        "contract": "contracts/IdentityHandler.sol:IdentityHandler",
        "label": "requiredStakeAmount",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DaoFactory)33": {
        "encoding": "inplace",
        "label": "contract DaoFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleHandler)919": {
        "encoding": "inplace",
        "label": "contract IRoleHandler",
        "numberOfBytes": "20"
      },
      "t_enum(ProposalType)61": {
        "encoding": "inplace",
        "label": "enum DaoContract.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_contract(IRoleHandler)919)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IRoleHandler)",
        "numberOfBytes": "32",
        "value": "t_contract(IRoleHandler)919"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)87_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)87_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)87_storage": {
        "encoding": "inplace",
        "label": "struct DaoContract.Proposal",
        "members": [
          {
            "astId": 64,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "pType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposalType)61"
          },
          {
            "astId": 66,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 68,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 70,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 72,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "fun",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          },
          {
            "astId": 74,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes_storage"
          },
          {
            "astId": 76,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "support",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "totalVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 82,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "deadline",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionSuccess",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 86,
            "contract": "contracts/IdentityHandler.sol:IdentityHandler",
            "label": "executionResult",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}