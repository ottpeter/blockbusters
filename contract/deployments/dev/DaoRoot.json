{
  "address": "0xe1d39A4c586EAd5BB7de8EcFeC2DFa9E27E2b6b8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentDao",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialCitizens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "_councilMode",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_daoFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "councilMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAssignRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "citizens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "isCouncil",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createCreateSubDAOProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "funToCall",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRegisterRoleHandlerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRoleProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFactory",
      "outputs": [
        {
          "internalType": "contract DaoFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "delegateVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal[]",
          "name": "proposalsOut",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getSubDAOs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "subDAOsOut",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "internalRegisterRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentDao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fun",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executionSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "executionResult",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleHandlers",
      "outputs": [
        {
          "internalType": "contract IRoleHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subDAOCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subDAOs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "supportVote",
          "type": "bool"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x801bcb5f15356cc186424ac62237df7cad64dd34e5c9fa3b690fed9f6420db6a",
  "receipt": {
    "to": null,
    "from": "0x4293f83331A21C13621D77e1344bE08Ab046472F",
    "contractAddress": "0xe1d39A4c586EAd5BB7de8EcFeC2DFa9E27E2b6b8",
    "transactionIndex": 0,
    "gasUsed": "2914293",
    "logsBloom": "0x
    "blockHash": "0x699d2c7febbab0ed48e733c9ac11b9ad2792eba2b63102449f7cad61285f3c8e",
    "transactionHash": "0x801bcb5f15356cc186424ac62237df7cad64dd34e5c9fa3b690fed9f6420db6a",
    "logs": [],
    "blockNumber": 58,
    "cumulativeGasUsed": "2914293",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    [
      "0xE970fd7835B6Aa2CBae1Ec30f6b3fa7FeE786E85",
      "0x964DFF15bC398952EFc8a96C394C43645E871715",
      "0xD9f22a894c7A37cEb58a12C8574ECF66cE8C8897"
    ],
    false,
    "0x7F838011E85c946Edf4af35a33F7A5549b8eF47F"
  ],
  "numDeployments": 5,
  "solcInputHash": "05268faf59c3c2a193f2bfc71c68b50f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentDao\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialCitizens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_councilMode\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_daoFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"councilMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAssignRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"citizens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isCouncil\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createCreateSubDAOProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"funToCall\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRegisterRoleHandlerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRoleProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFactory\",\"outputs\":[{\"internalType\":\"contract DaoFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal[]\",\"name\":\"proposalsOut\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getSubDAOs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"subDAOsOut\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"internalRegisterRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentDao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleHandlers\",\"outputs\":[{\"internalType\":\"contract IRoleHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subDAOCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subDAOs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"supportVote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DaoContract.sol\":\"DaoContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"contracts/DaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./IDaoContract.sol\\\";\\nimport \\\"./IRoleHandler.sol\\\";\\n\\n\\ncontract DaoFactory {\\n    function createDao(address _parent, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) public returns (address) {\\n        DaoContract newDao = new DaoContract(_parent, _initialCitizens, _councilMode, _daoFactory);\\n        return address(newDao);\\n    }\\n}\\n\\ncontract DaoContract is IDaoContract {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n\\n    mapping(uint256 => uint256) public roleCount;\\n\\n    mapping(uint256 => IRoleHandler) public roleHandlers;\\n    \\n    address public parentDao;\\n\\n    modifier onlyGovernance() {\\n        _;\\n    }\\n\\n    enum ProposalType{NONE, TEXT, CALL, CREATE_SUBDAO}\\n\\n    struct Proposal {\\n        ProposalType pType;\\n        string description;\\n        address target;\\n        uint256 amount;\\n        bytes fun;\\n        bytes data;\\n        uint256 support;\\n        uint256 totalVotes;\\n        bool executed;\\n        uint256 deadline;\\n        bool executionSuccess;\\n        bytes executionResult;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public proposalVotes;\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount;\\n    \\n    DaoFactory public daoFactory;\\n    address[] public subDAOs;\\n\\n    bool public councilMode;\\n\\n    constructor(address _parentDao, address[] memory _initialCitizens, bool _councilMode, address _daoFactory) {\\n        require(_initialCitizens.length > 0, \\\"At least one initial citizen required\\\");\\n        parentDao = _parentDao;\\n        councilMode = _councilMode;\\n\\n        // Assign initial citizens to a role, e.g., role 1\\n        for (uint i = 0; i < _initialCitizens.length; i++) {\\n            roles[_initialCitizens[i]][1] = true; // Assuming role 1 is for citizens\\n            roleCount[1]++;\\n        }\\n        daoFactory = DaoFactory(_daoFactory);\\n    }\\n\\n    function getProposal(uint256 proposalId) public view returns (Proposal memory proposal) {\\n        return proposals[proposalId];\\n    }\\n    \\n    function subDAOCount() public view returns (uint256 count) {\\n        return subDAOs.length;\\n    }\\n\\n    function getProposals(uint256 from, uint256 count) public view returns (Proposal[] memory proposalsOut) {\\n        count = (from + count <= proposalCount) ? count :  proposalCount - from;\\n        proposalsOut = new Proposal[](count);\\n        for (uint i = 0 ; from + i < proposalCount && i < count; i++) {\\n            proposalsOut[i] = proposals[from + i];\\n        }\\n    }\\n    \\n    function getSubDAOs(uint256 from, uint256 count) public view returns (address[] memory subDAOsOut) {\\n        count = (from + count <= subDAOs.length) ? count :  subDAOs.length - from;\\n        subDAOsOut = new address[](count);\\n        for (uint i = 0 ; from + i < subDAOs.length && i < count; i++) {\\n            subDAOsOut[i] = subDAOs[from + i];\\n        }\\n    }\\n\\n    function createProposal(\\n        ProposalType pType,\\n        string memory description,\\n        address target,\\n        uint256 amount,\\n        bytes memory funToCall,\\n        bytes memory data,\\n        uint256 duration\\n    ) public {\\n        require(pType == ProposalType.TEXT || pType == ProposalType.CALL || pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n        require(pType != ProposalType.CREATE_SUBDAO || target == address(0), \\\"SubDAO proposals must not have a target\\\");\\n        Proposal storage proposal = proposals[proposalCount++];\\n        proposal.pType = pType;\\n        proposal.description = description;\\n        proposal.target = target;\\n        proposal.amount = amount;\\n        proposal.fun = funToCall;\\n        proposal.data = data;\\n        proposal.deadline = block.timestamp + duration;\\n    }\\n\\n    function voteOnProposal(uint256 proposalId, bool supportVote) public {\\n        require(roles[msg.sender][1], \\\"Not authorized to vote\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Voting period has ended\\\");\\n        require(!proposalVotes[proposalId][msg.sender], \\\"Already voted\\\");\\n\\n\\n        proposalVotes[proposalId][msg.sender] = true;\\n        proposal.totalVotes += 1;\\n        if (supportVote) {\\n            proposal.support += 1;\\n        }\\n    }\\n\\n    function checkProposalPassed(uint256 proposalId) internal view returns (bool) {\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 requiredSupport = (roleCount[1] * 66) / 100;\\n        return proposal.support >= requiredSupport && proposal.totalVotes - proposal.support <= (roleCount[1] * (100 - 66)) / 100;\\n    }\\n\\n    function executeProposal(uint256 proposalId) public {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Proposal has expired\\\");\\n\\n        if (checkProposalPassed(proposalId)) {\\n            proposal.executed = true;\\n            if (proposal.pType == ProposalType.CALL) {\\n                (bool success, bytes memory result) = executeCallProposal(proposal);\\n                proposal.executionSuccess = success;\\n                proposal.executionResult = result;\\n            } else if (proposal.pType == ProposalType.CREATE_SUBDAO) {\\n                createSubDAO(proposal);\\n            }\\n            // Add logic for other types of proposals if needed\\n        } else {\\n            revert(\\\"Proposal did not pass\\\");\\n        }\\n    }\\n\\n    function executeCallProposal(Proposal storage proposal) internal returns (bool, bytes memory) {\\n        require(proposal.target != address(0), \\\"Invalid target address\\\");\\n\\n        // Hash the function signature string to get the function selector\\n        bytes4 funcSelector = bytes4(keccak256(bytes(proposal.fun)));\\n        \\n        // Concatenate the function selector with the parameters\\n        bytes memory payload = abi.encodePacked(funcSelector, proposal.data);\\n        (bool success, bytes memory result) = proposal.target.call{value: proposal.amount}(payload);\\n        return (success, result);\\n    }\\n \\n    // Function to create a proposal for registering a role handler\\n    function createCreateSubDAOProposal(address[] memory citizens, bool isCouncil, uint256 duration) public {\\n        bytes memory parameters = abi.encode(citizens, isCouncil);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CREATE_SUBDAO, \\\"Register Role Handler\\\", address(this), 0, \\\"\\\", parameters, duration);\\n    }\\n\\n    function createSubDAO(Proposal storage proposal) internal {\\n        require(proposal.pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n\\n        (address[] memory initialCitizens, bool isCouncil) = abi.decode(proposal.data, (address[],bool));\\n \\n        DaoContract newSubDAO = DaoContract(daoFactory.createDao(address(this), initialCitizens, isCouncil, address(daoFactory)));\\n        subDAOs.push(address(newSubDAO));\\n\\n        // Additional    initialization for newSubDAO if required\\n    }\\n\\n    function delegateVoting(address delegate) public {\\n        // Delegate voting rights\\n    }\\n\\n    // Function to create a proposal for registering a role handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"internalRegisterRoleHandler(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(role, handlerAddress);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Register Role Handler\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n\\n    // Internal function to register a role handler\\n    function internalRegisterRoleHandler(uint256 role, address handlerAddress) external {\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n    // Function to create a proposal for assignig a role\\n    function createAssignRoleProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"assignRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Assign role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    // Functions\\n    function assignRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (!roles[entityAddress][role]) {\\n            roleCount[role]++;\\n            roles[entityAddress][role] = true;\\n        }\\n    }\\n    \\n    // Function to create a proposal for assignig a role\\n    function createRoleProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"revokeRole(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(handlerAddress, role);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Revoke role\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    function revokeRole(address entityAddress, uint256 role) public {\\n        if (councilMode) {\\n            require(msg.sender == parentDao, \\\"Only parent dao can update roles in council\\\");\\n        } else {\\n            require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only self or matching role handler can update roles in DAO\\\");\\n        }\\n        if (roles[entityAddress][role]) {\\n            require(roleCount[role] > 1 || role != 1, \\\"Dont kill the last citizen\\\");\\n            roleCount[role]--;\\n            roles[entityAddress][role] = false;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x65c1a8bb0fcc0e881d85290ce5b2b2e6df97e29ea2849700447eafa77f3210f6\"},\"contracts/IDaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IDaoContract {\\n    // register entityType handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) external;\\n    function assignRole(address entityAddress, uint256 role) external;\\n    function revokeRole(address entityAddress, uint256 role) external;\\n}\\n\",\"keccak256\":\"0xab43aa4e810559ea61dbcf1a97e41bea33ae1cec28b933ef0f5e9e32ff67ef99\"},\"contracts/IRoleHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IRoleHandler {\\n    \\n}\\n\",\"keccak256\":\"0x5e55cd3fdd91d9d601c77f71f5548ef08a58b66f5fc3cd19cf3682aa4c5640dc\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620034f3380380620034f38339810160408190526200003491620001e6565b6000835111620000985760405162461bcd60e51b815260206004820152602560248201527f4174206c65617374206f6e6520696e697469616c20636974697a656e207265716044820152641d5a5c995960da1b606482015260840160405180910390fd5b600380546001600160a01b0319166001600160a01b0386161790556009805460ff191683151517905560005b835181101562000177576001600080868481518110620000e857620000e8620002f4565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081206001808352908452918120805460ff19169415159490941790935590527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8054916200015c836200030a565b919050555080806200016e906200030a565b915050620000c4565b50600780546001600160a01b0319166001600160a01b03929092169190911790555062000334915050565b80516001600160a01b0381168114620001ba57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b80518015158114620001ba57600080fd5b60008060008060808587031215620001fd57600080fd5b6200020885620001a2565b602086810151919550906001600160401b03808211156200022857600080fd5b818801915088601f8301126200023d57600080fd5b815181811115620002525762000252620001bf565b8060051b604051601f19603f830116810181811085821117156200027a576200027a620001bf565b60405291825284820192508381018501918b8311156200029957600080fd5b938501935b82851015620002c257620002b285620001a2565b845293850193928501926200029e565b809850505050505050620002d960408601620001d5565b9150620002e960608601620001a2565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200032d57634e487b7160e01b600052601160045260246000fd5b5060010190565b6131af80620003446000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80635e3b4365116100ee5780638e1f6a2c11610097578063da35c66411610071578063da35c66414610421578063dd3d47461461042a578063ea6e56b41461043d578063f0723d971461044557600080fd5b80638e1f6a2c146103c0578063a257091a146103ee578063c7f758a81461040157600080fd5b80637c78a6eb116100c85780637c78a6eb1461037a57806382993ee51461038d57806386f2424a146103ad57600080fd5b80635e3b43651461032957806373d6bc9b14610349578063765cb83a1461036957600080fd5b80632e3036c7116101505780633e9ab77a1161012a5780633e9ab77a146102e357806348425e2a146102f657806348f7f2a31461030957600080fd5b80632e3036c7146102855780632f27fa24146102985780633372e937146102c657600080fd5b80630d61b519116101815780630d61b519146102045780630f1f4788146102175780631614665c1461027257600080fd5b8063013cf08b146101a85780630912ed77146101dc5780630a397d71146101f1575b600080fd5b6101bb6101b6366004612579565b610470565b6040516101d39c9b9a99989796959493929190612672565b60405180910390f35b6101ef6101ea366004612761565b610713565b005b6101ef6101ff366004612848565b6109c0565b6101ef610212366004612579565b610a41565b61024d610225366004612579565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d3565b6101ef610280366004612902565b610c68565b6101ef610293366004612761565b610ede565b6102b86102a6366004612579565b60016020526000908152604090205481565b6040519081526020016101d3565b6009546102d39060ff1681565b60405190151581526020016101d3565b6101ef6102f1366004612932565b611102565b61024d610304366004612579565b6111df565b60075461024d9073ffffffffffffffffffffffffffffffffffffffff1681565b61033c61033736600461296a565b611216565b6040516101d39190612a80565b61035c61035736600461296a565b611674565b6040516101d39190612b51565b6101ef610377366004612b6b565b50565b6101ef610388366004612932565b611797565b60035461024d9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ef6103bb366004612932565b61186c565b6102d36103ce366004612b88565b600460209081526000928352604080842090915290825290205460ff1681565b6101ef6103fc366004612b88565b611931565b61041461040f366004612579565b611a57565b6040516101d39190612bad565b6102b860065481565b6101ef610438366004612c56565b611dda565b6008546102b8565b6102d3610453366004612761565b600060208181529281526040808220909352908152205460ff1681565b6005602052600090815260409020805460018201805460ff909216929161049690612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546104c290612d19565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061054b90612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461057790612d19565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b5050505050908060050180546105d990612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461060590612d19565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff9384169650919492169261069090612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546106bc90612d19565b80156107095780601f106106de57610100808354040283529160200191610709565b820191906000526020600020905b8154815290600101906020018083116106ec57829003601f168201915b505050505090508c565b60095460ff16156107cf5760035473ffffffffffffffffffffffffffffffffffffffff1633146107ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61088c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061080057503330145b61088c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016107c1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16156109bc5760008181526001602081905260409091205411806108e2575080600114155b610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016107c1565b600081815260016020526040812080549161096283612d9c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b600083836040516020016109d5929190612dd1565b6040516020818303038152906040529050610a3b60036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c65720000000000000000000000815250306000604051806020016040528060008152508688611dda565b50505050565b6000818152600560205260409020600881015460ff1615610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016107c1565b80600901544210610b2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016107c1565b610b3482612060565b15610c06576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610b7e57610b7e612592565b1415610bdf57600080610b9083612128565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610bd890600b85019060208401906124e0565b5050505050565b6003815460ff166003811115610bf757610bf7612592565b14156109bc576109bc8161229b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016107c1565b336000908152602081815260408083206001845290915290205460ff16610ceb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016107c1565b6000828152600560205260409020600881015460ff1615610d68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016107c1565b80600901544210610dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016107c1565b600083815260046020908152604080832033845290915290205460ff1615610e59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016107c1565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610eb3908490612df5565b90915550508115610ed9576001816006016000828254610ed39190612df5565b90915550505b505050565b60095460ff1615610f955760035473ffffffffffffffffffffffffffffffffffffffff163314610f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084016107c1565b611052565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610fc657503330145b611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016107c1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff166109bc5760008181526001602052604081208054916110a283612e0d565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506111d79060029030600086868a611dda565b505050505050565b600881815481106111ef57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6006546060906112268385612df5565b111561123f578260065461123a9190612e46565b611241565b815b91508167ffffffffffffffff81111561125c5761125c61278d565b60405190808252806020026020018201604052801561130c57816020015b6112f9604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b81526020019060019003908161127a5790505b50905060005b60065461131f8286612df5565b10801561132b57508281105b1561166d576005600061133e8387612df5565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561137257611372612592565b600381111561138357611383612592565b815260200160018201805461139790612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546113c390612d19565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161145790612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461148390612d19565b80156114d05780601f106114a5576101008083540402835291602001916114d0565b820191906000526020600020905b8154815290600101906020018083116114b357829003601f168201915b505050505081526020016005820180546114e990612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461151590612d19565b80156115625780601f1061153757610100808354040283529160200191611562565b820191906000526020600020905b81548152906001019060200180831161154557829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916115bb90612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546115e790612d19565b80156116345780601f1061160957610100808354040283529160200191611634565b820191906000526020600020905b81548152906001019060200180831161161757829003601f168201915b50505050508152505082828151811061164f5761164f612e5d565b6020026020010181905250808061166590612e0d565b915050611312565b5092915050565b6008546060906116848385612df5565b111561169d57600854611698908490612e46565b61169f565b815b91508167ffffffffffffffff8111156116ba576116ba61278d565b6040519080825280602002602001820160405280156116e3578160200160208202803683370190505b50905060005b6008546116f68286612df5565b10801561170257508281105b1561166d5760086117138286612df5565b8154811061172357611723612e5d565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061176057611760612e5d565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061178f81612e0d565b9150506116e9565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506111d79060029030600086868a611dda565b60006040518060600160405280602c815260200161314e602c913990506000819050600085856040516020016118c292919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111d79060029030600086868a611dda565b33301461199a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016107c1565b60008211611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016107c1565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b611ad6604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611b0857611b08612592565b6003811115611b1957611b19612592565b8152602001600182018054611b2d90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5990612d19565b8015611ba65780601f10611b7b57610100808354040283529160200191611ba6565b820191906000526020600020905b815481529060010190602001808311611b8957829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611bed90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1990612d19565b8015611c665780601f10611c3b57610100808354040283529160200191611c66565b820191906000526020600020905b815481529060010190602001808311611c4957829003601f168201915b50505050508152602001600582018054611c7f90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611cab90612d19565b8015611cf85780601f10611ccd57610100808354040283529160200191611cf8565b820191906000526020600020905b815481529060010190602001808311611cdb57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611d5190612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7d90612d19565b8015611dca5780601f10611d9f57610100808354040283529160200191611dca565b820191906000526020600020905b815481529060010190602001808311611dad57829003601f168201915b5050505050815250509050919050565b6001876003811115611dee57611dee612592565b1480611e0b57506002876003811115611e0957611e09612592565b145b80611e2757506003876003811115611e2557611e25612592565b145b611e8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016107c1565b6003876003811115611ea157611ea1612592565b141580611ec2575073ffffffffffffffffffffffffffffffffffffffff8516155b611f4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016107c1565b60068054600091600591839182611f6483612e0d565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115611fb757611fb7612592565b02179055508651611fd190600183019060208a01906124e0565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881617905560038101859055835161203090600483019060208701906124e0565b50825161204690600583019060208601906124e0565b506120518242612df5565b60099091015550505050505050565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5482906064906120aa906042612e8c565b6120b49190612ec9565b9050808260060154101580156121205750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546064906120ff906022612e8c565b6121099190612ec9565b8260060154836007015461211d9190612e46565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff166121af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016107c1565b6000836004016040516121c29190612fd4565b60405180910390209050600081856005016040516020016121e4929190612fe0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff909216919061224a908690613014565b60006040518083038185875af1925050503d8060008114612287576040519150601f19603f3d011682016040523d82523d6000602084013e61228c565b606091505b50909890975095505050505050565b6003815460ff1660038111156122b3576122b3612592565b1461231a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016107c1565b60008082600501805461232c90612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461235890612d19565b80156123a55780601f1061237a576101008083540402835291602001916123a5565b820191906000526020600020905b81548152906001019060200180831161238857829003601f168201915b50505050508060200190518101906123bd919061303b565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd1906124229030908790879086906004016130e7565b6020604051808303816000875af1158015612441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124659190613130565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b8280546124ec90612d19565b90600052602060002090601f01602090048101928261250e5760008555612554565b82601f1061252757805160ff1916838001178555612554565b82800160010185558215612554579182015b82811115612554578251825591602001919060010190612539565b50612560929150612564565b5090565b5b808211156125605760008155600101612565565b60006020828403121561258b57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106125f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156126175781810151838201526020016125ff565b83811115610a3b5750506000910152565b600081518084526126408160208601602086016125fc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b61267c818e6125c1565b6101806020820152600061269461018083018e612628565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b606084015282810360808401526126c8818c612628565b905082810360a08401526126dc818b612628565b90508860c08401528760e08401528615156101008401528561012084015261270961014084018615159052565b82810361016084015261271c8185612628565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461037757600080fd5b803561275c8161272f565b919050565b6000806040838503121561277457600080fd5b823561277f8161272f565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156128035761280361278d565b604052919050565b600067ffffffffffffffff8211156128255761282561278d565b5060051b60200190565b801515811461037757600080fd5b803561275c8161282f565b60008060006060848603121561285d57600080fd5b833567ffffffffffffffff81111561287457600080fd5b8401601f8101861361288557600080fd5b8035602061289a6128958361280b565b6127bc565b82815260059290921b830181019181810190898411156128b957600080fd5b938201935b838510156128e05784356128d18161272f565b825293820193908201906128be565b96506128ef905087820161283d565b9450505050604084013590509250925092565b6000806040838503121561291557600080fd5b8235915060208301356129278161282f565b809150509250929050565b60008060006060848603121561294757600080fd5b8335925060208401356129598161272f565b929592945050506040919091013590565b6000806040838503121561297d57600080fd5b50508035926020909101359150565b600061018061299c8484516125c1565b60208301518160208601526129b382860182612628565b91505060408301516129dd604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516060850152608083015184820360808601526129ff8282612628565b91505060a083015184820360a0860152612a198282612628565b91505060c083015160c085015260e083015160e085015261010080840151612a448287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612a768382612628565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612af3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612ae185835161298c565b94509285019290850190600101612aa7565b5092979650505050505050565b600081518084526020808501945080840160005b83811015612b4657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612b14565b509495945050505050565b602081526000612b646020830184612b00565b9392505050565b600060208284031215612b7d57600080fd5b8135612b648161272f565b60008060408385031215612b9b57600080fd5b8235915060208301356129278161272f565b602081526000612b64602083018461298c565b600067ffffffffffffffff831115612bda57612bda61278d565b612c0b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016127bc565b9050828152838383011115612c1f57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612c4757600080fd5b612b6483833560208501612bc0565b600080600080600080600060e0888a031215612c7157600080fd5b873560048110612c8057600080fd5b9650602088013567ffffffffffffffff80821115612c9d57600080fd5b612ca98b838c01612c36565b9750612cb760408b01612751565b965060608a0135955060808a0135915080821115612cd457600080fd5b612ce08b838c01612c36565b945060a08a0135915080821115612cf657600080fd5b50612d038a828b01612c36565b92505060c0880135905092959891949750929550565b600181811c90821680612d2d57607f821691505b60208210811415612d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612dab57612dab612d6d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b604081526000612de46040830185612b00565b905082151560208301529392505050565b60008219821115612e0857612e08612d6d565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e3f57612e3f612d6d565b5060010190565b600082821015612e5857612e58612d6d565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ec457612ec4612d6d565b500290565b600082612eff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c9080831680612f1e57607f831692505b6020808410821415612f59577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b818015612f6d5760018114612f9c57612fc8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650612fc8565b876000528160002060005b86811015612fc05781548b820152908501908301612fa7565b505084890196505b50505050505092915050565b6000612b648284612f04565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006121206004830184612f04565b600082516130268184602087016125fc565b9190910192915050565b805161275c8161282f565b6000806040838503121561304e57600080fd5b825167ffffffffffffffff81111561306557600080fd5b8301601f8101851361307657600080fd5b805160206130866128958361280b565b82815260059290921b830181019181810190888411156130a557600080fd5b938201935b838510156130cc5784516130bd8161272f565b825293820193908201906130aa565b95506130db9050868201613030565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352608060208401526131176080840187612b00565b9415156040840152929092166060909101525092915050565b60006020828403121561314257600080fd5b8151612b648161272f56fe696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a2646970667358221220f425c2271cadcb736e1f306332a97e8b42b615540ae97500d4f3d72596fea61164736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c80635e3b4365116100ee5780638e1f6a2c11610097578063da35c66411610071578063da35c66414610421578063dd3d47461461042a578063ea6e56b41461043d578063f0723d971461044557600080fd5b80638e1f6a2c146103c0578063a257091a146103ee578063c7f758a81461040157600080fd5b80637c78a6eb116100c85780637c78a6eb1461037a57806382993ee51461038d57806386f2424a146103ad57600080fd5b80635e3b43651461032957806373d6bc9b14610349578063765cb83a1461036957600080fd5b80632e3036c7116101505780633e9ab77a1161012a5780633e9ab77a146102e357806348425e2a146102f657806348f7f2a31461030957600080fd5b80632e3036c7146102855780632f27fa24146102985780633372e937146102c657600080fd5b80630d61b519116101815780630d61b519146102045780630f1f4788146102175780631614665c1461027257600080fd5b8063013cf08b146101a85780630912ed77146101dc5780630a397d71146101f1575b600080fd5b6101bb6101b6366004612579565b610470565b6040516101d39c9b9a99989796959493929190612672565b60405180910390f35b6101ef6101ea366004612761565b610713565b005b6101ef6101ff366004612848565b6109c0565b6101ef610212366004612579565b610a41565b61024d610225366004612579565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d3565b6101ef610280366004612902565b610c68565b6101ef610293366004612761565b610ede565b6102b86102a6366004612579565b60016020526000908152604090205481565b6040519081526020016101d3565b6009546102d39060ff1681565b60405190151581526020016101d3565b6101ef6102f1366004612932565b611102565b61024d610304366004612579565b6111df565b60075461024d9073ffffffffffffffffffffffffffffffffffffffff1681565b61033c61033736600461296a565b611216565b6040516101d39190612a80565b61035c61035736600461296a565b611674565b6040516101d39190612b51565b6101ef610377366004612b6b565b50565b6101ef610388366004612932565b611797565b60035461024d9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ef6103bb366004612932565b61186c565b6102d36103ce366004612b88565b600460209081526000928352604080842090915290825290205460ff1681565b6101ef6103fc366004612b88565b611931565b61041461040f366004612579565b611a57565b6040516101d39190612bad565b6102b860065481565b6101ef610438366004612c56565b611dda565b6008546102b8565b6102d3610453366004612761565b600060208181529281526040808220909352908152205460ff1681565b6005602052600090815260409020805460018201805460ff909216929161049690612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546104c290612d19565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff909316949193509061054b90612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461057790612d19565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b5050505050908060050180546105d990612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461060590612d19565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff9384169650919492169261069090612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546106bc90612d19565b80156107095780601f106106de57610100808354040283529160200191610709565b820191906000526020600020905b8154815290600101906020018083116106ec57829003601f168201915b505050505090508c565b60095460ff16156107cf5760035473ffffffffffffffffffffffffffffffffffffffff1633146107ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61088c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633148061080057503330145b61088c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016107c1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16156109bc5760008181526001602081905260409091205411806108e2575080600114155b610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e00000000000060448201526064016107c1565b600081815260016020526040812080549161096283612d9c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b600083836040516020016109d5929190612dd1565b6040516020818303038152906040529050610a3b60036040518060400160405280601581526020017f526567697374657220526f6c652048616e646c65720000000000000000000000815250306000604051806020016040528060008152508688611dda565b50505050565b6000818152600560205260409020600881015460ff1615610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016107c1565b80600901544210610b2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c20686173206578706972656400000000000000000000000060448201526064016107c1565b610b3482612060565b15610c06576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff166003811115610b7e57610b7e612592565b1415610bdf57600080610b9083612128565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610bd890600b85019060208401906124e0565b5050505050565b6003815460ff166003811115610bf757610bf7612592565b14156109bc576109bc8161229b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f742070617373000000000000000000000060448201526064016107c1565b336000908152602081815260408083206001845290915290205460ff16610ceb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f74650000000000000000000060448201526064016107c1565b6000828152600560205260409020600881015460ff1615610d68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c72656164792065786563757465640000000000000060448201526064016107c1565b80600901544210610dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016107c1565b600083815260046020908152604080832033845290915290205460ff1615610e59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f7465640000000000000000000000000000000000000060448201526064016107c1565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610eb3908490612df5565b90915550508115610ed9576001816006016000828254610ed39190612df5565b90915550505b505050565b60095460ff1615610f955760035473ffffffffffffffffffffffffffffffffffffffff163314610f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920706172656e742064616f2063616e2075706461746520726f6c657360448201527f20696e20636f756e63696c00000000000000000000000000000000000000000060648201526084016107c1565b611052565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610fc657503330145b611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f6e6c792073656c66206f72206d61746368696e6720726f6c652068616e646c60448201527f65722063616e2075706461746520726f6c657320696e2044414f00000000000060648201526084016107c1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff166109bc5760008181526001602052604081208054916110a283612e0d565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b604080518082018252601b81527f61737369676e526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f41737369676e20726f6c65000000000000000000000000000000000000000000602083015291506111d79060029030600086868a611dda565b505050505050565b600881815481106111ef57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6006546060906112268385612df5565b111561123f578260065461123a9190612e46565b611241565b815b91508167ffffffffffffffff81111561125c5761125c61278d565b60405190808252806020026020018201604052801561130c57816020015b6112f9604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b81526020019060019003908161127a5790505b50905060005b60065461131f8286612df5565b10801561132b57508281105b1561166d576005600061133e8387612df5565b815260208101919091526040908101600020815161018081019092528054829060ff16600381111561137257611372612592565b600381111561138357611383612592565b815260200160018201805461139790612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546113c390612d19565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161145790612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461148390612d19565b80156114d05780601f106114a5576101008083540402835291602001916114d0565b820191906000526020600020905b8154815290600101906020018083116114b357829003601f168201915b505050505081526020016005820180546114e990612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461151590612d19565b80156115625780601f1061153757610100808354040283529160200191611562565b820191906000526020600020905b81548152906001019060200180831161154557829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c0909201916115bb90612d19565b80601f01602080910402602001604051908101604052809291908181526020018280546115e790612d19565b80156116345780601f1061160957610100808354040283529160200191611634565b820191906000526020600020905b81548152906001019060200180831161161757829003601f168201915b50505050508152505082828151811061164f5761164f612e5d565b6020026020010181905250808061166590612e0d565b915050611312565b5092915050565b6008546060906116848385612df5565b111561169d57600854611698908490612e46565b61169f565b815b91508167ffffffffffffffff8111156116ba576116ba61278d565b6040519080825280602002602001820160405280156116e3578160200160208202803683370190505b50905060005b6008546116f68286612df5565b10801561170257508281105b1561166d5760086117138286612df5565b8154811061172357611723612e5d565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061176057611760612e5d565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061178f81612e0d565b9150506116e9565b604080518082018252601b81527f7265766f6b65526f6c652875696e743235362c61646472657373290000000000602080830191909152825173ffffffffffffffffffffffffffffffffffffffff861691810191909152918201859052908190600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600b82527f5265766f6b6520726f6c65000000000000000000000000000000000000000000602083015291506111d79060029030600086868a611dda565b60006040518060600160405280602c815260200161314e602c913990506000819050600085856040516020016118c292919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506111d79060029030600086868a611dda565b33301461199a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064016107c1565b60008211611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e203000000000000000000000000000000000000000000060448201526064016107c1565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b611ad6604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff166003811115611b0857611b08612592565b6003811115611b1957611b19612592565b8152602001600182018054611b2d90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5990612d19565b8015611ba65780601f10611b7b57610100808354040283529160200191611ba6565b820191906000526020600020905b815481529060010190602001808311611b8957829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff16602082015260038201546040820152600482018054606090920191611bed90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1990612d19565b8015611c665780601f10611c3b57610100808354040283529160200191611c66565b820191906000526020600020905b815481529060010190602001808311611c4957829003601f168201915b50505050508152602001600582018054611c7f90612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611cab90612d19565b8015611cf85780601f10611ccd57610100808354040283529160200191611cf8565b820191906000526020600020905b815481529060010190602001808311611cdb57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c090920191611d5190612d19565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7d90612d19565b8015611dca5780601f10611d9f57610100808354040283529160200191611dca565b820191906000526020600020905b815481529060010190602001808311611dad57829003601f168201915b5050505050815250509050919050565b6001876003811115611dee57611dee612592565b1480611e0b57506002876003811115611e0957611e09612592565b145b80611e2757506003876003811115611e2557611e25612592565b145b611e8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016107c1565b6003876003811115611ea157611ea1612592565b141580611ec2575073ffffffffffffffffffffffffffffffffffffffff8516155b611f4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f207461726765740000000000000000000000000000000000000000000000000060648201526084016107c1565b60068054600091600591839182611f6483612e0d565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115611fb757611fb7612592565b02179055508651611fd190600183019060208a01906124e0565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881617905560038101859055835161203090600483019060208701906124e0565b50825161204690600583019060208601906124e0565b506120518242612df5565b60099091015550505050505050565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5482906064906120aa906042612e8c565b6120b49190612ec9565b9050808260060154101580156121205750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546064906120ff906022612e8c565b6121099190612ec9565b8260060154836007015461211d9190612e46565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff166121af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642074617267657420616464726573730000000000000000000060448201526064016107c1565b6000836004016040516121c29190612fd4565b60405180910390209050600081856005016040516020016121e4929190612fe0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff909216919061224a908690613014565b60006040518083038185875af1925050503d8060008114612287576040519150601f19603f3d011682016040523d82523d6000602084013e61228c565b606091505b50909890975095505050505050565b6003815460ff1660038111156122b3576122b3612592565b1461231a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c2074797065000000000000000000000060448201526064016107c1565b60008082600501805461232c90612d19565b80601f016020809104026020016040519081016040528092919081815260200182805461235890612d19565b80156123a55780601f1061237a576101008083540402835291602001916123a5565b820191906000526020600020905b81548152906001019060200180831161238857829003601f168201915b50505050508060200190518101906123bd919061303b565b6007546040517f4fc53bd100000000000000000000000000000000000000000000000000000000815292945090925060009173ffffffffffffffffffffffffffffffffffffffff90911690634fc53bd1906124229030908790879086906004016130e7565b6020604051808303816000875af1158015612441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124659190613130565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550505050565b8280546124ec90612d19565b90600052602060002090601f01602090048101928261250e5760008555612554565b82601f1061252757805160ff1916838001178555612554565b82800160010185558215612554579182015b82811115612554578251825591602001919060010190612539565b50612560929150612564565b5090565b5b808211156125605760008155600101612565565b60006020828403121561258b57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106125f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156126175781810151838201526020016125ff565b83811115610a3b5750506000910152565b600081518084526126408160208601602086016125fc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b61267c818e6125c1565b6101806020820152600061269461018083018e612628565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b606084015282810360808401526126c8818c612628565b905082810360a08401526126dc818b612628565b90508860c08401528760e08401528615156101008401528561012084015261270961014084018615159052565b82810361016084015261271c8185612628565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461037757600080fd5b803561275c8161272f565b919050565b6000806040838503121561277457600080fd5b823561277f8161272f565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156128035761280361278d565b604052919050565b600067ffffffffffffffff8211156128255761282561278d565b5060051b60200190565b801515811461037757600080fd5b803561275c8161282f565b60008060006060848603121561285d57600080fd5b833567ffffffffffffffff81111561287457600080fd5b8401601f8101861361288557600080fd5b8035602061289a6128958361280b565b6127bc565b82815260059290921b830181019181810190898411156128b957600080fd5b938201935b838510156128e05784356128d18161272f565b825293820193908201906128be565b96506128ef905087820161283d565b9450505050604084013590509250925092565b6000806040838503121561291557600080fd5b8235915060208301356129278161282f565b809150509250929050565b60008060006060848603121561294757600080fd5b8335925060208401356129598161272f565b929592945050506040919091013590565b6000806040838503121561297d57600080fd5b50508035926020909101359150565b600061018061299c8484516125c1565b60208301518160208601526129b382860182612628565b91505060408301516129dd604086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516060850152608083015184820360808601526129ff8282612628565b91505060a083015184820360a0860152612a198282612628565b91505060c083015160c085015260e083015160e085015261010080840151612a448287018215159052565b50506101208381015190850152610140808401511515908501526101608084015185830382870152612a768382612628565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612af3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612ae185835161298c565b94509285019290850190600101612aa7565b5092979650505050505050565b600081518084526020808501945080840160005b83811015612b4657815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612b14565b509495945050505050565b602081526000612b646020830184612b00565b9392505050565b600060208284031215612b7d57600080fd5b8135612b648161272f565b60008060408385031215612b9b57600080fd5b8235915060208301356129278161272f565b602081526000612b64602083018461298c565b600067ffffffffffffffff831115612bda57612bda61278d565b612c0b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016127bc565b9050828152838383011115612c1f57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612c4757600080fd5b612b6483833560208501612bc0565b600080600080600080600060e0888a031215612c7157600080fd5b873560048110612c8057600080fd5b9650602088013567ffffffffffffffff80821115612c9d57600080fd5b612ca98b838c01612c36565b9750612cb760408b01612751565b965060608a0135955060808a0135915080821115612cd457600080fd5b612ce08b838c01612c36565b945060a08a0135915080821115612cf657600080fd5b50612d038a828b01612c36565b92505060c0880135905092959891949750929550565b600181811c90821680612d2d57607f821691505b60208210811415612d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612dab57612dab612d6d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b604081526000612de46040830185612b00565b905082151560208301529392505050565b60008219821115612e0857612e08612d6d565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e3f57612e3f612d6d565b5060010190565b600082821015612e5857612e58612d6d565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ec457612ec4612d6d565b500290565b600082612eff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c9080831680612f1e57607f831692505b6020808410821415612f59577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b818015612f6d5760018114612f9c57612fc8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650612fc8565b876000528160002060005b86811015612fc05781548b820152908501908301612fa7565b505084890196505b50505050505092915050565b6000612b648284612f04565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006121206004830184612f04565b600082516130268184602087016125fc565b9190910192915050565b805161275c8161282f565b6000806040838503121561304e57600080fd5b825167ffffffffffffffff81111561306557600080fd5b8301601f8101851361307657600080fd5b805160206130866128958361280b565b82815260059290921b830181019181810190888411156130a557600080fd5b938201935b838510156130cc5784516130bd8161272f565b825293820193908201906130aa565b95506130db9050868201613030565b93505050509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352608060208401526131176080840187612b00565b9415156040840152929092166060909101525092915050565b60006020828403121561314257600080fd5b8151612b648161272f56fe696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a2646970667358221220f425c2271cadcb736e1f306332a97e8b42b615540ae97500d4f3d72596fea61164736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 44,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 48,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roleCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 53,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roleHandlers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IRoleHandler)1128)"
      },
      {
        "astId": 55,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "parentDao",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 96,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 101,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)90_storage)"
      },
      {
        "astId": 103,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 106,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "daoFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(DaoFactory)36"
      },
      {
        "astId": 109,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "subDAOs",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 111,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "councilMode",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DaoFactory)36": {
        "encoding": "inplace",
        "label": "contract DaoFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleHandler)1128": {
        "encoding": "inplace",
        "label": "contract IRoleHandler",
        "numberOfBytes": "20"
      },
      "t_enum(ProposalType)64": {
        "encoding": "inplace",
        "label": "enum DaoContract.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_contract(IRoleHandler)1128)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IRoleHandler)",
        "numberOfBytes": "32",
        "value": "t_contract(IRoleHandler)1128"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)90_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)90_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)90_storage": {
        "encoding": "inplace",
        "label": "struct DaoContract.Proposal",
        "members": [
          {
            "astId": 67,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "pType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposalType)64"
          },
          {
            "astId": 69,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 73,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "fun",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes_storage"
          },
          {
            "astId": 79,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "support",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "totalVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 83,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "deadline",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executionSuccess",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executionResult",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}