{
  "address": "0xd4d0B560C569Ae2a11F70ed396938DF605F2654B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_parentDao",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_initialCitizens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_daoFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "funToCall",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createRegisterRoleHandlerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFactory",
      "outputs": [
        {
          "internalType": "contract DaoFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "delegateVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum DaoContract.ProposalType",
              "name": "pType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "fun",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executionSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "executionResult",
              "type": "bytes"
            }
          ],
          "internalType": "struct DaoContract.Proposal[]",
          "name": "proposalsOut",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "internalRegisterRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentDao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "enum DaoContract.ProposalType",
          "name": "pType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fun",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executionSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "executionResult",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "handlerAddress",
          "type": "address"
        }
      ],
      "name": "registerRoleHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entityAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roleHandlers",
      "outputs": [
        {
          "internalType": "contract IRoleHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subDAOs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "supportVote",
          "type": "bool"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe94d840b7d8870ed4aa6ababb6d44dd3e893078f820c605c6348c450ba19b487",
  "receipt": {
    "to": null,
    "from": "0x4293f83331A21C13621D77e1344bE08Ab046472F",
    "contractAddress": "0xd4d0B560C569Ae2a11F70ed396938DF605F2654B",
    "transactionIndex": 0,
    "gasUsed": "2544857",
    "logsBloom": "0x
    "blockHash": "0x07564a8b52d0a82f3189a500b6ee49818351feeb152d78873ee90e7e0da87f40",
    "transactionHash": "0xe94d840b7d8870ed4aa6ababb6d44dd3e893078f820c605c6348c450ba19b487",
    "logs": [],
    "blockNumber": 26,
    "cumulativeGasUsed": "2544857",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    [
      "0xE970fd7835B6Aa2CBae1Ec30f6b3fa7FeE786E85",
      "0x964DFF15bC398952EFc8a96C394C43645E871715",
      "0xD9f22a894c7A37cEb58a12C8574ECF66cE8C8897"
    ],
    "0xc1eD494aEC51f3C2227450d857eFe9D05E3B76BC"
  ],
  "numDeployments": 3,
  "solcInputHash": "0a6370eba9cc4a0f9e0e61264a97003a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentDao\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_initialCitizens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_daoFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"funToCall\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createRegisterRoleHandlerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFactory\",\"outputs\":[{\"internalType\":\"contract DaoFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"delegateVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"internalType\":\"struct DaoContract.Proposal[]\",\"name\":\"proposalsOut\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"internalRegisterRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentDao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"enum DaoContract.ProposalType\",\"name\":\"pType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fun\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executionSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"executionResult\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddress\",\"type\":\"address\"}],\"name\":\"registerRoleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entityAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roleHandlers\",\"outputs\":[{\"internalType\":\"contract IRoleHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subDAOs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"supportVote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DaoContract.sol\":\"DaoContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"contracts/DaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./IDaoContract.sol\\\";\\nimport \\\"./IRoleHandler.sol\\\";\\n\\n\\ncontract DaoFactory {\\n    function createDao(address _parent, address[] memory _initialCitizens, address _daoFactory) public returns (address) {\\n        DaoContract newDao = new DaoContract(_parent, _initialCitizens, _daoFactory);\\n        return address(newDao);\\n    }\\n}\\n\\ncontract DaoContract is IDaoContract {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n\\n    mapping(uint256 => uint256) public roleCount;\\n\\n    mapping(uint256 => IRoleHandler) public roleHandlers;\\n    \\n    address public parentDao;\\n\\n    modifier onlyGovernance() {\\n        _;\\n    }\\n\\n    enum ProposalType{NONE, TEXT, CALL, CREATE_SUBDAO}\\n\\n    struct Proposal {\\n        ProposalType pType;\\n        string description;\\n        address target;\\n        uint256 amount;\\n        bytes fun;\\n        bytes data;\\n        uint256 support;\\n        uint256 totalVotes;\\n        bool executed;\\n        uint256 deadline;\\n        bool executionSuccess;\\n        bytes executionResult;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public proposalVotes;\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public proposalCount;\\n    \\n    DaoFactory public daoFactory;\\n    address[] public subDAOs;\\n    \\n    constructor(address _parentDao, address[] memory _initialCitizens, address _daoFactory) {\\n        require(_initialCitizens.length > 0, \\\"At least one initial citizen required\\\");\\n        parentDao = _parentDao;\\n  \\n        // Assign initial citizens to a role, e.g., role 1\\n        for (uint i = 0; i < _initialCitizens.length; i++) {\\n            roles[_initialCitizens[i]][1] = true; // Assuming role 1 is for citizens\\n            roleCount[1]++;\\n        }\\n        daoFactory = DaoFactory(_daoFactory);\\n    }\\n\\n    function getProposal(uint256 proposalId) public view returns (Proposal memory proposal) {\\n        return proposals[proposalId];\\n    }\\n    \\n    function getProposals(uint256 from, uint256 count) public view returns (Proposal[] memory proposalsOut) {\\n        count = (from + count <= proposalCount) ? count :  proposalCount - from;\\n        proposalsOut = new Proposal[](count);\\n        for (uint i = 0 ; from + i < proposalCount && i < count; i++) {\\n            proposalsOut[i] = proposals[from + i];\\n        }\\n    }\\n\\n    function createProposal(\\n        ProposalType pType,\\n        string memory description,\\n        address target,\\n        uint256 amount,\\n        bytes memory funToCall,\\n        bytes memory data,\\n        uint256 duration\\n    ) public {\\n        require(pType == ProposalType.TEXT || pType == ProposalType.CALL || pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n        require(pType != ProposalType.CREATE_SUBDAO || target == address(0), \\\"SubDAO proposals must not have a target\\\");\\n        Proposal storage proposal = proposals[proposalCount++];\\n        proposal.pType = pType;\\n        proposal.description = description;\\n        proposal.target = target;\\n        proposal.amount = amount;\\n        proposal.fun = funToCall;\\n        proposal.data = data;\\n        proposal.deadline = block.timestamp + duration;\\n    }\\n\\n    function voteOnProposal(uint256 proposalId, bool supportVote) public {\\n        require(roles[msg.sender][1], \\\"Not authorized to vote\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Voting period has ended\\\");\\n        require(!proposalVotes[proposalId][msg.sender], \\\"Already voted\\\");\\n\\n\\n        proposalVotes[proposalId][msg.sender] = true;\\n        proposal.totalVotes += 1;\\n        if (supportVote) {\\n            proposal.support += 1;\\n        }\\n    }\\n\\n    function checkProposalPassed(uint256 proposalId) internal view returns (bool) {\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 requiredSupport = (roleCount[1] * 66) / 100;\\n        return proposal.support >= requiredSupport && proposal.totalVotes - proposal.support <= (roleCount[1] * (100 - 66)) / 100;\\n    }\\n\\n    function executeProposal(uint256 proposalId) public {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        require(block.timestamp < proposal.deadline, \\\"Proposal has expired\\\");\\n\\n        if (checkProposalPassed(proposalId)) {\\n            proposal.executed = true;\\n            if (proposal.pType == ProposalType.CALL) {\\n                (bool success, bytes memory result) = executeCallProposal(proposal);\\n                proposal.executionSuccess = success;\\n                proposal.executionResult = result;\\n            } else if (proposal.pType == ProposalType.CREATE_SUBDAO) {\\n                createSubDAO(proposal);\\n            }\\n            // Add logic for other types of proposals if needed\\n        } else {\\n            revert(\\\"Proposal did not pass\\\");\\n        }\\n    }\\n\\n    function executeCallProposal(Proposal storage proposal) internal returns (bool, bytes memory) {\\n        require(proposal.target != address(0), \\\"Invalid target address\\\");\\n\\n        // Hash the function signature string to get the function selector\\n        bytes4 funcSelector = bytes4(keccak256(bytes(proposal.fun)));\\n        \\n        // Concatenate the function selector with the parameters\\n        bytes memory payload = abi.encodePacked(funcSelector, proposal.data);\\n        (bool success, bytes memory result) = proposal.target.call{value: proposal.amount}(payload);\\n        return (success, result);\\n    }\\n \\n    function createSubDAO(Proposal storage proposal) internal {\\n        require(proposal.pType == ProposalType.CREATE_SUBDAO, \\\"Invalid proposal type\\\");\\n\\n        address[] memory initialCitizens = abi.decode(proposal.data, (address[]));\\n \\n        DaoContract newSubDAO = DaoContract(daoFactory.createDao(address(this), initialCitizens, address(daoFactory)));\\n        subDAOs.push(address(newSubDAO));\\n\\n        // Additional    initialization for newSubDAO if required\\n    }\\n\\n    function delegateVoting(address delegate) public {\\n        // Delegate voting rights\\n    }\\n\\n    // Function to create a proposal for registering a role handler\\n    function createRegisterRoleHandlerProposal(uint256 role, address handlerAddress, uint256 duration) public {\\n        // Function definition as a string\\n        string memory functionDefinition = \\\"internalRegisterRoleHandler(uint256,address)\\\";\\n\\n        // Convert function definition from string to bytes\\n        bytes memory functionDefinitionBytes = bytes(functionDefinition);\\n\\n        // Encode only the parameters\\n        bytes memory parameters = abi.encode(role, handlerAddress);\\n\\n        // Create a CALL type proposal in the IdentityHandler DAO\\n        createProposal(ProposalType.CALL, \\\"Register Role Handler\\\", address(this), 0, functionDefinitionBytes, parameters, duration);\\n    }\\n\\n    // Internal function to register a role handler\\n    function internalRegisterRoleHandler(uint256 role, address handlerAddress) external {\\n        require(msg.sender == address(this), \\\"Unauthorized\\\");\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n    // register entityType handler\\n    function registerRoleHandler(uint256 role, address handlerAddress) external onlyGovernance {\\n        require(role > 0, \\\"Must be > 0\\\");\\n        roleHandlers[role] = IRoleHandler(handlerAddress);\\n    }\\n\\n\\n    // Functions\\n    function assignRole(address entityAddress, uint256 role) public {\\n        // Record property ownership / add new property to the register\\n        require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only matching role handler handler\\\");\\n        if (!roles[entityAddress][role]) {\\n            roleCount[role]++;\\n            roles[entityAddress][role] = true;\\n        }\\n    }\\n    \\n    function revokeRole(address entityAddress, uint256 role) public {\\n        // Record property ownership / add new property to the register\\n        require(address(roleHandlers[role]) == msg.sender || msg.sender == address(this), \\\"Only matching role handler handler\\\");\\n        if (roles[entityAddress][role]) {\\n            require(roleCount[role] > 1 || role != 1, \\\"Dont kill the last citizen\\\");\\n            roleCount[role]--;\\n            roles[entityAddress][role] = false;\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x223d7704de1f0447842c7652c0e903fc8316a2457acb7215b91941136816104e\"},\"contracts/IDaoContract.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IDaoContract {\\n    // register entityType handler\\n    function registerRoleHandler(uint256 role, address handlerAddress) external;\\n    function assignRole(address entityAddress, uint256 role) external;\\n    function revokeRole(address entityAddress, uint256 role) external;\\n}\\n\",\"keccak256\":\"0xdbe96051fd552b491f5064074b953e7c057c5869dd2827a52c7a9ec55e0ae5eb\"},\"contracts/IRoleHandler.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IRoleHandler {\\n    \\n}\\n\",\"keccak256\":\"0x5e55cd3fdd91d9d601c77f71f5548ef08a58b66f5fc3cd19cf3682aa4c5640dc\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002e1838038062002e188339810160408190526200003491620001c6565b6000825111620000985760405162461bcd60e51b815260206004820152602560248201527f4174206c65617374206f6e6520696e697469616c20636974697a656e207265716044820152641d5a5c995960da1b606482015260840160405180910390fd5b600380546001600160a01b0319166001600160a01b03851617905560005b825181101562000169576001600080858481518110620000da57620000da620002c1565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081206001808352908452918120805460ff19169415159490941790935590527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8054916200014e83620002d7565b919050555080806200016090620002d7565b915050620000b6565b50600780546001600160a01b0319166001600160a01b039290921691909117905550620003019050565b80516001600160a01b0381168114620001ab57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215620001dc57600080fd5b620001e78462000193565b602085810151919450906001600160401b03808211156200020757600080fd5b818701915087601f8301126200021c57600080fd5b815181811115620002315762000231620001b0565b8060051b604051601f19603f83011681018181108582111715620002595762000259620001b0565b60405291825284820192508381018501918a8311156200027857600080fd5b938501935b82851015620002a157620002918562000193565b845293850193928501926200027d565b809750505050505050620002b86040850162000193565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620002fa57634e487b7160e01b600052601160045260246000fd5b5060010190565b612b0780620003116000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063765cb83a116100cd578063bf7a156111610081578063da35c66411610066578063da35c66414610397578063dd3d4746146103a0578063f0723d97146103b357600080fd5b8063bf7a156114610364578063c7f758a81461037757600080fd5b806386f2424a116100b257806386f2424a146103005780638e1f6a2c14610313578063a257091a1461035157600080fd5b8063765cb83a146102cf57806382993ee5146102e057600080fd5b80632e3036c71161012457806348425e2a1161010957806348425e2a1461027c57806348f7f2a31461028f5780635e3b4365146102af57600080fd5b80632e3036c71461023b5780632f27fa241461024e57600080fd5b80630d61b519116101555780630d61b519146101ba5780630f1f4788146101cd5780631614665c1461022857600080fd5b8063013cf08b146101715780630912ed77146101a5575b600080fd5b61018461017f366004612022565b6103de565b60405161019c9c9b9a9998979695949392919061211f565b60405180910390f35b6101b86101b336600461220e565b610681565b005b6101b86101c8366004612022565b610877565b6102036101db366004612022565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019c565b6101b861023636600461223a565b610a9e565b6101b861024936600461220e565b610d14565b61026e61025c366004612022565b60016020526000908152604090205481565b60405190815260200161019c565b61020361028a366004612022565b610e81565b6007546102039073ffffffffffffffffffffffffffffffffffffffff1681565b6102c26102bd36600461226f565b610eb8565b60405161019c9190612385565b6101b86102dd366004612405565b50565b6003546102039073ffffffffffffffffffffffffffffffffffffffff1681565b6101b861030e366004612429565b611316565b610341610321366004612461565b600460209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161019c565b6101b861035f366004612461565b6113e3565b6101b8610372366004612461565b61144c565b61038a610385366004612022565b611509565b60405161019c9190612486565b61026e60065481565b6101b86103ae3660046125ad565b61188c565b6103416103c136600461220e565b600060208181529281526040808220909352908152205460ff1681565b6005602052600090815260409020805460018201805460ff909216929161040490612670565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612670565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff90931694919350906104b990612670565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590612670565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b50505050509080600501805461054790612670565b80601f016020809104026020016040519081016040528092919081815260200182805461057390612670565b80156105c05780601f10610595576101008083540402835291602001916105c0565b820191906000526020600020905b8154815290600101906020018083116105a357829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926105fe90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461062a90612670565b80156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b505050505090508c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314806106b257503330145b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610873576000818152600160208190526040909120541180610799575080600114155b6107ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e000000000000604482015260640161073a565b6000818152600160205260408120805491610819836126f3565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b6000818152600560205260409020600881015460ff16156108f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161073a565b80600901544210610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c206861732065787069726564000000000000000000000000604482015260640161073a565b61096a82611b12565b15610a3c576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff1660038111156109b4576109b461203b565b1415610a15576000806109c683611bda565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610a0e90600b8501906020840190611f89565b5050505050565b6003815460ff166003811115610a2d57610a2d61203b565b14156108735761087381611d4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f7420706173730000000000000000000000604482015260640161073a565b336000908152602081815260408083206001845290915290205460ff16610b21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f746500000000000000000000604482015260640161073a565b6000828152600560205260409020600881015460ff1615610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161073a565b80600901544210610c0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e646564000000000000000000604482015260640161073a565b600083815260046020908152604080832033845290915290205460ff1615610c8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f74656400000000000000000000000000000000000000604482015260640161073a565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610ce9908490612728565b90915550508115610d0f576001816006016000828254610d099190612728565b90915550505b505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610d4557503330145b610dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840161073a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610873576000818152600160205260408120805491610e2183612740565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b60088181548110610e9157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b600654606090610ec88385612728565b1115610ee15782600654610edc9190612779565b610ee3565b815b91508167ffffffffffffffff811115610efe57610efe612499565b604051908082528060200260200182016040528015610fae57816020015b610f9b604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b815260200190600190039081610f1c5790505b50905060005b600654610fc18286612728565b108015610fcd57508281105b1561130f5760056000610fe08387612728565b815260208101919091526040908101600020815161018081019092528054829060ff1660038111156110145761101461203b565b60038111156110255761102561203b565b815260200160018201805461103990612670565b80601f016020809104026020016040519081016040528092919081815260200182805461106590612670565b80156110b25780601f10611087576101008083540402835291602001916110b2565b820191906000526020600020905b81548152906001019060200180831161109557829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff166020820152600382015460408201526004820180546060909201916110f990612670565b80601f016020809104026020016040519081016040528092919081815260200182805461112590612670565b80156111725780601f1061114757610100808354040283529160200191611172565b820191906000526020600020905b81548152906001019060200180831161115557829003601f168201915b5050505050815260200160058201805461118b90612670565b80601f01602080910402602001604051908101604052809291908181526020018280546111b790612670565b80156112045780601f106111d957610100808354040283529160200191611204565b820191906000526020600020905b8154815290600101906020018083116111e757829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c09092019161125d90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461128990612670565b80156112d65780601f106112ab576101008083540402835291602001916112d6565b820191906000526020600020905b8154815290600101906020018083116112b957829003601f168201915b5050505050815250508282815181106112f1576112f1612790565b6020026020010181905250808061130790612740565b915050610fb4565b5092915050565b60006040518060600160405280602c8152602001612aa6602c9139905060008190506000858560405160200161136c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506113db9060029030600086868a61188c565b505050505050565b33301461144c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161073a565b600082116114b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e2030000000000000000000000000000000000000000000604482015260640161073a565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b611588604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff1660038111156115ba576115ba61203b565b60038111156115cb576115cb61203b565b81526020016001820180546115df90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461160b90612670565b80156116585780601f1061162d57610100808354040283529160200191611658565b820191906000526020600020905b81548152906001019060200180831161163b57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161169f90612670565b80601f01602080910402602001604051908101604052809291908181526020018280546116cb90612670565b80156117185780601f106116ed57610100808354040283529160200191611718565b820191906000526020600020905b8154815290600101906020018083116116fb57829003601f168201915b5050505050815260200160058201805461173190612670565b80601f016020809104026020016040519081016040528092919081815260200182805461175d90612670565b80156117aa5780601f1061177f576101008083540402835291602001916117aa565b820191906000526020600020905b81548152906001019060200180831161178d57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c09092019161180390612670565b80601f016020809104026020016040519081016040528092919081815260200182805461182f90612670565b801561187c5780601f106118515761010080835404028352916020019161187c565b820191906000526020600020905b81548152906001019060200180831161185f57829003601f168201915b5050505050815250509050919050565b60018760038111156118a0576118a061203b565b14806118bd575060028760038111156118bb576118bb61203b565b145b806118d9575060038760038111156118d7576118d761203b565b145b61193f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161073a565b60038760038111156119535761195361203b565b141580611974575073ffffffffffffffffffffffffffffffffffffffff8516155b611a00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f2074617267657400000000000000000000000000000000000000000000000000606482015260840161073a565b60068054600091600591839182611a1683612740565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115611a6957611a6961203b565b02179055508651611a8390600183019060208a0190611f89565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8816179055600381018590558351611ae29060048301906020870190611f89565b508251611af89060058301906020860190611f89565b50611b038242612728565b60099091015550505050505050565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548290606490611b5c9060426127bf565b611b6691906127fc565b905080826006015410158015611bd25750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54606490611bb19060226127bf565b611bbb91906127fc565b82600601548360070154611bcf9190612779565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff16611c61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420746172676574206164647265737300000000000000000000604482015260640161073a565b600083600401604051611c749190612907565b6040518091039020905060008185600501604051602001611c96929190612913565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff9092169190611cfc908690612947565b60006040518083038185875af1925050503d8060008114611d39576040519150601f19603f3d011682016040523d82523d6000602084013e611d3e565b606091505b50909890975095505050505050565b6003815460ff166003811115611d6557611d6561203b565b14611dcc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161073a565b6000816005018054611ddd90612670565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0990612670565b8015611e565780601f10611e2b57610100808354040283529160200191611e56565b820191906000526020600020905b815481529060010190602001808311611e3957829003601f168201915b5050505050806020019051810190611e6e9190612963565b6007546040517ea093b700000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff9091169062a093b790611ecc90309086908590600401612a15565b6020604051808303816000875af1158015611eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0f9190612a88565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055505050565b828054611f9590612670565b90600052602060002090601f016020900481019282611fb75760008555611ffd565b82601f10611fd057805160ff1916838001178555611ffd565b82800160010185558215611ffd579182015b82811115611ffd578251825591602001919060010190611fe2565b5061200992915061200d565b5090565b5b80821115612009576000815560010161200e565b60006020828403121561203457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106120a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156120c05781810151838201526020016120a8565b838111156120cf576000848401525b50505050565b600081518084526120ed8160208601602086016120a5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612129818e61206a565b6101806020820152600061214161018083018e6120d5565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612175818c6120d5565b905082810360a0840152612189818b6120d5565b90508860c08401528760e0840152861515610100840152856101208401526121b661014084018615159052565b8281036101608401526121c981856120d5565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146102dd57600080fd5b8035612209816121dc565b919050565b6000806040838503121561222157600080fd5b823561222c816121dc565b946020939093013593505050565b6000806040838503121561224d57600080fd5b823591506020830135801515811461226457600080fd5b809150509250929050565b6000806040838503121561228257600080fd5b50508035926020909101359150565b60006101806122a184845161206a565b60208301518160208601526122b8828601826120d5565b91505060408301516122e2604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608501526080830151848203608086015261230482826120d5565b91505060a083015184820360a086015261231e82826120d5565b91505060c083015160c085015260e083015160e0850152610100808401516123498287018215159052565b5050610120838101519085015261014080840151151590850152610160808401518583038287015261237b83826120d5565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156123f8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526123e6858351612291565b945092850192908501906001016123ac565b5092979650505050505050565b60006020828403121561241757600080fd5b8135612422816121dc565b9392505050565b60008060006060848603121561243e57600080fd5b833592506020840135612450816121dc565b929592945050506040919091013590565b6000806040838503121561247457600080fd5b823591506020830135612264816121dc565b6020815260006124226020830184612291565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561250f5761250f612499565b604052919050565b600067ffffffffffffffff83111561253157612531612499565b61256260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016124c8565b905082815283838301111561257657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261259e57600080fd5b61242283833560208501612517565b600080600080600080600060e0888a0312156125c857600080fd5b8735600481106125d757600080fd5b9650602088013567ffffffffffffffff808211156125f457600080fd5b6126008b838c0161258d565b975061260e60408b016121fe565b965060608a0135955060808a013591508082111561262b57600080fd5b6126378b838c0161258d565b945060a08a013591508082111561264d57600080fd5b5061265a8a828b0161258d565b92505060c0880135905092959891949750929550565b600181811c9082168061268457607f821691505b602082108114156126be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612702576127026126c4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000821982111561273b5761273b6126c4565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612772576127726126c4565b5060010190565b60008282101561278b5761278b6126c4565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127f7576127f76126c4565b500290565b600082612832577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061285157607f831692505b602080841082141561288c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156128a057600181146128cf576128fb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284890196506128fb565b876000528160002060005b868110156128f35781548b8201529085019083016128da565b505084890196505b50505050505092915050565b60006124228284612837565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000611bd26004830184612837565b600082516129598184602087016120a5565b9190910192915050565b6000602080838503121561297657600080fd5b825167ffffffffffffffff8082111561298e57600080fd5b818501915085601f8301126129a257600080fd5b8151818111156129b4576129b4612499565b8060051b91506129c58483016124c8565b81815291830184019184810190888411156129df57600080fd5b938501935b83851015612a0957845192506129f9836121dc565b82825293850193908501906129e4565b98975050505050505050565b60006060820173ffffffffffffffffffffffffffffffffffffffff80871684526020606081860152828751808552608087019150828901945060005b81811015612a6f578551851683529483019491830191600101612a51565b5050809450505080851660408501525050949350505050565b600060208284031215612a9a57600080fd5b8151612422816121dc56fe696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a2646970667358221220b2235b1d7a368bf4ef6a9a1a5ab023c023836d8691c9092d1b0443c41b20f7cd64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061016c5760003560e01c8063765cb83a116100cd578063bf7a156111610081578063da35c66411610066578063da35c66414610397578063dd3d4746146103a0578063f0723d97146103b357600080fd5b8063bf7a156114610364578063c7f758a81461037757600080fd5b806386f2424a116100b257806386f2424a146103005780638e1f6a2c14610313578063a257091a1461035157600080fd5b8063765cb83a146102cf57806382993ee5146102e057600080fd5b80632e3036c71161012457806348425e2a1161010957806348425e2a1461027c57806348f7f2a31461028f5780635e3b4365146102af57600080fd5b80632e3036c71461023b5780632f27fa241461024e57600080fd5b80630d61b519116101555780630d61b519146101ba5780630f1f4788146101cd5780631614665c1461022857600080fd5b8063013cf08b146101715780630912ed77146101a5575b600080fd5b61018461017f366004612022565b6103de565b60405161019c9c9b9a9998979695949392919061211f565b60405180910390f35b6101b86101b336600461220e565b610681565b005b6101b86101c8366004612022565b610877565b6102036101db366004612022565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019c565b6101b861023636600461223a565b610a9e565b6101b861024936600461220e565b610d14565b61026e61025c366004612022565b60016020526000908152604090205481565b60405190815260200161019c565b61020361028a366004612022565b610e81565b6007546102039073ffffffffffffffffffffffffffffffffffffffff1681565b6102c26102bd36600461226f565b610eb8565b60405161019c9190612385565b6101b86102dd366004612405565b50565b6003546102039073ffffffffffffffffffffffffffffffffffffffff1681565b6101b861030e366004612429565b611316565b610341610321366004612461565b600460209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161019c565b6101b861035f366004612461565b6113e3565b6101b8610372366004612461565b61144c565b61038a610385366004612022565b611509565b60405161019c9190612486565b61026e60065481565b6101b86103ae3660046125ad565b61188c565b6103416103c136600461220e565b600060208181529281526040808220909352908152205460ff1681565b6005602052600090815260409020805460018201805460ff909216929161040490612670565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612670565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b5050505060028301546003840154600485018054949573ffffffffffffffffffffffffffffffffffffffff90931694919350906104b990612670565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590612670565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b50505050509080600501805461054790612670565b80601f016020809104026020016040519081016040528092919081815260200182805461057390612670565b80156105c05780601f10610595576101008083540402835291602001916105c0565b820191906000526020600020905b8154815290600101906020018083116105a357829003601f168201915b5050506006840154600785015460088601546009870154600a880154600b890180549899959894975060ff938416965091949216926105fe90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461062a90612670565b80156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b505050505090508c565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff163314806106b257503330145b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff1615610873576000818152600160208190526040909120541180610799575080600114155b6107ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f446f6e74206b696c6c20746865206c61737420636974697a656e000000000000604482015260640161073a565b6000818152600160205260408120805491610819836126f3565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050565b6000818152600560205260409020600881015460ff16156108f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161073a565b80600901544210610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50726f706f73616c206861732065787069726564000000000000000000000000604482015260640161073a565b61096a82611b12565b15610a3c576008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002815460ff1660038111156109b4576109b461203b565b1415610a15576000806109c683611bda565b600a850180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905580519193509150610a0e90600b8501906020840190611f89565b5050505050565b6003815460ff166003811115610a2d57610a2d61203b565b14156108735761087381611d4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50726f706f73616c20646964206e6f7420706173730000000000000000000000604482015260640161073a565b336000908152602081815260408083206001845290915290205460ff16610b21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f7420617574686f72697a656420746f20766f746500000000000000000000604482015260640161073a565b6000828152600560205260409020600881015460ff1615610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50726f706f73616c20616c726561647920657865637574656400000000000000604482015260640161073a565b80600901544210610c0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f566f74696e6720706572696f642068617320656e646564000000000000000000604482015260640161073a565b600083815260046020908152604080832033845290915290205460ff1615610c8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f416c726561647920766f74656400000000000000000000000000000000000000604482015260640161073a565b6000838152600460209081526040808320338452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560078301805491929091610ce9908490612728565b90915550508115610d0f576001816006016000828254610d099190612728565b90915550505b505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16331480610d4557503330145b610dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c79206d61746368696e6720726f6c652068616e646c65722068616e646c60448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840161073a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020818152604080832084845290915290205460ff16610873576000818152600160205260408120805491610e2183612740565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208181526040808320848452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555050565b60088181548110610e9157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b600654606090610ec88385612728565b1115610ee15782600654610edc9190612779565b610ee3565b815b91508167ffffffffffffffff811115610efe57610efe612499565b604051908082528060200260200182016040528015610fae57816020015b610f9b604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b815260200190600190039081610f1c5790505b50905060005b600654610fc18286612728565b108015610fcd57508281105b1561130f5760056000610fe08387612728565b815260208101919091526040908101600020815161018081019092528054829060ff1660038111156110145761101461203b565b60038111156110255761102561203b565b815260200160018201805461103990612670565b80601f016020809104026020016040519081016040528092919081815260200182805461106590612670565b80156110b25780601f10611087576101008083540402835291602001916110b2565b820191906000526020600020905b81548152906001019060200180831161109557829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff166020820152600382015460408201526004820180546060909201916110f990612670565b80601f016020809104026020016040519081016040528092919081815260200182805461112590612670565b80156111725780601f1061114757610100808354040283529160200191611172565b820191906000526020600020905b81548152906001019060200180831161115557829003601f168201915b5050505050815260200160058201805461118b90612670565b80601f01602080910402602001604051908101604052809291908181526020018280546111b790612670565b80156112045780601f106111d957610100808354040283529160200191611204565b820191906000526020600020905b8154815290600101906020018083116111e757829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c09092019161125d90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461128990612670565b80156112d65780601f106112ab576101008083540402835291602001916112d6565b820191906000526020600020905b8154815290600101906020018083116112b957829003601f168201915b5050505050815250508282815181106112f1576112f1612790565b6020026020010181905250808061130790612740565b915050610fb4565b5092915050565b60006040518060600160405280602c8152602001612aa6602c9139905060008190506000858560405160200161136c92919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152601582527f526567697374657220526f6c652048616e646c65720000000000000000000000602083015291506113db9060029030600086868a61188c565b505050505050565b33301461144c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015260640161073a565b600082116114b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d757374206265203e2030000000000000000000000000000000000000000000604482015260640161073a565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b611588604080516101808101909152806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600081526020016000815260200160001515815260200160008152602001600015158152602001606081525090565b60008281526005602052604090819020815161018081019092528054829060ff1660038111156115ba576115ba61203b565b60038111156115cb576115cb61203b565b81526020016001820180546115df90612670565b80601f016020809104026020016040519081016040528092919081815260200182805461160b90612670565b80156116585780601f1061162d57610100808354040283529160200191611658565b820191906000526020600020905b81548152906001019060200180831161163b57829003601f168201915b5050509183525050600282015473ffffffffffffffffffffffffffffffffffffffff1660208201526003820154604082015260048201805460609092019161169f90612670565b80601f01602080910402602001604051908101604052809291908181526020018280546116cb90612670565b80156117185780601f106116ed57610100808354040283529160200191611718565b820191906000526020600020905b8154815290600101906020018083116116fb57829003601f168201915b5050505050815260200160058201805461173190612670565b80601f016020809104026020016040519081016040528092919081815260200182805461175d90612670565b80156117aa5780601f1061177f576101008083540402835291602001916117aa565b820191906000526020600020905b81548152906001019060200180831161178d57829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff9081161515606083015260098301546080830152600a83015416151560a0820152600b8201805460c09092019161180390612670565b80601f016020809104026020016040519081016040528092919081815260200182805461182f90612670565b801561187c5780601f106118515761010080835404028352916020019161187c565b820191906000526020600020905b81548152906001019060200180831161185f57829003601f168201915b5050505050815250509050919050565b60018760038111156118a0576118a061203b565b14806118bd575060028760038111156118bb576118bb61203b565b145b806118d9575060038760038111156118d7576118d761203b565b145b61193f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161073a565b60038760038111156119535761195361203b565b141580611974575073ffffffffffffffffffffffffffffffffffffffff8516155b611a00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53756244414f2070726f706f73616c73206d757374206e6f742068617665206160448201527f2074617267657400000000000000000000000000000000000000000000000000606482015260840161073a565b60068054600091600591839182611a1683612740565b90915550815260208101919091526040016000208054909150889082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836003811115611a6957611a6961203b565b02179055508651611a8390600183019060208a0190611f89565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8816179055600381018590558351611ae29060048301906020870190611f89565b508251611af89060058301906020860190611f89565b50611b038242612728565b60099091015550505050505050565b6000818152600560209081526040822060018084529091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548290606490611b5c9060426127bf565b611b6691906127fc565b905080826006015410158015611bd25750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54606490611bb19060226127bf565b611bbb91906127fc565b82600601548360070154611bcf9190612779565b11155b949350505050565b600281015460009060609073ffffffffffffffffffffffffffffffffffffffff16611c61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420746172676574206164647265737300000000000000000000604482015260640161073a565b600083600401604051611c749190612907565b6040518091039020905060008185600501604051602001611c96929190612913565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260028701546003880154919350600092839273ffffffffffffffffffffffffffffffffffffffff9092169190611cfc908690612947565b60006040518083038185875af1925050503d8060008114611d39576040519150601f19603f3d011682016040523d82523d6000602084013e611d3e565b606091505b50909890975095505050505050565b6003815460ff166003811115611d6557611d6561203b565b14611dcc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c69642070726f706f73616c20747970650000000000000000000000604482015260640161073a565b6000816005018054611ddd90612670565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0990612670565b8015611e565780601f10611e2b57610100808354040283529160200191611e56565b820191906000526020600020905b815481529060010190602001808311611e3957829003601f168201915b5050505050806020019051810190611e6e9190612963565b6007546040517ea093b700000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff9091169062a093b790611ecc90309086908590600401612a15565b6020604051808303816000875af1158015611eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0f9190612a88565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055505050565b828054611f9590612670565b90600052602060002090601f016020900481019282611fb75760008555611ffd565b82601f10611fd057805160ff1916838001178555611ffd565b82800160010185558215611ffd579182015b82811115611ffd578251825591602001919060010190611fe2565b5061200992915061200d565b5090565b5b80821115612009576000815560010161200e565b60006020828403121561203457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106120a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b838110156120c05781810151838201526020016120a8565b838111156120cf576000848401525b50505050565b600081518084526120ed8160208601602086016120a5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b612129818e61206a565b6101806020820152600061214161018083018e6120d5565b73ffffffffffffffffffffffffffffffffffffffff8d1660408401528b60608401528281036080840152612175818c6120d5565b905082810360a0840152612189818b6120d5565b90508860c08401528760e0840152861515610100840152856101208401526121b661014084018615159052565b8281036101608401526121c981856120d5565b9f9e505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146102dd57600080fd5b8035612209816121dc565b919050565b6000806040838503121561222157600080fd5b823561222c816121dc565b946020939093013593505050565b6000806040838503121561224d57600080fd5b823591506020830135801515811461226457600080fd5b809150509250929050565b6000806040838503121561228257600080fd5b50508035926020909101359150565b60006101806122a184845161206a565b60208301518160208601526122b8828601826120d5565b91505060408301516122e2604086018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015160608501526080830151848203608086015261230482826120d5565b91505060a083015184820360a086015261231e82826120d5565b91505060c083015160c085015260e083015160e0850152610100808401516123498287018215159052565b5050610120838101519085015261014080840151151590850152610160808401518583038287015261237b83826120d5565b9695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156123f8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526123e6858351612291565b945092850192908501906001016123ac565b5092979650505050505050565b60006020828403121561241757600080fd5b8135612422816121dc565b9392505050565b60008060006060848603121561243e57600080fd5b833592506020840135612450816121dc565b929592945050506040919091013590565b6000806040838503121561247457600080fd5b823591506020830135612264816121dc565b6020815260006124226020830184612291565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561250f5761250f612499565b604052919050565b600067ffffffffffffffff83111561253157612531612499565b61256260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016124c8565b905082815283838301111561257657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261259e57600080fd5b61242283833560208501612517565b600080600080600080600060e0888a0312156125c857600080fd5b8735600481106125d757600080fd5b9650602088013567ffffffffffffffff808211156125f457600080fd5b6126008b838c0161258d565b975061260e60408b016121fe565b965060608a0135955060808a013591508082111561262b57600080fd5b6126378b838c0161258d565b945060a08a013591508082111561264d57600080fd5b5061265a8a828b0161258d565b92505060c0880135905092959891949750929550565b600181811c9082168061268457607f821691505b602082108114156126be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612702576127026126c4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000821982111561273b5761273b6126c4565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612772576127726126c4565b5060010190565b60008282101561278b5761278b6126c4565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127f7576127f76126c4565b500290565b600082612832577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8054600090600181811c908083168061285157607f831692505b602080841082141561288c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8180156128a057600181146128cf576128fb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284890196506128fb565b876000528160002060005b868110156128f35781548b8201529085019083016128da565b505084890196505b50505050505092915050565b60006124228284612837565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000611bd26004830184612837565b600082516129598184602087016120a5565b9190910192915050565b6000602080838503121561297657600080fd5b825167ffffffffffffffff8082111561298e57600080fd5b818501915085601f8301126129a257600080fd5b8151818111156129b4576129b4612499565b8060051b91506129c58483016124c8565b81815291830184019184810190888411156129df57600080fd5b938501935b83851015612a0957845192506129f9836121dc565b82825293850193908501906129e4565b98975050505050505050565b60006060820173ffffffffffffffffffffffffffffffffffffffff80871684526020606081860152828751808552608087019150828901945060005b81811015612a6f578551851683529483019491830191600101612a51565b5050809450505080851660408501525050949350505050565b600060208284031215612a9a57600080fd5b8151612422816121dc56fe696e7465726e616c5265676973746572526f6c6548616e646c65722875696e743235362c6164647265737329a2646970667358221220b2235b1d7a368bf4ef6a9a1a5ab023c023836d8691c9092d1b0443c41b20f7cd64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 41,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 45,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roleCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 50,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "roleHandlers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_contract(IRoleHandler)919)"
      },
      {
        "astId": 52,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "parentDao",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 93,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 98,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)87_storage)"
      },
      {
        "astId": 100,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 103,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "daoFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(DaoFactory)33"
      },
      {
        "astId": 106,
        "contract": "contracts/DaoContract.sol:DaoContract",
        "label": "subDAOs",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(DaoFactory)33": {
        "encoding": "inplace",
        "label": "contract DaoFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleHandler)919": {
        "encoding": "inplace",
        "label": "contract IRoleHandler",
        "numberOfBytes": "20"
      },
      "t_enum(ProposalType)61": {
        "encoding": "inplace",
        "label": "enum DaoContract.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_contract(IRoleHandler)919)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => contract IRoleHandler)",
        "numberOfBytes": "32",
        "value": "t_contract(IRoleHandler)919"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)87_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DaoContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)87_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)87_storage": {
        "encoding": "inplace",
        "label": "struct DaoContract.Proposal",
        "members": [
          {
            "astId": 64,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "pType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposalType)61"
          },
          {
            "astId": 66,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 68,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 70,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 72,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "fun",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          },
          {
            "astId": 74,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes_storage"
          },
          {
            "astId": 76,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "support",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "totalVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 82,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "deadline",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executionSuccess",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 86,
            "contract": "contracts/DaoContract.sol:DaoContract",
            "label": "executionResult",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}